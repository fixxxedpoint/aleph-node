
# This file was @generated by crate2nix 0.10.0 with the command:
#   "generate" "-o" "Cargo.nix"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrateForPkgs ? if buildRustCrate != null
    then lib.warn "crate2nix: Passing `buildRustCrate` as argument to Cargo.nix is deprecated. If you don't customize `buildRustCrate`, replace `callPackage ./Cargo.nix {}` by `import ./Cargo.nix { inherit pkgs; }`, and if you need to customize `buildRustCrate`, use `buildRustCrateForPkgs` instead." (_: buildRustCrate)
    else pkgs: pkgs.buildRustCrate
  # Deprecated
, buildRustCrate ? null
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Used for conditional compilation based on CPU feature detection.
, targetFeatures ? []
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #


  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "aleph-node" = rec {
      packageId = "aleph-node";
      build = internal.buildRustCrateWithFeatures {
        packageId = "aleph-node";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "aleph-runtime" = rec {
      packageId = "aleph-runtime";
      build = internal.buildRustCrateWithFeatures {
        packageId = "aleph-runtime";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "finality-aleph" = rec {
      packageId = "finality-aleph";
      build = internal.buildRustCrateWithFeatures {
        packageId = "finality-aleph";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "pallet-aleph" = rec {
      packageId = "pallet-aleph";
      build = internal.buildRustCrateWithFeatures {
        packageId = "pallet-aleph";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "pallet-elections" = rec {
      packageId = "pallet-elections";
      build = internal.buildRustCrateWithFeatures {
        packageId = "pallet-elections";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "primitives" = rec {
      packageId = "primitives";
      build = internal.buildRustCrateWithFeatures {
        packageId = "primitives";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  # A derivation that joins the outputs of all workspace members together.
  allWorkspaceMembers = pkgs.symlinkJoin {
      name = "all-workspace-members";
      paths =
        let members = builtins.attrValues workspaceMembers;
        in builtins.map (m: m.build) members;
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "Inflector" = rec {
        crateName = "Inflector";
        version = "0.11.4";
        edition = "2015";
        sha256 = "1lqmcni21ifzyq41fhz6k1j2b23cmsx469s4g4sf01l78miqqhzy";
        libName = "inflector";
        authors = [
          "Josh Teeter<joshteeter@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
        ];
        features = {
          "default" = [ "heavyweight" ];
          "heavyweight" = [ "regex" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "heavyweight" "lazy_static" "regex" ];
      };
      "addr2line 0.16.0" = rec {
        crateName = "addr2line";
        version = "0.16.0";
        edition = "2015";
        sha256 = "1kday4xm4ky46ihsys3ch1vf5cv3lfjclfi610mpsb1xz6vz4q9y";
        dependencies = [
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
        ];
        features = {
          "default" = [ "rustc-demangle" "cpp_demangle" "std-object" "fallible-iterator" "smallvec" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "gimli/rustc-dep-of-std" ];
          "std" = [ "gimli/std" ];
          "std-object" = [ "std" "object" "object/std" "object/compression" "gimli/endian-reader" ];
        };
      };
      "addr2line 0.17.0" = rec {
        crateName = "addr2line";
        version = "0.17.0";
        edition = "2015";
        sha256 = "0sw16zqy6w0ar633z69m7lw6gb0k1y7xj3387a8wly43ij5div5r";
        dependencies = [
          {
            name = "gimli";
            packageId = "gimli 0.26.1";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
        ];
        features = {
          "default" = [ "rustc-demangle" "cpp_demangle" "std-object" "fallible-iterator" "smallvec" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "gimli/rustc-dep-of-std" ];
          "std" = [ "gimli/std" ];
          "std-object" = [ "std" "object" "object/std" "object/compression" "gimli/endian-reader" ];
        };
      };
      "adler" = rec {
        crateName = "adler";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1zim79cvzd5yrkzl3nyfx0avijwgk9fqv3yrscdy1cc79ih02qpj";
        authors = [
          "Jonas Schievink <jonasschievink@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "aead" = rec {
        crateName = "aead";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0xw8kp9j1whfdxhgmr2qf9xgslkg52zh6gzmhsh13y9w3s73nq8b";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
          "std" = [ "alloc" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "aes" = rec {
        crateName = "aes";
        version = "0.7.5";
        edition = "2018";
        sha256 = "1f0sdx2fsa8w3l7xzsyi9ry3shvnnsgc0znh50if9fm95vslg2wy";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.2.1";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
        };
      };
      "aes-gcm" = rec {
        crateName = "aes-gcm";
        version = "0.9.4";
        edition = "2018";
        sha256 = "1xndncn1phjb7pjam63vl0yp7h8jh95m0yxanr1092vx7al8apyz";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes";
            optional = true;
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "ghash";
            packageId = "ghash";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "armv8" = [ "aes/armv8" "ghash/armv8" ];
          "default" = [ "aes" "alloc" ];
          "force-soft" = [ "aes/force-soft" "ghash/force-soft" ];
          "heapless" = [ "aead/heapless" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" ];
      };
      "ahash" = rec {
        crateName = "ahash";
        version = "0.7.6";
        edition = "2018";
        sha256 = "0isw672fiwx8cjl040jrck6pi85xcszkz6q0xsqkiy6qjl31mdgw";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.5";
            target = { target, features }: ((target."os" == "linux") || (target."os" == "android") || (target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios") || (target."os" == "freebsd") || (target."os" == "openbsd") || (target."os" == "netbsd") || (target."os" == "dragonfly") || (target."os" == "solaris") || (target."os" == "illumos") || (target."os" == "fuchsia") || (target."os" == "redox") || (target."os" == "cloudabi") || (target."os" == "haiku") || (target."os" == "vxworks") || (target."os" == "emscripten") || (target."os" == "wasi"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."arch" == "arm") && (target."os" == "none")));
            features = [ "alloc" ];
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "std" ];
        };
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.18";
        edition = "2018";
        sha256 = "0vv50b3nvkhyy7x7ip19qnsq11bqlnffkmj2yx2xlyk5wzawydqy";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "aleph-bft" = rec {
        crateName = "aleph-bft";
        version = "0.8.4";
        edition = "2018";
        sha256 = "0fdd9vq5f2872syv1czpd6w6cin5cs0yvbxp3l9rn022k3njd3ak";
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "bit-vec";
            packageId = "bit-vec";
          }
          {
            name = "derivative";
            packageId = "derivative";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
        ];
        devDependencies = [
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
        ];

      };
      "aleph-node" = rec {
        crateName = "aleph-node";
        version = "0.4.0";
        edition = "2021";
        crateBin = [
          { name = "aleph-node"; path = "src/main.rs"; }
        ];
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./bin/node; }
          else ./bin/node;
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "aleph-runtime";
            packageId = "aleph-runtime";
          }
          {
            name = "finality-aleph";
            packageId = "finality-aleph";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hex-literal";
            packageId = "hex-literal";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.39.1";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pallet-staking";
            packageId = "pallet-staking";
          }
          {
            name = "pallet-transaction-payment-rpc";
            packageId = "pallet-transaction-payment-rpc";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "primitives";
            packageId = "primitives";
            rename = "aleph-primitives";
          }
          {
            name = "sc-basic-authorship";
            packageId = "sc-basic-authorship";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-cli";
            packageId = "sc-cli";
            features = [ "wasmtime" ];
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-consensus-aura";
            packageId = "sc-consensus-aura";
          }
          {
            name = "sc-executor";
            packageId = "sc-executor";
            features = [ "wasmtime" ];
          }
          {
            name = "sc-keystore";
            packageId = "sc-keystore";
          }
          {
            name = "sc-rpc";
            packageId = "sc-rpc";
          }
          {
            name = "sc-rpc-api";
            packageId = "sc-rpc-api";
          }
          {
            name = "sc-service";
            packageId = "sc-service";
            features = [ "wasmtime" ];
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sc-transaction-pool";
            packageId = "sc-transaction-pool";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-consensus-aura";
            packageId = "sp-consensus-aura";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-timestamp";
            packageId = "sp-timestamp";
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "substrate-frame-rpc-system";
            packageId = "substrate-frame-rpc-system";
          }
        ];
        buildDependencies = [
          {
            name = "substrate-build-script-utils";
            packageId = "substrate-build-script-utils";
          }
        ];
        features = {
          "short_session" = [ "aleph-runtime/short_session" "aleph-primitives/short_session" ];
        };
        resolvedDefaultFeatures = [ "default" "short_session" ];
      };
      "aleph-runtime" = rec {
        crateName = "aleph-runtime";
        version = "0.4.0";
        edition = "2021";
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./bin/runtime; }
          else ./bin/runtime;
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "frame-executive";
            packageId = "frame-executive";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system-rpc-runtime-api";
            packageId = "frame-system-rpc-runtime-api";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-aleph";
            packageId = "pallet-aleph";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-aura";
            packageId = "pallet-aura";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-authorship";
            packageId = "pallet-authorship";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-balances";
            packageId = "pallet-balances";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-elections";
            packageId = "pallet-elections";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-multisig";
            packageId = "pallet-multisig";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-randomness-collective-flip";
            packageId = "pallet-randomness-collective-flip";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-scheduler";
            packageId = "pallet-scheduler";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-session";
            packageId = "pallet-session";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-staking";
            packageId = "pallet-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-sudo";
            packageId = "pallet-sudo";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-transaction-payment";
            packageId = "pallet-transaction-payment";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-transaction-payment-rpc-runtime-api";
            packageId = "pallet-transaction-payment-rpc-runtime-api";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-treasury";
            packageId = "pallet-treasury";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-utility";
            packageId = "pallet-utility";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-vesting";
            packageId = "pallet-vesting";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "primitives";
            packageId = "primitives";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-aura";
            packageId = "sp-consensus-aura";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-offchain";
            packageId = "sp-offchain";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-session";
            packageId = "sp-session";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "substrate-wasm-builder";
            packageId = "substrate-wasm-builder 4.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "short_session" = [ "primitives/short_session" ];
          "std" = [ "codec/std" "frame-executive/std" "frame-support/std" "pallet-aleph/std" "pallet-aura/std" "pallet-authorship/std" "pallet-balances/std" "pallet-elections/std" "pallet-randomness-collective-flip/std" "pallet-session/std" "pallet-staking/std" "pallet-sudo/std" "pallet-timestamp/std" "pallet-transaction-payment/std" "pallet-treasury/std" "pallet-vesting/std" "pallet-multisig/std" "pallet-utility/std" "serde" "sp-api/std" "sp-block-builder/std" "sp-consensus-aura/std" "sp-core/std" "sp-inherents/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-transaction-pool/std" "sp-version/std" "frame-system/std" "sp-offchain/std" "pallet-transaction-payment-rpc-runtime-api/std" "frame-system-rpc-runtime-api/std" "primitives/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "short_session" "std" ];
      };
      "ansi_term" = rec {
        crateName = "ansi_term";
        version = "0.12.1";
        edition = "2015";
        sha256 = "1ljmkbilxgmhavxvxqa7qvm6f3fjggi7q2l3a72q9x0cxjvrnanm";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "processenv" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "anyhow" = rec {
        crateName = "anyhow";
        version = "1.0.55";
        edition = "2018";
        sha256 = "1kc4wsayyp6drb8ybisll07jvfy8wkm28hlg0sdf2052ydmbi6qm";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "approx" = rec {
        crateName = "approx";
        version = "0.5.1";
        edition = "2015";
        sha256 = "1ilpv3dgd58rasslss0labarq7jawxmivk17wsh8wmkdm3q15cfa";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];

      };
      "arrayvec 0.4.12" = rec {
        crateName = "arrayvec";
        version = "0.4.12";
        edition = "2015";
        sha256 = "1fdiv5m627gh6flp4mpmi1mh647imm9x423licsr11psz97d97yd";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "nodrop";
            packageId = "nodrop";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
      "arrayvec 0.5.2" = rec {
        crateName = "arrayvec";
        version = "0.5.2";
        edition = "2018";
        sha256 = "12q6hn01x5435bprwlb7w9m7817dyfq55yrl4psygr78bp32zdi3";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "array-sizes-33-128" "default" "std" ];
      };
      "arrayvec 0.7.2" = rec {
        crateName = "arrayvec";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1mjl8jjqxpl0x7sm9cij61cppi7yi38cdrd1l8zjw7h7qxk2v9cd";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "asn1_der" = rec {
        crateName = "asn1_der";
        version = "0.7.5";
        edition = "2018";
        sha256 = "08aawbxps19a4cqgq86yhxsigb2z05491p4rgh18lacci15iybg2";
        authors = [
          "KizzyCode Software Labs./Keziah Biermann <development@kizzycode.de>"
        ];
        features = {
          "default" = [ "native_types" ];
          "no_panic" = [ "no-panic" ];
        };
        resolvedDefaultFeatures = [ "default" "native_types" ];
      };
      "async-channel" = rec {
        crateName = "async-channel";
        version = "1.6.1";
        edition = "2018";
        sha256 = "06b3sq2hd8qwl2xxlc4qalg6xw3l9b41w4sym9g0q70mf93dc511";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
        ];

      };
      "async-executor" = rec {
        crateName = "async-executor";
        version = "1.4.1";
        edition = "2018";
        sha256 = "0rd9sd0rksvjwx4zzy6c69qcd7bwp3z42rpiiizfnbm2w2srn7w7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "async-global-executor" = rec {
        crateName = "async-global-executor";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xjacr43sbz2zk0zygpd9k14n95wa61x8n9i8mcdwdkz659fr1lm";
        authors = [
          "Marc-Antoine Perennou <Marc-Antoine@Perennou.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-executor";
            packageId = "async-executor";
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
          }
          {
            name = "async-mutex";
            packageId = "async-mutex";
          }
          {
            name = "blocking";
            packageId = "blocking";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" ];
          "tokio02" = [ "tokio02-crate" ];
          "tokio03" = [ "tokio03-crate" ];
        };
        resolvedDefaultFeatures = [ "async-io" "default" ];
      };
      "async-io" = rec {
        crateName = "async-io";
        version = "1.6.0";
        edition = "2018";
        sha256 = "0yv0xv7nhkdhyz9z5q1hq9bavlmkrysrd1q30h69yhzjg6jfc4d8";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "parking";
            packageId = "parking";
          }
          {
            name = "polling";
            packageId = "polling";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            features = [ "all" ];
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" ];
          }
        ];

      };
      "async-lock" = rec {
        crateName = "async-lock";
        version = "2.5.0";
        edition = "2018";
        sha256 = "1dkps300paviz3npwaq38n0sc92fv55b20mr3fizp0hp34fifyp9";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-mutex" = rec {
        crateName = "async-mutex";
        version = "1.4.0";
        edition = "2018";
        sha256 = "0vhmsscqx48dmxw0yir6az0pbwcq6qjvcv2f43vdpn95vd9bi7a7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-process" = rec {
        crateName = "async-process";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1impq0jj8nm9rr0afwq484ax4mq9ibk4k3hncxns19m2wdkp04w3";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "blocking";
            packageId = "blocking";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "signal-hook";
            packageId = "signal-hook";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "iterator" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "winbase" "winnt" ];
          }
        ];

      };
      "async-std" = rec {
        crateName = "async-std";
        version = "1.10.0";
        edition = "2018";
        sha256 = "0lprzax4jkslfpk9y3m721ad5jxh98g3jivvsinvi6hnala6y1gq";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Friedel Ziegelmayer <me@dignifiedquire.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
            optional = true;
          }
          {
            name = "async-global-executor";
            packageId = "async-global-executor";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
            features = [ "async-io" ];
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "async-lock";
            packageId = "async-lock";
            optional = true;
          }
          {
            name = "async-process";
            packageId = "async-process";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "gloo-timers";
            packageId = "gloo-timers";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "futures" ];
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "pin-project-lite" ];
          "attributes" = [ "async-attributes" ];
          "default" = [ "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite" "gloo-timers" ];
          "docs" = [ "attributes" "unstable" "default" ];
          "std" = [ "alloc" "crossbeam-utils" "futures-core/std" "futures-io" "memchr" "once_cell" "pin-utils" "slab" "wasm-bindgen-futures" "futures-channel" "async-channel" "async-lock" ];
          "tokio02" = [ "async-global-executor/tokio02" ];
          "tokio03" = [ "async-global-executor/tokio03" ];
          "tokio1" = [ "async-global-executor/tokio" ];
          "unstable" = [ "std" "async-io" "async-process" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-channel" "async-global-executor" "async-io" "async-lock" "async-process" "crossbeam-utils" "default" "futures-channel" "futures-core" "futures-io" "futures-lite" "gloo-timers" "kv-log-macro" "log" "memchr" "num_cpus" "once_cell" "pin-project-lite" "pin-utils" "slab" "std" "unstable" "wasm-bindgen-futures" ];
      };
      "async-std-resolver" = rec {
        crateName = "async-std-resolver";
        version = "0.20.4";
        edition = "2018";
        sha256 = "1w740k9v8j49qsrmys1gg62vvwyzl1dvhm28xxvj8fnzmxvfgwyv";
        libName = "async_std_resolver";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "attributes" ];
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
            features = [ "testing" ];
          }
        ];
        features = {
          "default" = [ "system-config" ];
          "system-config" = [ "trust-dns-resolver/system-config" ];
        };
        resolvedDefaultFeatures = [ "default" "system-config" ];
      };
      "async-task" = rec {
        crateName = "async-task";
        version = "4.1.0";
        edition = "2018";
        sha256 = "1s5yb9b2b1b5jdsk8s6fxaxzc908vj42sd7xlc837xds45hk0zb7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-trait" = rec {
        crateName = "async-trait";
        version = "0.1.52";
        edition = "2018";
        sha256 = "1qv5l9izrd96zcrlcr4x1kh41ylq1d9702f3vl8w11m2rb67l6h6";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "asynchronous-codec 0.5.0" = rec {
        crateName = "asynchronous-codec";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1mj729khvw21adjdvkywnw7wg2rjxgh7kyk30wpasbb2lgq02i7v";
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            features = [ "io" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
        ];
        features = {
          "cbor" = [ "serde" "serde_cbor" ];
          "json" = [ "serde" "serde_json" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "asynchronous-codec 0.6.0" = rec {
        crateName = "asynchronous-codec";
        version = "0.6.0";
        edition = "2018";
        sha256 = "147ndvbc14whavvyqrdjw769bh7199kdkhmqbz253gzdwmj53pph";
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            features = [ "io" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
        ];
        features = {
          "cbor" = [ "serde" "serde_cbor" ];
          "json" = [ "serde" "serde_json" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "atomic" = rec {
        crateName = "atomic";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0k135q1qfmxxyzrlhr47r0j38r5fnd4163rgl552qxyagrk853dq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "fallback" ];
        };
        resolvedDefaultFeatures = [ "default" "fallback" ];
      };
      "atomic-waker" = rec {
        crateName = "atomic-waker";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0ansiq5vlw684fhks2x4a4is2rqlbv50q5mi8x0fxxvx5q2p8lq6";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.14";
        edition = "2015";
        sha256 = "1s7yslcs6a28c5vz7jwj63lkfgyx8mx99fdirlhi9lbhhzhrpcyr";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];

      };
      "autocfg" = rec {
        crateName = "autocfg";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1ylp3cb47ylzabimazvbz9ms6ap784zhb6syaz6c1jqpmcmq0s6l";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.64";
        edition = "2018";
        sha256 = "07y3z67h9mybdw4l1cjrlqw3ng7h7m4y374d4jmk7ki3h3p1s4jy";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line 0.17.0";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "read_core" "elf" "macho" "pe" "unaligned" "archive" ];
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/memoryapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/tlhelp32" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base-x" = rec {
        crateName = "base-x";
        version = "0.2.8";
        edition = "2015";
        sha256 = "12zj7vgrf7wlc46f6xxc14dq1r6z6vmhn51vkdkp04q37lz1ylm4";
        authors = [
          "Alex R. <alexei.rudenko@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base58" = rec {
        crateName = "base58";
        version = "0.2.0";
        edition = "2015";
        sha256 = "10gmsivqfg1rpg8rzv1xbdsaa379yplxjy581na6hak8wqdzw1v1";
        authors = [
          "debris <marek.kotewicz@gmail.com>"
        ];

      };
      "base64 0.12.3" = rec {
        crateName = "base64";
        version = "0.12.3";
        edition = "2018";
        sha256 = "1zq33had71xh48n17g4kqs96szhx3yh7qibzwi4fk217n3vz0h9l";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.13.0" = rec {
        crateName = "base64";
        version = "0.13.0";
        edition = "2018";
        sha256 = "1z82g23mbzjgijkpcrilc7nljpxpvpf7zxf6iyiapkgka2ngwkch";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bimap" = rec {
        crateName = "bimap";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0jyl53bi572kxaayc2py797vx8g12p4bmn258m69dimm9qjma15w";
        authors = [
          "Billy Rieger <wrieger@protonmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.3.3";
        edition = "2015";
        sha256 = "1bfw3mnwzx5g1465kiqllp5n4r10qrqy88kdlp3jfwnq2ya5xx5i";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Zoey Riordan <zoey@dos.cafe>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
        };
      };
      "bindgen" = rec {
        crateName = "bindgen";
        version = "0.59.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1f4fpycxmbrqk8r2x9brhfgjh86mzc6bngn4a9631x78b2jaklib";
        authors = [
          "Jyun-Yan You <jyyou.tw@gmail.com>"
          "Emilio Cobos Álvarez <emilio@crisal.io>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "The Servo project developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cexpr";
            packageId = "cexpr";
          }
          {
            name = "clang-sys";
            packageId = "clang-sys";
            features = [ "clang_6_0" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "peeking_take_while";
            packageId = "peeking_take_while";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" "unicode" ];
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        devDependencies = [
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        features = {
          "default" = [ "logging" "clap" "runtime" "which-rustfmt" ];
          "logging" = [ "env_logger" "log" ];
          "runtime" = [ "clang-sys/runtime" ];
          "static" = [ "clang-sys/static" ];
          "which-rustfmt" = [ "which" ];
        };
        resolvedDefaultFeatures = [ "runtime" ];
      };
      "bit-vec" = rec {
        crateName = "bit-vec";
        version = "0.6.3";
        edition = "2015";
        sha256 = "1ywqjnv60cdh1slhz67psnp422md6jdliji6alq0gmly2xm9p7rl";
        authors = [
          "Alexis Beingessner <a.beingessner@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "serde_no_std" = [ "serde/alloc" ];
          "serde_std" = [ "std" "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.3.2";
        edition = "2018";
        sha256 = "12ki6w8gn1ldq7yz9y680llwk5gmrhrzszaa17g1sbrw2r2qvwxy";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bitvec" = rec {
        crateName = "bitvec";
        version = "0.20.4";
        edition = "2018";
        sha256 = "0j3qn0z31j06c965hs3kh41l78hxbzzsf1h46xvs3ym48i1i8x3p";
        authors = [
          "myrrlyn <self@myrrlyn.dev>"
        ];
        dependencies = [
          {
            name = "funty";
            packageId = "funty";
            usesDefaultFeatures = false;
          }
          {
            name = "radium";
            packageId = "radium";
          }
          {
            name = "tap";
            packageId = "tap";
          }
          {
            name = "wyz";
            packageId = "wyz";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "wyz/alloc" ];
          "default" = [ "atomic" "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "blake2" = rec {
        crateName = "blake2";
        version = "0.9.2";
        edition = "2018";
        sha256 = "0x7i67c0hn3bzcwny08rgjrrnarqnqw10qpmh2blbx9hd78kfkha";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
            features = [ "dev" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
          "std" = [ "digest/std" "crypto-mac/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake2-rfc" = rec {
        crateName = "blake2-rfc";
        version = "0.2.18";
        edition = "2015";
        sha256 = "0034g47hyq2bzmk40895ill1mbnpmmjakdq3dmm9clidvl5m6vax";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.4.12";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "0.5.11";
        edition = "2018";
        sha256 = "11y5nm06lpypz65dbxgncs12ckx24i5i4a777ckfhfxd93ili9xg";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "blake2s_simd" = rec {
        crateName = "blake2s_simd";
        version = "0.5.11";
        edition = "2018";
        sha256 = "18p63b19zhs348jcq23cn092kcrhcwpfwmyb98d22nz86iq1lily";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "blake3" = rec {
        crateName = "blake3";
        version = "0.3.8";
        edition = "2018";
        sha256 = "1cr5l5szgxm632px41kavl6cgils8h6yhdfkm6jsc5jgiivqai5n";
        authors = [
          "Jack O'Connor <oconnor663@gmail.com>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
            features = [ "array-sizes-33-128" ];
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
      };
      "block-buffer 0.7.3" = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "12v8wizynqin0hqf140kmp9s38q223mp1b0hkqk8j5pk8720v560";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.1.5";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];

      };
      "block-buffer 0.9.0" = rec {
        crateName = "block-buffer";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1r4pf90s7d7lj1wdjhlnqa26vvbm6pnc33z138lxpnp9srpi2lj1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.2.1";
            optional = true;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];

        resolvedDefaultFeatures = [ "block-padding" ];
      };
      "block-padding 0.1.5" = rec {
        crateName = "block-padding";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1xbkmysiz23vimd17rnsjpw9bgjxipwfslwyygqlkx4in3dxwygs";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
        ];

      };
      "block-padding 0.2.1" = rec {
        crateName = "block-padding";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1bickjlmfw9iv63dp781n589rfybw879mik1va59833m1hvnqscd";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "blocking" = rec {
        crateName = "blocking";
        version = "1.1.0";
        edition = "2018";
        sha256 = "09zlnl0zc417ryz6in6ca8c6rrfyp3gb21xlz3vb34fknba4fvh4";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "atomic-waker";
            packageId = "atomic-waker";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "bs58" = rec {
        crateName = "bs58";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1lr3vwzhhyica4y7rbkf26vr1h7vpjb1m6rml8zcqgw81c2y07vp";
        authors = [
          "Wim Looman <wim@nemo157.com>"
        ];
        features = {
          "check" = [ "sha2" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.17";
        edition = "2018";
        sha256 = "08rjbhysy6gg27db2h3pnhvr2mlr5vkj797i9625kwg8hgrnjdds";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "build-helper" = rec {
        crateName = "build-helper";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0pxddbizzd3mvg3777hlg92la5qacjs8734cjk79ajgsycdikkmx";
        authors = [
          "Daniel Keep <daniel.keep@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.6.0";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.9.1";
        edition = "2018";
        sha256 = "1688dv6s0cbj72p9lmll8a02a85dzxvdw2is7pji490zmd35m954";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byte-slice-cast" = rec {
        crateName = "byte-slice-cast";
        version = "1.2.0";
        edition = "2018";
        sha256 = "162618ai9pnsim49lkjpq2yi2b3wssclvqxwwycw8xrbb58wfc0x";
        authors = [
          "Sebastian Dröge <sebastian@centricular.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "byte-tools" = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1mqi29wsm8njpl51pfwr31wmpzs5ahlcb40wsjyd92l90ixcmdg3";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.4.3";
        edition = "2018";
        sha256 = "0456lv9xi1a5bcm32arknf33ikv76p3fr9yzki4lb2897p2qkh8l";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "bytes 0.4.12" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
      "bytes 0.5.6" = rec {
        crateName = "bytes";
        version = "0.5.6";
        edition = "2018";
        sha256 = "0f5s7xq6qzmdh22ygsy8v0sp02m51y0radvq4i4y8cizy1lfqk0f";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes 1.1.0" = rec {
        crateName = "bytes";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1y70b249m02lfp0j6565b29kviapj4xsl9whamcqwddnp9kjv1y4";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cache-padded" = rec {
        crateName = "cache-padded";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0b39fmvn6j47xcyc03biyh8kdd52qwhb55xmx72hj3y73ri5kny1";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "camino" = rec {
        crateName = "camino";
        version = "1.0.7";
        edition = "2018";
        sha256 = "08zwlrqmfy6bds5x0w0cr3zqmasnm1q5i7q4d0h55c1h54k34cbg";
        authors = [
          "Without Boats <saoirse@without.boats>"
          "Ashley Williams <ashley666ashley@gmail.com>"
          "Steve Klabnik <steve@steveklabnik.com>"
          "Rain <rain@sunshowers.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde1" ];
      };
      "cargo-platform" = rec {
        crateName = "cargo-platform";
        version = "0.1.2";
        edition = "2018";
        sha256 = "09zsf76b9yr02jh17xq925xp1w824w2bwvb78fd0gpx5m1fq5nyb";
        authors = [
          "The Cargo Project Developers"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];

      };
      "cargo_metadata 0.12.3" = rec {
        crateName = "cargo_metadata";
        version = "0.12.3";
        edition = "2018";
        sha256 = "0zxca4ylp3rjx597yr08l43h8bp1p4j9asv8j0yy54brv9bs253p";
        authors = [
          "Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>"
        ];
        dependencies = [
          {
            name = "cargo-platform";
            packageId = "cargo-platform";
          }
          {
            name = "semver";
            packageId = "semver 0.11.0";
            features = [ "serde" ];
          }
          {
            name = "semver-parser";
            packageId = "semver-parser 0.10.2";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            features = [ "unbounded_depth" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "cargo_metadata 0.14.2" = rec {
        crateName = "cargo_metadata";
        version = "0.14.2";
        edition = "2018";
        sha256 = "1yl1y40vby9cas4dlfc44szrbl4m4z3pahv3p6ckdqp8ksfv1jsa";
        authors = [
          "Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de>"
        ];
        dependencies = [
          {
            name = "camino";
            packageId = "camino";
            features = [ "serde1" ];
          }
          {
            name = "cargo-platform";
            packageId = "cargo-platform";
          }
          {
            name = "semver";
            packageId = "semver 1.0.6";
            features = [ "serde" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            features = [ "unbounded_depth" ];
          }
        ];
        features = {
          "builder" = [ "derive_builder" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.73";
        edition = "2018";
        crateBin = [];
        sha256 = "04ccylrjq94jssh8f7d7hxv64gs9f1m1jrsxb7wqgfxk4xljmzrg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "parallel" ];
      };
      "cexpr" = rec {
        crateName = "cexpr";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0rl77bwhs5p979ih4r0202cn5jrfsrbgrksp40lkfz5vk1x3ib3g";
        authors = [
          "Jethro Beekman <jethro@jbeekman.nl>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];

      };
      "cfg-if 0.1.10" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "cfg-if 1.0.0" = rec {
        crateName = "cfg-if";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1za0vb97n4brpzpv8lsbnzmq5r8f2b0cpqqr0sy8h5bn751xxwds";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "chacha20" = rec {
        crateName = "chacha20";
        version = "0.7.1";
        edition = "2018";
        sha256 = "04ildiyv8dlcc082klcz7plgghwh3xkfws62fi866a0ivj4svrzy";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cipher";
            packageId = "cipher";
            optional = true;
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.1.5";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "xchacha" ];
          "hchacha" = [ "xchacha" ];
          "legacy" = [ "cipher" ];
          "rng" = [ "rand_core" ];
          "std" = [ "cipher/std" ];
          "xchacha" = [ "cipher" ];
        };
        resolvedDefaultFeatures = [ "cipher" "default" "xchacha" "zeroize" ];
      };
      "chacha20poly1305" = rec {
        crateName = "chacha20poly1305";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1ra8x3srprnkgbijg0didlkrh1k0pszllya4dmxm23110dr3300m";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "chacha20";
            packageId = "chacha20";
            optional = true;
            features = [ "zeroize" ];
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "poly1305";
            packageId = "poly1305";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "default" = [ "alloc" "chacha20" "xchacha20poly1305" ];
          "heapless" = [ "aead/heapless" ];
          "reduced-round" = [ "chacha20" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
          "xchacha20poly1305" = [ "chacha20/xchacha" ];
        };
        resolvedDefaultFeatures = [ "alloc" "chacha20" "default" "xchacha20poly1305" ];
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.19";
        edition = "2015";
        sha256 = "0wyfl6c00vhfl562spnfcna3zkw8jqvcp652m9iskhl8j26dc2k7";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "timezoneapi" ];
          }
        ];
        features = {
          "clock" = [ "libc" "std" "winapi" ];
          "default" = [ "clock" "std" "oldtime" ];
          "oldtime" = [ "time" ];
          "unstable-locales" = [ "pure-rust-locales" "alloc" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "libc" "oldtime" "std" "time" "winapi" ];
      };
      "cid" = rec {
        crateName = "cid";
        version = "0.6.1";
        edition = "2018";
        sha256 = "0s4pmfc72cxyfy0d2ay93fmaxi86xykap9n1cfb3yss4nv03n3pz";
        authors = [
          "Friedel Ziegelmayer <dignifiedquire@gmail.com>"
        ];
        dependencies = [
          {
            name = "multibase";
            packageId = "multibase";
            optional = true;
          }
          {
            name = "multihash";
            packageId = "multihash 0.13.2";
            usesDefaultFeatures = false;
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "multihash";
            packageId = "multihash 0.13.2";
            usesDefaultFeatures = false;
            features = [ "arb" ];
          }
        ];
        features = {
          "arb" = [ "quickcheck" "rand" "multihash/arb" ];
          "default" = [ "std" "multihash/default" ];
          "scale-codec" = [ "parity-scale-codec" "multihash/scale-codec" ];
          "serde-codec" = [ "serde" "multihash/serde-codec" ];
          "std" = [ "multibase" "multihash/std" "unsigned-varint/std" ];
        };
        resolvedDefaultFeatures = [ "default" "multibase" "std" ];
      };
      "cipher" = rec {
        crateName = "cipher";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1dyzsv0c84rgz98d5glnhsz4320wl24x3bq511vnyf0mxir21rby";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "clang-sys" = rec {
        crateName = "clang-sys";
        version = "1.3.1";
        edition = "2015";
        sha256 = "08ff8654vvv3aa9rcbzr6dnzraj3fapryk1c49cbhi6pxr10ih2c";
        authors = [
          "Kyle Mayes <kyle@mayeses.com>"
        ];
        dependencies = [
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "libloading";
            packageId = "libloading 0.7.3";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "glob";
            packageId = "glob";
          }
        ];
        features = {
          "clang_10_0" = [ "clang_9_0" ];
          "clang_11_0" = [ "clang_10_0" ];
          "clang_12_0" = [ "clang_11_0" ];
          "clang_13_0" = [ "clang_12_0" ];
          "clang_3_6" = [ "clang_3_5" ];
          "clang_3_7" = [ "clang_3_6" ];
          "clang_3_8" = [ "clang_3_7" ];
          "clang_3_9" = [ "clang_3_8" ];
          "clang_4_0" = [ "clang_3_9" ];
          "clang_5_0" = [ "clang_4_0" ];
          "clang_6_0" = [ "clang_5_0" ];
          "clang_7_0" = [ "clang_6_0" ];
          "clang_8_0" = [ "clang_7_0" ];
          "clang_9_0" = [ "clang_8_0" ];
          "runtime" = [ "libloading" ];
        };
        resolvedDefaultFeatures = [ "clang_3_5" "clang_3_6" "clang_3_7" "clang_3_8" "clang_3_9" "clang_4_0" "clang_5_0" "clang_6_0" "libloading" "runtime" ];
      };
      "clap" = rec {
        crateName = "clap";
        version = "2.34.0";
        edition = "2018";
        sha256 = "071q5d8jfwbazi6zhik9xwpacx5i6kb2vkzy060vhf0c3120aqd0";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
            target = { target, features }: (!(target."windows" or false));
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
      "concurrent-queue" = rec {
        crateName = "concurrent-queue";
        version = "1.2.2";
        edition = "2018";
        sha256 = "18w6hblcjjk9d0my3657ra1zdj79gwfjmzvc0b3985g01dahgv9h";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cache-padded";
            packageId = "cache-padded";
          }
        ];

      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];

      };
      "convert_case" = rec {
        crateName = "convert_case";
        version = "0.4.0";
        edition = "2018";
        sha256 = "03jaf1wrsyqzcaah9jf8l1iznvdw5mlsca2qghhzr9w27sddaib2";
        authors = [
          "David Purdum <purdum41@gmail.com>"
        ];
        features = {
          "random" = [ "rand" ];
        };
      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.9.3";
        edition = "2015";
        sha256 = "0ii1ihpjb30fk38gdikm5wqlkmyr8k46fh4k2r8sagz5dng7ljhr";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.8.3";
        edition = "2015";
        sha256 = "1p5r2wckarkpkyc4z83q08dwpvcafrb1h6fxfa3qnikh8szww9sq";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "cpp_demangle" = rec {
        crateName = "cpp_demangle";
        version = "0.3.5";
        edition = "2015";
        crateBin = [];
        sha256 = "03vi33qz8x7lll0xd3acd3jp39nvzv174wg424qsb1nkm8z9bapf";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Jim Blandy <jimb@red-bean.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
          "fuzz" = [ "afl" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cpufeatures 0.1.5" = rec {
        crateName = "cpufeatures";
        version = "0.1.5";
        edition = "2018";
        sha256 = "1vvid867wpnz5wzma3f4x2ijl83fgr6x1fc6shspzpf9ysb9djb6";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
        ];

      };
      "cpufeatures 0.2.1" = rec {
        crateName = "cpufeatures";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0sgllzsvs8hinylaiigmd9c908gd8wclxnqz8dinpxbdyql981cm";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
        ];

      };
      "cranelift-bforest" = rec {
        crateName = "cranelift-bforest";
        version = "0.78.0";
        edition = "2018";
        sha256 = "04r54knzq554vhkv1j8c2sf3cw9ajfh99lwdd8p8zky8hbgvf36c";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
            usesDefaultFeatures = false;
          }
        ];

      };
      "cranelift-codegen" = rec {
        crateName = "cranelift-codegen";
        version = "0.78.0";
        edition = "2018";
        sha256 = "137s7dsq0lqcgbjj3inqs0i6sz3bhv2fmrb1ks8fwbm4bz0n6i7y";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-bforest";
            packageId = "cranelift-bforest";
          }
          {
            name = "cranelift-codegen-shared";
            packageId = "cranelift-codegen-shared";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "write" ];
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "regalloc";
            packageId = "regalloc";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
        ];
        buildDependencies = [
          {
            name = "cranelift-codegen-meta";
            packageId = "cranelift-codegen-meta";
          }
        ];
        features = {
          "all-arch" = [ "x86" "arm64" "s390x" ];
          "core" = [ "hashbrown" ];
          "default" = [ "std" "unwind" ];
          "enable-peepmatic" = [ "peepmatic-runtime" "peepmatic-traits" "serde" ];
          "enable-serde" = [ "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde" ];
          "rebuild-peephole-optimizers" = [ "peepmatic" "peepmatic-traits" "wast" ];
          "regalloc-snapshot" = [ "bincode" "regalloc/enable-serde" ];
          "souper-harvest" = [ "souper-ir" "souper-ir/stringify" ];
          "unwind" = [ "gimli" ];
        };
        resolvedDefaultFeatures = [ "default" "gimli" "std" "unwind" ];
      };
      "cranelift-codegen-meta" = rec {
        crateName = "cranelift-codegen-meta";
        version = "0.78.0";
        edition = "2018";
        sha256 = "1gsj12axwg71cggv9mlc5dkh30d808171q8nx82599akl2a6lgvr";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen-shared";
            packageId = "cranelift-codegen-shared";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
        ];

      };
      "cranelift-codegen-shared" = rec {
        crateName = "cranelift-codegen-shared";
        version = "0.78.0";
        edition = "2018";
        sha256 = "1gklw5gw46d1c9p0f5x10lycdby7cicxcy83ndgcwnr7vx31iaj4";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
      };
      "cranelift-entity" = rec {
        crateName = "cranelift-entity";
        version = "0.78.0";
        edition = "2018";
        sha256 = "0fmvd66xpxhky5gqia38q171ba5jxac94k8m332qzgqqcf6mv953";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "enable-serde" "serde" ];
      };
      "cranelift-frontend" = rec {
        crateName = "cranelift-frontend";
        version = "0.78.0";
        edition = "2018";
        sha256 = "09c59a40340l9qjs23vkzxl4g581kq1xwsaic2vxwrhp8sykjwz0";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
        ];
        features = {
          "core" = [ "hashbrown" "cranelift-codegen/core" ];
          "default" = [ "std" ];
          "std" = [ "cranelift-codegen/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cranelift-native" = rec {
        crateName = "cranelift-native";
        version = "0.78.0";
        edition = "2018";
        sha256 = "0yrx5s8pyvn6g5j72mk6m0cnmbky4vyf6wbajcr0azpmdykzrqh3";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."arch" == "s390x");
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
        ];
        features = {
          "core" = [ "cranelift-codegen/core" ];
          "default" = [ "std" ];
          "std" = [ "cranelift-codegen/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cranelift-wasm" = rec {
        crateName = "cranelift-wasm";
        version = "0.78.0";
        edition = "2018";
        sha256 = "0y67n2nwmbd9m4cbfhjkv5527bglwj5w4qgaahna7y518z2zwihz";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
          {
            name = "cranelift-frontend";
            packageId = "cranelift-frontend";
            usesDefaultFeatures = false;
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmtime-types";
            packageId = "wasmtime-types";
          }
        ];
        devDependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "core" = [ "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core" ];
          "default" = [ "std" ];
          "enable-serde" = [ "serde" ];
          "std" = [ "cranelift-codegen/std" "cranelift-frontend/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.3.2";
        edition = "2015";
        sha256 = "03c8f29yx293yf43xar946xbls1g60c207m9drf8ilqhr25vsh5m";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-channel" = rec {
        crateName = "crossbeam-channel";
        version = "0.5.2";
        edition = "2018";
        sha256 = "1yhbpb72mrhcywq2j8nscr48glr5w33f7rmcb8ph9vmi7yyahkp5";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.8.1";
        edition = "2018";
        sha256 = "07nypn86id2lf912ahiww1jvqp0zbk2xa25ra7vzplph375c0mb4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-epoch/std" "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-epoch" "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.9.7";
        edition = "2018";
        sha256 = "1naymd4nz53hxh1jln6ax9xa7f9g8k5hac09k4fib2vfl8p6s3f0";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "loom-crate" "crossbeam-utils/loom" ];
          "nightly" = [ "crossbeam-utils/nightly" "const_fn" ];
          "std" = [ "alloc" "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "alloc" "lazy_static" "std" ];
      };
      "crossbeam-utils" = rec {
        crateName = "crossbeam-utils";
        version = "0.8.7";
        edition = "2018";
        sha256 = "19hn7av0w65y894ab8aw42d20i9m5d4sb80nm0zm6sf2y78vxrdm";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crunchy" = rec {
        crateName = "crunchy";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1dx9mypwd5mpfbbajm78xcrg5lirqk7934ik980mmaffg3hdm0bs";
        authors = [
          "Vurich <jackefransham@hotmail.co.uk>"
        ];
        features = {
          "default" = [ "limit_128" ];
        };
        resolvedDefaultFeatures = [ "default" "limit_128" "limit_256" "std" ];
      };
      "crypto-mac 0.11.1" = rec {
        crateName = "crypto-mac";
        version = "0.11.1";
        edition = "2018";
        sha256 = "05672ncc54h66vph42s0a42ljl69bwnqjh0x4xgj2v1395psildi";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "crypto-mac 0.8.0" = rec {
        crateName = "crypto-mac";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1axfs4zmy74rn9666p92j7nmcv11zdp2d51yrppc2dv26cqa715m";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ct-logs" = rec {
        crateName = "ct-logs";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1j5as2h789c2gazq3drl5i58xk8zzx6sxd1wdr19x3d6dwc1da61";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "sct";
            packageId = "sct";
          }
        ];

      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.21";
        edition = "2018";
        sha256 = "1am0a8m1gkaa0fii3w3s5wsymjljvg4sv5c50bscssl2kf5a9h6c";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "ctr" = rec {
        crateName = "ctr";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1sk1aykwhkny92cnvl6s75dx3fyvfzw5xkd6xz3y7w5anhgvk6q4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];

      };
      "cuckoofilter" = rec {
        crateName = "cuckoofilter";
        version = "0.5.0";
        edition = "2018";
        sha256 = "067fkr9dc118rqddr72xdldq05d31yyipvvyrmj9yrrik52ah45q";
        authors = [
          "Seif Lotfy <seif.lotfy@gmail.com>"
          "Seif Lotfy <seif@axiom.co>"
          "Florian Jacob <accounts+git@florianjacob.de>"
          "The cuckoofilter contributors"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "dev" = [ "clippy" ];
          "serde_support" = [ "serde" "serde_derive" "serde_bytes" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "curve25519-dalek 2.1.3" = rec {
        crateName = "curve25519-dalek";
        version = "2.1.3";
        edition = "2015";
        sha256 = "05m2nmc9pvwj3kpnnabbhjd8bja14xk95qdql6idz8lr5xa8b6sa";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" "u64_backend" ];
      };
      "curve25519-dalek 3.2.0" = rec {
        crateName = "curve25519-dalek";
        version = "3.2.0";
        edition = "2015";
        sha256 = "0q8v97275cy6v4ly6y2qwv9a8phnpjg9sy8kv7r6mgdjfacxz7qb";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u32_backend" = [ "fiat-crypto" ];
          "fiat_u64_backend" = [ "fiat-crypto" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" "u64_backend" ];
      };
      "data-encoding" = rec {
        crateName = "data-encoding";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mvd8bjq5mq50fcf931cff57vwmbsvs1kpxynkzrshli98y3kqiy";
        authors = [
          "Julien Cretin <git@ia0.eu>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "data-encoding-macro" = rec {
        crateName = "data-encoding-macro";
        version = "0.1.12";
        edition = "2018";
        sha256 = "1jls0b9p4nsp5vcp2h53cc01m3drg8l4nh47idlzm27ys9y7p4l6";
        authors = [
          "Julien Cretin <cretin@google.com>"
        ];
        dependencies = [
          {
            name = "data-encoding";
            packageId = "data-encoding";
            usesDefaultFeatures = false;
          }
          {
            name = "data-encoding-macro-internal";
            packageId = "data-encoding-macro-internal";
          }
        ];

      };
      "data-encoding-macro-internal" = rec {
        crateName = "data-encoding-macro-internal";
        version = "0.1.10";
        edition = "2018";
        sha256 = "1nrqy2c3azch285a9ya63qx43f25ldm58l0ans0fg5dav91fvfx5";
        procMacro = true;
        authors = [
          "Julien Cretin <cretin@google.com>"
        ];
        dependencies = [
          {
            name = "data-encoding";
            packageId = "data-encoding";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "derivative" = rec {
        crateName = "derivative";
        version = "2.2.0";
        edition = "2015";
        sha256 = "02vpb81wisk2zh1d5f44szzxamzinqgq2k8ydrfjj2wwkrgdvhzw";
        procMacro = true;
        authors = [
          "mcarton <cartonmartin+git@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "extra-traits" ];
          }
        ];
        features = {
        };
      };
      "derive_more" = rec {
        crateName = "derive_more";
        version = "0.99.17";
        edition = "2018";
        sha256 = "0883jr0gdf9mi8rn7qbz1p0z7hqzfd275pil2gwm66bw1b9i1f2g";
        procMacro = true;
        authors = [
          "Jelte Fennema <github-tech@jeltef.nl>"
        ];
        dependencies = [
          {
            name = "convert_case";
            packageId = "convert_case";
            optional = true;
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.4.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "add_assign" "add" "as_mut" "as_ref" "constructor" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "iterator" "mul_assign" "mul" "not" "sum" "try_into" "is_variant" "unwrap" ];
          "display" = [ "syn/extra-traits" ];
          "error" = [ "syn/extra-traits" ];
          "from" = [ "syn/extra-traits" ];
          "generate-parsing-rs" = [ "peg" ];
          "into" = [ "syn/extra-traits" ];
          "is_variant" = [ "convert_case" ];
          "mul" = [ "syn/extra-traits" ];
          "mul_assign" = [ "syn/extra-traits" ];
          "not" = [ "syn/extra-traits" ];
          "testing-helpers" = [ "rustc_version" ];
          "try_into" = [ "syn/extra-traits" ];
          "unwrap" = [ "convert_case" "rustc_version" ];
        };
        resolvedDefaultFeatures = [ "add" "add_assign" "as_mut" "as_ref" "constructor" "convert_case" "default" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "is_variant" "iterator" "mul" "mul_assign" "not" "rustc_version" "sum" "try_into" "unwrap" ];
      };
      "digest 0.8.1" = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1madjl27f3kj5ql7kwgvb9c8b7yb7bv7yfgx7rqzj4i3fp4cil7k";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "digest 0.9.0" = rec {
        crateName = "digest";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0rmhvk33rgvd6ll71z8sng91a52rw14p0drjn1da0mqa138n1pfk";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "directories" = rec {
        crateName = "directories";
        version = "4.0.1";
        edition = "2015";
        sha256 = "045jbj5y2f1fmjs9rfcw95y0vjydb2rqqhz1sdnqhdmxv96ms77m";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];

      };
      "directories-next" = rec {
        crateName = "directories-next";
        version = "2.0.0";
        edition = "2018";
        sha256 = "1g1vq8d8mv0vp0l317gh9y46ipqg2fxjnbc7lnjhwqbsv4qf37ik";
        authors = [
          "The @xdg-rs members"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "dirs-sys-next";
            packageId = "dirs-sys-next";
          }
        ];

      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.6";
        edition = "2015";
        sha256 = "102pbpcrfhvhfyfnyvmvvwpl6mfvynh170f6ima6fyinxls6bn03";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];

      };
      "dirs-sys-next" = rec {
        crateName = "dirs-sys-next";
        version = "0.1.2";
        edition = "2018";
        sha256 = "0kavhavdxv4phzj4l0psvh55hszwnr0rcz8sxbvx20pyqi2a3gaf";
        authors = [
          "The @xdg-rs members"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];

      };
      "dns-parser" = rec {
        crateName = "dns-parser";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1spv0psvxc31qg9xnqf0gmjclyiim7vp23r2b1gzf1ix8zlkply4";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        features = {
          "with-serde" = [ "serde" "serde_derive" ];
        };
      };
      "downcast-rs" = rec {
        crateName = "downcast-rs";
        version = "1.2.0";
        edition = "2015";
        sha256 = "0l36kgxqd5djhqwf5abxjmgasdw8n0qsjvw3jdvhi91nj393ba4y";
        authors = [
          "Ashish Myles <marcianx@gmail.com>"
          "Runji Wang <wangrunji0408@163.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1c5j0wz118dhrczx6spc5za7dnbfxablr4adyahg9aknrsc9i2an";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "dyn-clonable" = rec {
        crateName = "dyn-clonable";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1m4zlp5phn44znxqj6dkjilxpr5kvyil2ldxp77658h7wvq354jf";
        authors = [
          "Jacob Brown <kardeiz@gmail.com>"
        ];
        dependencies = [
          {
            name = "dyn-clonable-impl";
            packageId = "dyn-clonable-impl";
          }
          {
            name = "dyn-clone";
            packageId = "dyn-clone";
          }
        ];

      };
      "dyn-clonable-impl" = rec {
        crateName = "dyn-clonable-impl";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1icrjdqiriiy6abxpsygyxylgxg2gq5j9z876pslqdrwazm413jm";
        procMacro = true;
        authors = [
          "Jacob Brown <kardeiz@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "dyn-clone" = rec {
        crateName = "dyn-clone";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1kxb16nxiixn558gn82yaq2fl6271jay4rqkrw31lmnprjpjc9pf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "ed25519" = rec {
        crateName = "ed25519";
        version = "1.3.0";
        edition = "2018";
        sha256 = "05l8say9mpch3nl7cjwkq8slrb1g0vnr7rrdxdkl6igi76g0dqbl";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "signature";
            packageId = "signature";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "pkcs8/alloc" ];
          "default" = [ "std" ];
          "pem" = [ "pkcs8/pem" ];
          "serde_bytes" = [ "serde" "serde_bytes_crate" "std" ];
          "std" = [ "signature/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ed25519-dalek" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.1";
        edition = "2018";
        sha256 = "17bsriciv93nkm39z22w7mr0h2a3hnbmgf378v4c895gvkkblqn7";
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.2.0";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            rename = "serde_crate";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc" ];
          "asm" = [ "sha2/asm" ];
          "batch" = [ "merlin" "rand" ];
          "batch_deterministic" = [ "merlin" "rand" "rand_core" ];
          "default" = [ "std" "rand" "u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "serde_crate" "serde_bytes" "ed25519/serde" ];
          "simd_backend" = [ "curve25519-dalek/simd_backend" ];
          "std" = [ "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand" "serde_crate" "std" "u64_backend" ];
      };
      "either" = rec {
        crateName = "either";
        version = "1.6.1";
        edition = "2015";
        sha256 = "0mwl9vngqf5jvrhmhn9x60kr5hivxyjxbmby2pybncxfqhf4z3g7";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "enum-as-inner" = rec {
        crateName = "enum-as-inner";
        version = "0.3.3";
        edition = "2018";
        sha256 = "15gmpgywijda93lkq7hf2y53h66sqkhzabzbxich288xm6b00pvw";
        procMacro = true;
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "env_logger 0.8.4" = rec {
        crateName = "env_logger";
        version = "0.8.4";
        edition = "2018";
        sha256 = "1qzw8g11dbdfi7ixm44ldykwcqsxqkh8vx5cgpd88zmclgz8g4d1";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "perf" ];
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "env_logger 0.9.0" = rec {
        crateName = "env_logger";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1hzr53r0wga51j0w5zid69ylbfizg4qdbq0vqdj6rvki94sg0b0b";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" "perf" ];
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
      "environmental" = rec {
        crateName = "environmental";
        version = "1.1.3";
        edition = "2018";
        sha256 = "15s72bfcvb19nzc5aqn9m3hwg5cj5wx9kffrsyai2i11ms4ikfb8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "errno" = rec {
        crateName = "errno";
        version = "0.2.8";
        edition = "2015";
        sha256 = "18cnqgk8r6lq1n5cfy3bryiyz9zkqr10dxj49sa3fkzfamih8fgn";
        authors = [
          "Chris Wong <lambda.fairy@gmail.com>"
        ];
        dependencies = [
          {
            name = "errno-dragonfly";
            packageId = "errno-dragonfly";
            target = { target, features }: (target."os" == "dragonfly");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "hermit");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "errhandlingapi" "minwindef" "ntdef" "winbase" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "errno-dragonfly" = rec {
        crateName = "errno-dragonfly";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1grrmcm6q8512hkq5yzch3yv8wafflc2apbmsaabiyk44yqz2s5a";
        authors = [
          "Michael Neumann <mneumann@ntecs.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "ethbloom" = rec {
        crateName = "ethbloom";
        version = "0.11.1";
        edition = "2018";
        sha256 = "1y73c4v60jy6wc4gssrg775y6vzc4axn523qkxswbxm8iyn89dmz";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
            usesDefaultFeatures = false;
            features = [ "limit_256" ];
          }
          {
            name = "fixed-hash";
            packageId = "fixed-hash";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-rlp";
            packageId = "impl-rlp";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            features = [ "keccak" ];
          }
        ];
        features = {
          "arbitrary" = [ "fixed-hash/arbitrary" ];
          "codec" = [ "impl-codec" "scale-info" ];
          "default" = [ "std" "rlp" "serialize" "rustc-hex" ];
          "rlp" = [ "impl-rlp" ];
          "rustc-hex" = [ "fixed-hash/rustc-hex" ];
          "serialize" = [ "impl-serde" ];
          "std" = [ "fixed-hash/std" "crunchy/std" ];
        };
        resolvedDefaultFeatures = [ "impl-rlp" "impl-serde" "rlp" "serialize" "std" ];
      };
      "ethereum-types" = rec {
        crateName = "ethereum-types";
        version = "0.12.1";
        edition = "2018";
        sha256 = "1bxxacsmb9majw7vd4sndv4dhw3g9srhf7flwq39yy7yaxq6y4q5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "ethbloom";
            packageId = "ethbloom";
            usesDefaultFeatures = false;
          }
          {
            name = "fixed-hash";
            packageId = "fixed-hash";
            usesDefaultFeatures = false;
            features = [ "byteorder" "rustc-hex" ];
          }
          {
            name = "impl-rlp";
            packageId = "impl-rlp";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types";
            usesDefaultFeatures = false;
            features = [ "byteorder" "rustc-hex" ];
          }
          {
            name = "uint";
            packageId = "uint";
            rename = "uint-crate";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary" = [ "ethbloom/arbitrary" "fixed-hash/arbitrary" "uint-crate/arbitrary" ];
          "codec" = [ "impl-codec" "ethbloom/codec" "scale-info" "primitive-types/scale-info" ];
          "default" = [ "std" "rlp" "serialize" ];
          "num-traits" = [ "primitive-types/num-traits" ];
          "rlp" = [ "impl-rlp" "ethbloom/rlp" "primitive-types/rlp" ];
          "serialize" = [ "impl-serde" "primitive-types/serde_no_std" "ethbloom/serialize" ];
          "std" = [ "uint-crate/std" "fixed-hash/std" "ethbloom/std" "primitive-types/std" ];
        };
        resolvedDefaultFeatures = [ "default" "impl-rlp" "impl-serde" "rlp" "serialize" "std" ];
      };
      "event-listener" = rec {
        crateName = "event-listener";
        version = "2.5.2";
        edition = "2018";
        sha256 = "0wgbyhw4piqrrln6s61y3sc06wd3liwzzz18hazji3wk2ya31wvp";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "exit-future" = rec {
        crateName = "exit-future";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1i88800r9kc3xf4319dilzflkwvhvmplsiljapqk6knn6cc2ygz4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
        ];

      };
      "fake-simd" = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1vfylvk4va2ivqx85603lyqqp0zk52cgbs4n5nfbbbqx577qm2p8";
        authors = [
          "The Rust-Crypto Project Developers"
        ];

      };
      "fallible-iterator" = rec {
        crateName = "fallible-iterator";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1xq759lsr8gqss7hva42azn3whgrbrs2sd9xpn92c5ickxm1fhs4";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "fastrand" = rec {
        crateName = "fastrand";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1pvci54f2cm69ybc308z213xdybgqpvf2pcvq1kch69mwp7g1z63";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        devDependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = {target, features}: (target."arch" == "wasm32");
            features = [ "wasm-bindgen" ];
          }
        ];

      };
      "fdlimit" = rec {
        crateName = "fdlimit";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06rzmk7f60ifwc549hq6d3dzj7q3k1mx4rsvrbj3nnizci1rwk1c";
        authors = [
          "Parity Technologies<admin@parity.io>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "file-per-thread-logger" = rec {
        crateName = "file-per-thread-logger";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0bx0w7b6x99asmxwi8g2y6x4wl0cjsp91sqsqx0ywfabay865q91";
        authors = [
          "Benjamin Bouvier <public@benj.me>"
        ];
        dependencies = [
          {
            name = "env_logger";
            packageId = "env_logger 0.9.0";
          }
          {
            name = "log";
            packageId = "log";
          }
        ];

      };
      "finality-aleph" = rec {
        crateName = "finality-aleph";
        version = "0.3.0";
        edition = "2021";
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./finality-aleph; }
          else ./finality-aleph;
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "aleph-bft";
            packageId = "aleph-bft";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.8.4";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "ip_network";
            packageId = "ip_network";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.6.6";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "primitives";
            packageId = "primitives";
            rename = "aleph-primitives";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-service";
            packageId = "sc-service";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-io";
            packageId = "sp-io";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" "macros" "time" "rt-multi-thread" ];
          }
        ];
        devDependencies = [
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "substrate-test-runtime";
            packageId = "substrate-test-runtime";
          }
          {
            name = "substrate-test-runtime-client";
            packageId = "substrate-test-runtime-client";
          }
        ];

      };
      "finality-grandpa" = rec {
        crateName = "finality-grandpa";
        version = "0.14.4";
        edition = "2018";
        sha256 = "0njg2q5lyiazcfnabaligr1469xq5pgb2gp0jwy1zyaf4bskzb78";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            rename = "num";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive-codec" = [ "parity-scale-codec" "scale-info" ];
          "std" = [ "parity-scale-codec/std" "num/std" "parking_lot" "log" "futures-timer" "futures/executor" "scale-info/std" ];
          "test-helpers" = [ "fuzz-helpers" "rand" "std" ];
        };
        resolvedDefaultFeatures = [ "derive-codec" "futures-timer" "log" "parity-scale-codec" "parking_lot" "scale-info" "std" ];
      };
      "fixed-hash" = rec {
        crateName = "fixed-hash";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0g29r0zwf09kg70nprn0s444bn6nfsglmiafhl1pm8ajzvbhxkyg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.5";
            usesDefaultFeatures = false;
            features = [ "std_rng" ];
          }
        ];
        features = {
          "default" = [ "std" "rand" "rustc-hex" "byteorder" ];
          "std" = [ "rustc-hex/std" "rand/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "byteorder" "rand" "rustc-hex" "std" ];
      };
      "fixedbitset 0.2.0" = rec {
        crateName = "fixedbitset";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0kg03p777wc0dajd9pvlcnsyrwa8dhqwf0sd9r4dw0p82rs39arp";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "fixedbitset 0.4.1" = rec {
        crateName = "fixedbitset";
        version = "0.4.1";
        edition = "2015";
        sha256 = "0gh5qp6h5ivgbn80klx10lgp1jg0qmvmp58p0cr4qg0bw8lb17r7";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.22";
        edition = "2018";
        sha256 = "0gy5iwfqylb2f0dd9n7r8w2xwbzlrqlsairvyj2w9jf1jzl8hs8y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "cloudflare_zlib" = [ "any_zlib" "cloudflare-zlib-sys" ];
          "default" = [ "rust_backend" ];
          "rust_backend" = [ "miniz_oxide" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "any_zlib" "libz-sys" ];
          "zlib-ng-compat" = [ "zlib" "libz-sys/zlib-ng" ];
        };
        resolvedDefaultFeatures = [ "any_zlib" "default" "libz-sys" "miniz_oxide" "rust_backend" "zlib" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "1hc2mcqha06aibcaza94vbi81j6pr9a1bbxrxjfhc91zin8yr7iz";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "fork-tree" = rec {
        crateName = "fork-tree";
        version = "3.0.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
        ];

      };
      "form_urlencoded" = rec {
        crateName = "form_urlencoded";
        version = "1.0.1";
        edition = "2018";
        sha256 = "1491fmakavcmsjbm3q6iy0bhmn9l422jasdhzx5hkljgza3mmhjz";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "frame-benchmarking" = rec {
        crateName = "frame-benchmarking";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "linregress";
            packageId = "linregress";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime-interface/std" "sp-runtime/std" "sp-api/std" "sp-std/std" "frame-support/std" "frame-system/std" "linregress" "log/std" ];
        };
        resolvedDefaultFeatures = [ "linregress" "std" ];
      };
      "frame-election-provider-support" = rec {
        crateName = "frame-election-provider-support";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-npos-elections";
            packageId = "sp-npos-elections";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "sp-npos-elections";
            packageId = "sp-npos-elections";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-arithmetic/std" "frame-support/std" "frame-system/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "frame-executive" = rec {
        crateName = "frame-executive";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-io";
            packageId = "sp-io";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-core/std" "sp-runtime/std" "sp-tracing/std" "sp-std/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
          "with-tracing" = [ "sp-tracing/with-tracing" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "frame-metadata" = rec {
        crateName = "frame-metadata";
        version = "14.2.0";
        edition = "2018";
        sha256 = "1l3q95blkr74dxhf8rh6475fml80crd35d44q6jjrrkd6if5xv9p";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
        ];
        features = {
          "default" = [ "std" "v14" ];
          "legacy" = [ "v13" "v12" "v11" "v10" "v9" "v8" ];
          "std" = [ "codec/std" "scale-info/std" "scale-info/serde" "scale-info/decode" "serde" ];
          "v14" = [ "scale-info" ];
        };
        resolvedDefaultFeatures = [ "scale-info" "serde" "std" "v14" ];
      };
      "frame-support" = rec {
        crateName = "frame-support";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "frame-metadata";
            packageId = "frame-metadata";
            usesDefaultFeatures = false;
            features = [ "v14" ];
          }
          {
            name = "frame-support-procedural";
            packageId = "frame-support-procedural";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core-hashing-proc-macro";
            packageId = "sp-core-hashing-proc-macro";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tt-call";
            packageId = "tt-call";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "once_cell" "serde" "sp-io/std" "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "sp-tracing/std" "sp-arithmetic/std" "frame-metadata/std" "sp-inherents/std" "sp-staking/std" "sp-state-machine" "frame-support-procedural/std" "log/std" ];
        };
        resolvedDefaultFeatures = [ "once_cell" "serde" "sp-state-machine" "std" ];
      };
      "frame-support-procedural" = rec {
        crateName = "frame-support-procedural";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "Inflector";
            packageId = "Inflector";
          }
          {
            name = "frame-support-procedural-tools";
            packageId = "frame-support-procedural-tools";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "frame-support-procedural-tools" = rec {
        crateName = "frame-support-procedural-tools";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support-procedural-tools-derive";
            packageId = "frame-support-procedural-tools-derive";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" "extra-traits" ];
          }
        ];

      };
      "frame-support-procedural-tools-derive" = rec {
        crateName = "frame-support-procedural-tools-derive";
        version = "3.0.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
            features = [ "proc-macro" ];
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "proc-macro" "full" "extra-traits" "parsing" ];
          }
        ];

      };
      "frame-system" = rec {
        crateName = "frame-system";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "sp-runtime/runtime-benchmarks" "frame-support/runtime-benchmarks" ];
          "std" = [ "serde" "codec/std" "scale-info/std" "sp-core/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-version/std" "log/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "frame-system-rpc-runtime-api" = rec {
        crateName = "frame-system-rpc-runtime-api";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-api/std" "codec/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "fs-swap" = rec {
        crateName = "fs-swap";
        version = "0.2.6";
        edition = "2015";
        sha256 = "198hbxamj80ffwql65nvbvm6aw82sp9wm1l993cfxv456snpvm03";
        authors = [
          "debris <marek.kotewicz@gmail.com>"
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "libloading";
            packageId = "libloading 0.5.2";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "ktmw32" "handleapi" "fileapi" "errhandlingapi" "winbase" ];
          }
        ];

      };
      "fs2" = rec {
        crateName = "fs2";
        version = "0.4.3";
        edition = "2015";
        sha256 = "04v2hwk7035c088f19mfl5b1lz84gnvv2hv6m935n0hmirszqr4m";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "processthreadsapi" "winerror" "fileapi" "winbase" "std" ];
          }
        ];

      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];

      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];

      };
      "funty" = rec {
        crateName = "funty";
        version = "1.1.0";
        edition = "2018";
        sha256 = "19wx3p3jmv863y0mjb56sr4qf1kvqhl3fsyslkd92zli0p8lrlzy";
        authors = [
          "myrrlyn <self@myrrlyn.dev>"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "futures 0.1.31" = rec {
        crateName = "futures";
        version = "0.1.31";
        edition = "2015";
        sha256 = "0y46qbmhi37dqkch8dlfq5aninqpzqgrr98awkb3rn4fxww1lirs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures 0.3.21" = rec {
        crateName = "futures";
        version = "0.3.21";
        edition = "2018";
        sha256 = "17id2zvn2acny759indn6yj2acfa6lhkwzaidxr2pqfiaigycgzp";
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
          "write-all-vectored" = [ "futures-util/write-all-vectored" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "bilock" "compat" "default" "executor" "futures-executor" "std" "thread-pool" "unstable" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.21";
        edition = "2018";
        sha256 = "0420lz2fmxa356ax1rp2sqi7b27ykfhvq4w9f1sla4hlp7j3q263";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink" "sink" "std" "unstable" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.21";
        edition = "2018";
        sha256 = "1lqhc6mqklh5bmkpr77p42lqwjj8gaskk5ba2p3kl1z4nw2gs28c";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" "unstable" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.21";
        edition = "2018";
        sha256 = "19mq96kwgf06axgdc2fbrjhqzdnxww9vw6cz8b82gqr9z86bj84l";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "default" "num_cpus" "std" "thread-pool" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.21";
        edition = "2018";
        sha256 = "0swn29fysas36ikk5aw55104fi98117amvgxw9g96pjs5ab4ah7w";
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "unstable" ];
      };
      "futures-lite" = rec {
        crateName = "futures-lite";
        version = "1.12.0";
        edition = "2018";
        sha256 = "0j5zzjcq1ib2kf1mm3apqf9g2ly1jjw1d1d4v9vjqi9rrnd4i53n";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Contributors to futures-rs"
        ];
        dependencies = [
          {
            name = "fastrand";
            packageId = "fastrand";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "parking";
            packageId = "parking";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "fastrand" "futures-io" "parking" "memchr" "waker-fn" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "fastrand" "futures-io" "memchr" "parking" "std" "waker-fn" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.21";
        edition = "2018";
        sha256 = "04pmj5xfk5rdhlj69wc7w3zvdg3xardg8srig96lszrk00wf3h9k";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "futures-rustls" = rec {
        crateName = "futures-rustls";
        version = "0.21.1";
        edition = "2018";
        sha256 = "12vsjg1fvq9syidzhgp576bkqjmhmnh8xx749vxi3iqpg7h8f4rs";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "futures-io";
            packageId = "futures-io";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        features = {
          "dangerous_configuration" = [ "rustls/dangerous_configuration" ];
        };
      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.21";
        edition = "2018";
        sha256 = "0s58gx5yw1a21xviw2qgc0wzk225vgn4kbzddrp141m3kw9kw5i1";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.21";
        edition = "2018";
        sha256 = "0skpiz2ljisywajv79p70yapfwhkqhb39wxy3f09v47mdfbnmijp";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" "unstable" ];
      };
      "futures-timer 2.0.2" = rec {
        crateName = "futures-timer";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xlx22asam8g5m32avwxx4x4p5hw3gvdhbk6047rn0hqn847bpm1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "futures-timer 3.0.2" = rec {
        crateName = "futures-timer";
        version = "3.0.2";
        edition = "2018";
        sha256 = "0b5v7lk9838ix6jdcrainsyrh7xrf24pwm61dp13907qkn806jz6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "wasm-bindgen" = [ "gloo-timers" "send_wrapper" ];
        };
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.21";
        edition = "2018";
        sha256 = "0sh3wqi8p36csjffy0irq8nlx9shqxp7z4dsih6bknarsvaspdyq";
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.31";
            rename = "futures_01";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
          "write-all-vectored" = [ "io" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "bilock" "channel" "compat" "default" "futures-channel" "futures-io" "futures-macro" "futures-sink" "futures_01" "io" "memchr" "sink" "slab" "std" "unstable" ];
      };
      "generic-array 0.12.4" = rec {
        crateName = "generic-array";
        version = "0.12.4";
        edition = "2015";
        sha256 = "1gfpay78vijl9vrwl1k9v7fbvbhkhcmnrk4kfg9l6x24y4s9zpzz";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];

      };
      "generic-array 0.14.5" = rec {
        crateName = "generic-array";
        version = "0.14.5";
        edition = "2015";
        sha256 = "00qqhls43bzvyb7s26iw6knvsz3mckbxl3rhaahvypzhqwzd6j7x";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "getrandom 0.1.16" = rec {
        crateName = "getrandom";
        version = "0.1.16";
        edition = "2018";
        sha256 = "1kjzmz60qx9mn615ks1akjbf36n3lkv27zfwbcam0fzmj56wphwg";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            optional = true;
            target = { target, features }: (stdenv.hostPlatform.config == "wasm32-unknown-unknown");
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.9.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            rename = "bindgen";
            optional = true;
            target = { target, features }: (stdenv.hostPlatform.config == "wasm32-unknown-unknown");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
          "wasm-bindgen" = [ "bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "bindgen" "js-sys" "std" "wasm-bindgen" ];
      };
      "getrandom 0.2.5" = rec {
        crateName = "getrandom";
        version = "0.2.5";
        edition = "2018";
        sha256 = "0xqfjd779yklms48j222jknmw2a2lx6fhynb3zx18w8r00wxk76k";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "js" = [ "wasm-bindgen" "js-sys" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "libc/rustc-dep-of-std" "wasi/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ghash" = rec {
        crateName = "ghash";
        version = "0.4.4";
        edition = "2018";
        sha256 = "169wvrc2k9lw776x3pmqp76kc0w5717wz01bfg9rz0ypaqbcr0qm";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "polyval";
            packageId = "polyval";
          }
        ];
        features = {
          "armv8" = [ "polyval/armv8" ];
          "force-soft" = [ "polyval/force-soft" ];
          "std" = [ "polyval/std" ];
        };
      };
      "gimli 0.25.0" = rec {
        crateName = "gimli";
        version = "0.25.0";
        edition = "2018";
        sha256 = "1rwgmjp94ivk872xd2s9lfb7wpz6rj1s9bzqnhnkn6l4jw21x87h";
        dependencies = [
          {
            name = "fallible-iterator";
            packageId = "fallible-iterator";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "stable_deref_trait";
            packageId = "stable_deref_trait";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "stable_deref_trait" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "fallible-iterator" "indexmap" "read" "stable_deref_trait" "std" "write" ];
      };
      "gimli 0.26.1" = rec {
        crateName = "gimli";
        version = "0.26.1";
        edition = "2018";
        sha256 = "1m0vi36ypv4gx9gzcw6y456yqnlypizhwlcqrmg6vkwd0lnkgk3q";
        features = {
          "default" = [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "read" "stable_deref_trait" ];
          "read" = [ "read-core" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "read" "read-core" ];
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];

      };
      "globset" = rec {
        crateName = "globset";
        version = "0.4.8";
        edition = "2018";
        sha256 = "1gdzphnjjc0wdaawsq3n1nnypv9ja4prhca2n66hcahay2gksihh";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
          }
          {
            name = "bstr";
            packageId = "bstr";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "perf" "std" ];
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "gloo-timers" = rec {
        crateName = "gloo-timers";
        version = "0.2.3";
        edition = "2018";
        sha256 = "03jr3zk0dazyyi1djkswn1gim5kx1chv2kv23l7p3zjwx7saf4jd";
        authors = [
          "Rust and WebAssembly Working Group"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "futures" = [ "futures-core" "futures-channel" ];
        };
        resolvedDefaultFeatures = [ "default" "futures" "futures-channel" "futures-core" ];
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "13pzhasjizgv0v21yvrx3majd4xpipc1z1vyvwvbmcn7vlbzgwfr";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-util" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" "macros" "sync" "net" ];
          }
        ];
        features = {
        };
      };
      "hash-db" = rec {
        crateName = "hash-db";
        version = "0.15.2";
        edition = "2015";
        sha256 = "0jinaqwwr960a0i93gkgy8091fn8zn0v7s07lgrx187dnpkx8fyj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "hash256-std-hasher" = rec {
        crateName = "hash256-std-hasher";
        version = "0.15.2";
        edition = "2015";
        sha256 = "1wpw3sr931daagy2ri19rk0kd6q90kq0h246sd73yqwqbgap3hcj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "hashbrown" = rec {
        crateName = "hashbrown";
        version = "0.11.2";
        edition = "2018";
        sha256 = "0vkjsf5nzs7qcia5ya79j9sq2p1caz4crrncr1675wwyj3ag0pmb";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "inline-more" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
        };
        resolvedDefaultFeatures = [ "ahash" "default" "inline-more" "raw" ];
      };
      "heck" = rec {
        crateName = "heck";
        version = "0.3.3";
        edition = "2018";
        sha256 = "0b0kkr790p66lvzn9nsmfjvydrbmh9z5gb664jchwgw64vxiwqkd";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];

      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.19";
        edition = "2018";
        sha256 = "0cxcm8093nf5fyn114w8vxbrbcyvv91d4015rdnlgfll7cs6gd32";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0w1a4davm1lgzpamwnba907aysmlrnygbqmfis2mqjx5m552a93z";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "hex-literal" = rec {
        crateName = "hex-literal";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1q54yvyy0zls9bdrx15hk6yj304npndy9v4crn1h1vd95sfv5gby";
        procMacro = true;
        authors = [
          "RustCrypto Developers"
        ];

      };
      "hex_fmt" = rec {
        crateName = "hex_fmt";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0vrkzxd1wb4piij68fhmhycj01ky6nsn73piy37dk97h7xwn0zxh";
        authors = [
          "Andreas Fackler <AndreasFackler@gmx.de>"
        ];

      };
      "hmac 0.11.0" = rec {
        crateName = "hmac";
        version = "0.11.0";
        edition = "2018";
        sha256 = "16z61aibdg4di40sqi4ks2s4rz6r29w4sx4gvblfph3yxch26aia";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.11.1";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.11.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "std" = [ "crypto-mac/std" ];
        };
      };
      "hmac 0.8.1" = rec {
        crateName = "hmac";
        version = "0.8.1";
        edition = "2018";
        sha256 = "0h48wc7iysh4xd6ci4prh8bb7nszijrh9w3blaaq8a6cilk8hs0j";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
            features = [ "dev" ];
          }
        ];

      };
      "hmac-drbg" = rec {
        crateName = "hmac-drbg";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1cc5ddks8bg3512fzrd4n2gqr1kqkvg1l33fv9s6anyzjh9hmshp";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "hmac";
            packageId = "hmac 0.8.1";
          }
        ];

      };
      "hostname" = rec {
        crateName = "hostname";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0rz8yf70cvzl3nry71m4bz9w6x4j9kdz3qng6pnwhk2h20z1qwrw";
        authors = [
          "fengcen <fengcen.love@gmail.com>"
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "redox"));
          }
          {
            name = "match_cfg";
            packageId = "match_cfg";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "sysinfoapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "http" = rec {
        crateName = "http";
        version = "0.2.6";
        edition = "2018";
        sha256 = "00zxqk6m9qksxmlajmhnhgryw6xmqn9riimwx87nz1l4cmscdx1i";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
        ];

      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.4.4";
        edition = "2018";
        sha256 = "1imjszmk34603m7chfnhd3rq263bxbdlaxhlbzd06wv7354zix0z";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
        ];

      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1i66wqc7lkfsi8h26sm8s6kirzzh1xgpx2dlrkzbfpz1h944204i";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "httpdate" = rec {
        crateName = "httpdate";
        version = "1.0.2";
        edition = "2018";
        sha256 = "08bln7b1ibdw26gl8h4dr6rlybvlkyhlha309xbh9ghxh9nf78f4";
        authors = [
          "Pyfisch <pyfisch@posteo.org>"
        ];

      };
      "humantime" = rec {
        crateName = "humantime";
        version = "2.1.0";
        edition = "2018";
        sha256 = "1r55pfkkf5v0ji1x6izrjwdq9v6sc7bv99xj6srywcar37xmnfls";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];

      };
      "hyper" = rec {
        crateName = "hyper";
        version = "0.14.17";
        edition = "2018";
        sha256 = "1pc5m8k2h6b3vlvl6ylppc5nbz7lhvmx2xwacp6bc0cr7q40wgq4";type = [ "lib" "staticlib" "cdylib" ];
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2";
            optional = true;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "fs" "macros" "io-std" "io-util" "rt" "rt-multi-thread" "sync" "time" "test-util" ];
          }
        ];
        features = {
          "ffi" = [ "libc" ];
          "full" = [ "client" "http1" "http2" "server" "stream" "runtime" ];
          "http2" = [ "h2" ];
          "runtime" = [ "tcp" "tokio/rt" "tokio/time" ];
          "tcp" = [ "socket2" "tokio/net" "tokio/rt" "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "client" "default" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp" ];
      };
      "hyper-rustls" = rec {
        crateName = "hyper-rustls";
        version = "0.22.1";
        edition = "2018";
        sha256 = "0r2szp06nzqx6gblcw69kwx8afjp218fc083kfpw0i3d66bpm7sz";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "ct-logs";
            packageId = "ct-logs";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            features = [ "client" "http1" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "full" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "macros" "net" "rt-multi-thread" ];
          }
        ];
        features = {
          "default" = [ "native-tokio" ];
          "native-tokio" = [ "tokio-runtime" "rustls-native-certs" ];
          "tokio-runtime" = [ "hyper/runtime" "ct-logs" ];
          "webpki-tokio" = [ "tokio-runtime" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "ct-logs" "default" "native-tokio" "rustls-native-certs" "tokio-runtime" ];
      };
      "idna 0.1.5" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "idna 0.2.3" = rec {
        crateName = "idna";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1y7ca2w5qp9msgl57n03zqp78gq1bk2crqzg6kv7a542mdphm2j1";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "if-addrs" = rec {
        crateName = "if-addrs";
        version = "0.6.7";
        edition = "2018";
        sha256 = "1pkkkwm9znn07xq9s6glf8lxzn2rdxvy8kwkw6czrw64ywhy8wr2";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
          "Messense Lv <messense@icloud.com>"
        ];
        dependencies = [
          {
            name = "if-addrs-sys";
            packageId = "if-addrs-sys";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "minwindef" "winerror" "ws2def" "ws2ipdef" ];
          }
        ];

      };
      "if-addrs-sys" = rec {
        crateName = "if-addrs-sys";
        version = "0.3.2";
        edition = "2018";
        sha256 = "1skrzs79rafv185064p44r0k1va9ig4bfnpbwlvyhxh4g3fvjx6y";
        libPath = "lib.rs";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
          "Messense Lv <messense@icloud.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "if-watch" = rec {
        crateName = "if-watch";
        version = "0.2.2";
        edition = "2018";
        sha256 = "0y8ix7pfvvdxzcbhk125qbs6lb2c1g5vjkxjkh240cmdggvbg2mf";
        authors = [
          "David Craven <david@craven.ch>"
          "Parity Technologies Limited <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (!(target."windows" or false));
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "if-addrs";
            packageId = "if-addrs";
            target = { target, features }: (!(target."os" == "linux"));
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "netioapi" "ntdef" "winerror" "ws2def" ];
          }
        ];

      };
      "impl-codec" = rec {
        crateName = "impl-codec";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0hy4svffnw9idy9ipp0hkmbzk97fl583akqwyqmvbqy8qgzbs7hn";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            usesDefaultFeatures = false;
            features = [ "max-encoded-len" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "parity-scale-codec/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "impl-rlp" = rec {
        crateName = "impl-rlp";
        version = "0.3.0";
        edition = "2018";
        sha256 = "021869d5s47ili9kmhm9y80qpsbf0wwdap14qzfpb84pjbw210pj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "rlp";
            packageId = "rlp";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "rlp/std" ];
        };
      };
      "impl-serde" = rec {
        crateName = "impl-serde";
        version = "0.3.2";
        edition = "2018";
        sha256 = "0p2zy8ikdxd28s3vb22nwqgnwjn8gx920sr2svdn93j3yd1g0la5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "impl-trait-for-tuples" = rec {
        crateName = "impl-trait-for-tuples";
        version = "0.2.2";
        edition = "2021";
        sha256 = "1swmfdzfcfhnyvpm8irr5pvq8vpf8wfbdj91g6jzww8b6gvakmqi";
        procMacro = true;
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" "fold" "extra-traits" ];
          }
        ];

      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.8.0";
        edition = "2018";
        sha256 = "08s2rdps98z4qggzad2cf58nx012lnznn0b5q02a9arcf93n4ai8";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown";
            usesDefaultFeatures = false;
            features = [ "raw" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" "std" ];
      };
      "instant" = rec {
        crateName = "instant";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0b2bx5qdlwayriidhrag8vhy10kdfimfhmb3jnjmsz2h9j1bwnvs";
        authors = [
          "sebcrozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "wasm-bindgen" = [ "js-sys" "wasm-bindgen_rs" "web-sys" ];
        };
      };
      "integer-sqrt" = rec {
        crateName = "integer-sqrt";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0w6pzmgvs1mldkhafbwg9x7wzr0af3ngkimyb1gy97jarcdw6vi7";
        authors = [
          "Richard Dodd <richard.o.dodd@gmail.com>"
          "Joseph Richey"
          "Sergei Shulepov"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];

      };
      "intervalier" = rec {
        crateName = "intervalier";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0xgj5pn0i5icz0426fznsl507rqh1ms55mgf2vs97x5qqw713yk4";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 2.0.2";
          }
        ];

      };
      "io-lifetimes" = rec {
        crateName = "io-lifetimes";
        version = "0.3.3";
        edition = "2018";
        sha256 = "055gwdw9ix6nhvabz3040jvg5id3xw3f6dmk6j1nmix6z3b913i7";
        authors = [
          "Dan Gohman <dev@sunfishcode.online>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "std" "winsock2" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.4.0";
          }
        ];
        features = {
          "close" = [ "libc" ];
          "default" = [ "close" ];
        };
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "ip_network" = rec {
        crateName = "ip_network";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1c8fkq601gj8bqqf36jf96pglw1m8j470vaxmacz5clq19y08bxa";
        authors = [
          "Jakub Onderka <ahoj@jakubonderka.cz>"
        ];

      };
      "ipconfig" = rec {
        crateName = "ipconfig";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1mzsagc6bk3i3fpggqlq8am5rxn4hgs297rsaya90w79xj5g3qpp";
        authors = [
          "Liran Ringel <liranringel@gmail.com>"
        ];
        dependencies = [
          {
            name = "socket2";
            packageId = "socket2 0.3.19";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "widestring";
            packageId = "widestring";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winreg";
            packageId = "winreg";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "ipnet" = rec {
        crateName = "ipnet";
        version = "2.3.1";
        edition = "2015";
        sha256 = "1ad32j3kkbb0bgf5whzfkdw6843ywr48245dhk7c9gny5r7xdwk8";
        authors = [
          "Kris Price <kris@krisprice.nz>"
        ];

      };
      "itertools" = rec {
        crateName = "itertools";
        version = "0.10.3";
        edition = "2018";
        sha256 = "1qy55fqbaisr9qgbn7cvdvqlfqbh1f4ddf99zwan56z7l6gx3ad9";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "use_std" = [ "use_alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "use_alloc" "use_std" ];
      };
      "itoa 0.4.8" = rec {
        crateName = "itoa";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1m1dairwyx8kfxi7ab3b5jc71z1vigh9w4shnhiajji9avzr26dp";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "itoa 1.0.1" = rec {
        crateName = "itoa";
        version = "1.0.1";
        edition = "2018";
        sha256 = "0d8wr2qf5b25a04xf10rz9r0pdbjdgb0zaw3xvf8k2sqcz1qzaqs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.24";
        edition = "2018";
        sha256 = "1yn1vxbbqv7dqir6qbfcj8h8ddjf89m5mhvm36h13xx7k5raf9dg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.56";
        edition = "2018";
        sha256 = "010g8jkj5avy3xd77i3cprjzzpfa6z9z2ay0fkllqmpx617c53x3";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];

      };
      "jsonrpc-client-transports" = rec {
        crateName = "jsonrpc-client-transports";
        version = "18.0.0";
        edition = "2018";
        sha256 = "0fndq3mgw41y1yfnk76yi1pkgsxp5cy90ihpb2s4z8720x19vffj";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" "jsonrpc-core/arbitrary_precision" ];
          "default" = [ "http" "tls" "ws" ];
          "http" = [ "hyper" "tokio/full" ];
          "ipc" = [ "parity-tokio-ipc" "jsonrpc-server-utils" "tokio" ];
          "tls" = [ "hyper-tls" "http" ];
          "ws" = [ "websocket" "tokio" "futures/compat" ];
        };
      };
      "jsonrpc-core" = rec {
        crateName = "jsonrpc-core";
        version = "18.0.0";
        edition = "2018";
        sha256 = "1sv5m6bxyscdqg8cfzlsm8f3vks3972zc9w475l4h19dxxmggxql";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            optional = true;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
          "arbitrary_precision" = [ "serde_json/arbitrary_precision" ];
          "default" = [ "futures-executor" "futures" ];
        };
        resolvedDefaultFeatures = [ "default" "futures" "futures-executor" ];
      };
      "jsonrpc-core-client" = rec {
        crateName = "jsonrpc-core-client";
        version = "18.0.0";
        edition = "2018";
        sha256 = "1h2ffs9979lsvh2kpaz3mg9qhph7xk2h2szjskiv7nnbprxa27dm";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "compat" ];
          }
          {
            name = "jsonrpc-client-transports";
            packageId = "jsonrpc-client-transports";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary_precision" = [ "jsonrpc-client-transports/arbitrary_precision" ];
          "http" = [ "jsonrpc-client-transports/http" ];
          "ipc" = [ "jsonrpc-client-transports/ipc" ];
          "tls" = [ "jsonrpc-client-transports/tls" ];
          "ws" = [ "jsonrpc-client-transports/ws" ];
        };
      };
      "jsonrpc-derive" = rec {
        crateName = "jsonrpc-derive";
        version = "18.0.0";
        edition = "2018";
        sha256 = "1liqib6fvy8rzv3gkxkh15v7fwvafik48j77gv5xy342z9w9m4sv";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 0.1.5";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" "visit" "fold" ];
          }
        ];

      };
      "jsonrpc-http-server" = rec {
        crateName = "jsonrpc-http-server";
        version = "18.0.0";
        edition = "2018";
        sha256 = "1zzkq6yjpbjzg4ywr3bcb6j91hkbmpbvbgraammcxnaifbhadpp1";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "http1" "tcp" "server" "stream" ];
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-server-utils";
            packageId = "jsonrpc-server-utils";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];

      };
      "jsonrpc-ipc-server" = rec {
        crateName = "jsonrpc-ipc-server";
        version = "18.0.0";
        edition = "2018";
        sha256 = "0ic8li4v33rpwdssj0ks8l17vlw6x9f28znd7pd7rji3cchb0arq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-server-utils";
            packageId = "jsonrpc-server-utils";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-tokio-ipc";
            packageId = "parity-tokio-ipc";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
        ];

      };
      "jsonrpc-pubsub" = rec {
        crateName = "jsonrpc-pubsub";
        version = "18.0.0";
        edition = "2018";
        sha256 = "048hbc9a1iw5vs4ir34b83b6iksk97004p7h6zxn4vvcbrlqf3r4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "thread-pool" ];
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
          }
        ];

      };
      "jsonrpc-server-utils" = rec {
        crateName = "jsonrpc-server-utils";
        version = "18.0.0";
        edition = "2018";
        sha256 = "1m70y0czzn7ssz627pim7vxhmc5yi04daq5474n5fns862hxwkzs";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "globset";
            packageId = "globset";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" "io-util" "time" "net" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
            features = [ "net" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
        ];

      };
      "jsonrpc-ws-server" = rec {
        crateName = "jsonrpc-ws-server";
        version = "18.0.0";
        edition = "2018";
        sha256 = "0ip9r3km4bn9l308a4jjzg0df0k3j0bz8s86gfmpb51ncvbwg4pq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-server-utils";
            packageId = "jsonrpc-server-utils";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-ws";
            packageId = "parity-ws";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "keccak" = rec {
        crateName = "keccak";
        version = "0.1.0";
        edition = "2015";
        sha256 = "19ybbvxrdk9yy65rk7f5ad0hcxszkjwph68yzkj3954lnir1bhk7";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "kv-log-macro" = rec {
        crateName = "kv-log-macro";
        version = "1.0.7";
        edition = "2018";
        sha256 = "0zwp4bxkkp87rl7xy2dain77z977rvcry1gmr5bssdbn541v7s0d";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            features = [ "kv_unstable" ];
          }
        ];

      };
      "kvdb" = rec {
        crateName = "kvdb";
        version = "0.10.0";
        edition = "2018";
        sha256 = "04pm51iayhc2ad0haal0xpx4cakj41cv9x97b8h0xv39q26zb8s5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];

      };
      "kvdb-memorydb" = rec {
        crateName = "kvdb-memorydb";
        version = "0.10.0";
        edition = "2018";
        sha256 = "1xgr84c04w11nwfx9w3s4rwr682hs6kchb7vpz8arxa3qrgvidn3";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "kvdb";
            packageId = "kvdb";
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "kvdb-rocksdb" = rec {
        crateName = "kvdb-rocksdb";
        version = "0.14.0";
        edition = "2018";
        sha256 = "0np3vs7f0308cyhijd1ckphm0r94r0cq9mssci5m0vskyal6w6wv";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "fs-swap";
            packageId = "fs-swap";
          }
          {
            name = "kvdb";
            packageId = "kvdb";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "owning_ref";
            packageId = "owning_ref";
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "std" "smallvec" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "rocksdb";
            packageId = "rocksdb";
            usesDefaultFeatures = false;
            features = [ "snappy" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];

      };
      "lazy_static" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0m8gw7dn30i0zjjpjdyf6pc16c34nl71lpv461mix50x3p70h3c3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.119";
        edition = "2015";
        sha256 = "195a2q4lfhg7dc72vmchma3mzdcxpkiz6xpak3hchmrlpdjy3whv";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "align" "default" "extra_traits" "std" ];
      };
      "libloading 0.5.2" = rec {
        crateName = "libloading";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0lyply8rcqc8agajzxs7bq6ivba9dnn1i68kgb9z2flnfjh13cgj";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winerror" "errhandlingapi" "libloaderapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "libloading 0.7.3" = rec {
        crateName = "libloading";
        version = "0.7.3";
        edition = "2015";
        sha256 = "1pfdmf0scimadifda0wyg9swalr2pahwd5fjmvvfjxd7z41hzg7g";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "errhandlingapi" "libloaderapi" ];
          }
        ];

      };
      "libm" = rec {
        crateName = "libm";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1nrrd12x9fm0gaw93gdvsgkklmzcm96bj255qq77d2725hv3m8rk";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];
        features = {
          "musl-reference-tests" = [ "rand" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "libp2p 0.39.1" = rec {
        crateName = "libp2p";
        version = "0.39.1";
        edition = "2018";
        sha256 = "0cz4dsri75z44cigi1vjfyzj1vc71la9mrk7815kp3zgg1lc014h";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "atomic";
            packageId = "atomic";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-deflate";
            packageId = "libp2p-deflate 0.29.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-dns";
            packageId = "libp2p-dns 0.29.0";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-floodsub";
            packageId = "libp2p-floodsub 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-gossipsub";
            packageId = "libp2p-gossipsub 0.32.0";
            optional = true;
          }
          {
            name = "libp2p-identify";
            packageId = "libp2p-identify 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-kad";
            packageId = "libp2p-kad 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-mdns";
            packageId = "libp2p-mdns 0.31.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-mplex";
            packageId = "libp2p-mplex 0.29.0";
            optional = true;
          }
          {
            name = "libp2p-noise";
            packageId = "libp2p-noise 0.32.0";
            optional = true;
          }
          {
            name = "libp2p-ping";
            packageId = "libp2p-ping 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-plaintext";
            packageId = "libp2p-plaintext 0.29.0";
            optional = true;
          }
          {
            name = "libp2p-pnet";
            packageId = "libp2p-pnet 0.21.0";
            optional = true;
          }
          {
            name = "libp2p-relay";
            packageId = "libp2p-relay 0.3.0";
            optional = true;
          }
          {
            name = "libp2p-request-response";
            packageId = "libp2p-request-response 0.12.0";
            optional = true;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "libp2p-swarm-derive";
            packageId = "libp2p-swarm-derive 0.24.0";
          }
          {
            name = "libp2p-tcp";
            packageId = "libp2p-tcp 0.29.0";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-uds";
            packageId = "libp2p-uds 0.29.0";
            optional = true;
          }
          {
            name = "libp2p-wasm-ext";
            packageId = "libp2p-wasm-ext 0.29.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-websocket";
            packageId = "libp2p-websocket 0.30.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-yamux";
            packageId = "libp2p-yamux 0.33.0";
            optional = true;
          }
          {
            name = "multiaddr";
            packageId = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        features = {
          "default" = [ "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
          "deflate" = [ "libp2p-deflate" ];
          "dns-async-std" = [ "libp2p-dns" "libp2p-dns/async-std" ];
          "dns-tokio" = [ "libp2p-dns" "libp2p-dns/tokio" ];
          "floodsub" = [ "libp2p-floodsub" ];
          "gossipsub" = [ "libp2p-gossipsub" ];
          "identify" = [ "libp2p-identify" ];
          "kad" = [ "libp2p-kad" ];
          "mdns" = [ "libp2p-mdns" ];
          "mplex" = [ "libp2p-mplex" ];
          "noise" = [ "libp2p-noise" ];
          "ping" = [ "libp2p-ping" ];
          "plaintext" = [ "libp2p-plaintext" ];
          "pnet" = [ "libp2p-pnet" ];
          "relay" = [ "libp2p-relay" ];
          "request-response" = [ "libp2p-request-response" ];
          "secp256k1" = [ "libp2p-core/secp256k1" ];
          "tcp-async-io" = [ "libp2p-tcp" "libp2p-tcp/async-io" ];
          "tcp-tokio" = [ "libp2p-tcp" "libp2p-tcp/tokio" ];
          "uds" = [ "libp2p-uds" ];
          "wasm-ext" = [ "libp2p-wasm-ext" ];
          "wasm-ext-websocket" = [ "wasm-ext" "libp2p-wasm-ext/websocket" ];
          "websocket" = [ "libp2p-websocket" ];
          "yamux" = [ "libp2p-yamux" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "dns-async-std" "floodsub" "gossipsub" "identify" "kad" "libp2p-deflate" "libp2p-dns" "libp2p-floodsub" "libp2p-gossipsub" "libp2p-identify" "libp2p-kad" "libp2p-mdns" "libp2p-mplex" "libp2p-noise" "libp2p-ping" "libp2p-plaintext" "libp2p-pnet" "libp2p-relay" "libp2p-request-response" "libp2p-tcp" "libp2p-uds" "libp2p-wasm-ext" "libp2p-websocket" "libp2p-yamux" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
      };
      "libp2p 0.40.0" = rec {
        crateName = "libp2p";
        version = "0.40.0";
        edition = "2018";
        sha256 = "178dzlnygv7b5z19pi98bn1kj4bjqq9famf5lr05kflj6hs59v1v";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "atomic";
            packageId = "atomic";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-deflate";
            packageId = "libp2p-deflate 0.30.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-dns";
            packageId = "libp2p-dns 0.30.0";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-floodsub";
            packageId = "libp2p-floodsub 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-gossipsub";
            packageId = "libp2p-gossipsub 0.33.0";
            optional = true;
          }
          {
            name = "libp2p-identify";
            packageId = "libp2p-identify 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-kad";
            packageId = "libp2p-kad 0.32.0";
            optional = true;
          }
          {
            name = "libp2p-mdns";
            packageId = "libp2p-mdns 0.32.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-metrics";
            packageId = "libp2p-metrics";
            optional = true;
          }
          {
            name = "libp2p-mplex";
            packageId = "libp2p-mplex 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-noise";
            packageId = "libp2p-noise 0.33.0";
            optional = true;
          }
          {
            name = "libp2p-ping";
            packageId = "libp2p-ping 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-plaintext";
            packageId = "libp2p-plaintext 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-pnet";
            packageId = "libp2p-pnet 0.22.0";
            optional = true;
          }
          {
            name = "libp2p-relay";
            packageId = "libp2p-relay 0.4.0";
            optional = true;
          }
          {
            name = "libp2p-rendezvous";
            packageId = "libp2p-rendezvous";
            optional = true;
          }
          {
            name = "libp2p-request-response";
            packageId = "libp2p-request-response 0.13.0";
            optional = true;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "libp2p-swarm-derive";
            packageId = "libp2p-swarm-derive 0.25.0";
          }
          {
            name = "libp2p-tcp";
            packageId = "libp2p-tcp 0.30.0";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-uds";
            packageId = "libp2p-uds 0.30.0";
            optional = true;
          }
          {
            name = "libp2p-wasm-ext";
            packageId = "libp2p-wasm-ext 0.30.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-websocket";
            packageId = "libp2p-websocket 0.31.0";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-yamux";
            packageId = "libp2p-yamux 0.34.0";
            optional = true;
          }
          {
            name = "multiaddr";
            packageId = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        features = {
          "default" = [ "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "rendezvous" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
          "deflate" = [ "libp2p-deflate" ];
          "dns-async-std" = [ "libp2p-dns" "libp2p-dns/async-std" ];
          "dns-tokio" = [ "libp2p-dns" "libp2p-dns/tokio" ];
          "floodsub" = [ "libp2p-floodsub" ];
          "gossipsub" = [ "libp2p-gossipsub" ];
          "identify" = [ "libp2p-identify" "libp2p-metrics/identify" ];
          "kad" = [ "libp2p-kad" "libp2p-metrics/kad" ];
          "mdns" = [ "libp2p-mdns" ];
          "metrics" = [ "libp2p-metrics" ];
          "mplex" = [ "libp2p-mplex" ];
          "noise" = [ "libp2p-noise" ];
          "ping" = [ "libp2p-ping" "libp2p-metrics/ping" ];
          "plaintext" = [ "libp2p-plaintext" ];
          "pnet" = [ "libp2p-pnet" ];
          "relay" = [ "libp2p-relay" ];
          "rendezvous" = [ "libp2p-rendezvous" ];
          "request-response" = [ "libp2p-request-response" ];
          "secp256k1" = [ "libp2p-core/secp256k1" ];
          "tcp-async-io" = [ "libp2p-tcp" "libp2p-tcp/async-io" ];
          "tcp-tokio" = [ "libp2p-tcp" "libp2p-tcp/tokio" ];
          "uds" = [ "libp2p-uds" ];
          "wasm-bindgen" = [ "parking_lot/wasm-bindgen" ];
          "wasm-ext" = [ "libp2p-wasm-ext" ];
          "wasm-ext-websocket" = [ "wasm-ext" "libp2p-wasm-ext/websocket" ];
          "websocket" = [ "libp2p-websocket" ];
          "yamux" = [ "libp2p-yamux" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "dns-async-std" "floodsub" "gossipsub" "identify" "kad" "libp2p-deflate" "libp2p-dns" "libp2p-floodsub" "libp2p-gossipsub" "libp2p-identify" "libp2p-kad" "libp2p-mdns" "libp2p-metrics" "libp2p-mplex" "libp2p-noise" "libp2p-ping" "libp2p-plaintext" "libp2p-pnet" "libp2p-relay" "libp2p-rendezvous" "libp2p-request-response" "libp2p-tcp" "libp2p-uds" "libp2p-wasm-ext" "libp2p-websocket" "libp2p-yamux" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "rendezvous" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
      };
      "libp2p-core 0.29.0" = rec {
        crateName = "libp2p-core";
        version = "0.29.0";
        edition = "2018";
        sha256 = "0ndabz1kdryqiwxk9jcdp3s38hmd7zv951bw54x5j854xaylm6xg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asn1_der";
            packageId = "asn1_der";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "executor" "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1 0.5.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multiaddr";
            packageId = "multiaddr";
          }
          {
            name = "multihash";
            packageId = "multihash 0.14.0";
            usesDefaultFeatures = false;
            features = [ "std" "multihash-impl" "identity" "sha2" ];
          }
          {
            name = "multistream-select";
            packageId = "multistream-select";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "alloc" "std" ];
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];
        devDependencies = [
          {
            name = "multihash";
            packageId = "multihash 0.14.0";
            usesDefaultFeatures = false;
            features = [ "arb" ];
          }
        ];
        features = {
          "default" = [ "secp256k1" ];
          "secp256k1" = [ "libsecp256k1" ];
        };
        resolvedDefaultFeatures = [ "default" "libsecp256k1" "secp256k1" ];
      };
      "libp2p-core 0.30.2" = rec {
        crateName = "libp2p-core";
        version = "0.30.2";
        edition = "2018";
        sha256 = "031lcahpc6c8jrx27m09cn56jdqic4zd1ppcgf0xp0zj9paxgal6";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asn1_der";
            packageId = "asn1_der";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "executor" "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1 0.7.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multiaddr";
            packageId = "multiaddr";
          }
          {
            name = "multihash";
            packageId = "multihash 0.14.0";
            usesDefaultFeatures = false;
            features = [ "std" "multihash-impl" "identity" "sha2" ];
          }
          {
            name = "multistream-select";
            packageId = "multistream-select";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "alloc" "std" ];
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "multihash";
            packageId = "multihash 0.14.0";
            usesDefaultFeatures = false;
            features = [ "arb" ];
          }
        ];
        features = {
          "default" = [ "secp256k1" ];
          "secp256k1" = [ "libsecp256k1" ];
        };
        resolvedDefaultFeatures = [ "default" "libsecp256k1" "secp256k1" ];
      };
      "libp2p-deflate 0.29.0" = rec {
        crateName = "libp2p-deflate";
        version = "0.29.0";
        edition = "2018";
        sha256 = "1j6dkn0hc2j9d7cpzl4z0km34qqrlrmsfgm0j2gmgy5pq367y2b6";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
        ];

      };
      "libp2p-deflate 0.30.0" = rec {
        crateName = "libp2p-deflate";
        version = "0.30.0";
        edition = "2018";
        sha256 = "15siwrj8cci1ac6ks3ba5jzj7z2cwqzvc5sb7zk3vwwmn6nh1a2i";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
        ];

      };
      "libp2p-dns 0.29.0" = rec {
        crateName = "libp2p-dns";
        version = "0.29.0";
        edition = "2018";
        sha256 = "0cicwiicgzapcrq7awpn99bhlrmijfg5i01d41zs31bb36rhizsq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std-resolver";
            packageId = "async-std-resolver";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
            features = [ "system-config" ];
          }
        ];
        features = {
          "async-std" = [ "async-std-resolver" ];
          "default" = [ "async-std" ];
          "tokio" = [ "trust-dns-resolver/tokio-runtime" ];
          "tokio-dns-over-https-rustls" = [ "tokio" "trust-dns-resolver/dns-over-https-rustls" ];
          "tokio-dns-over-rustls" = [ "tokio" "trust-dns-resolver/dns-over-rustls" ];
        };
        resolvedDefaultFeatures = [ "async-std" "async-std-resolver" ];
      };
      "libp2p-dns 0.30.0" = rec {
        crateName = "libp2p-dns";
        version = "0.30.0";
        edition = "2018";
        sha256 = "1664dfh66zvgm3xkqbc7y9b7iaqvn49pbzxg4aycbqxnbk8qk3xv";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std-resolver";
            packageId = "async-std-resolver";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
            features = [ "system-config" ];
          }
        ];
        features = {
          "async-std" = [ "async-std-resolver" ];
          "default" = [ "async-std" ];
          "tokio" = [ "trust-dns-resolver/tokio-runtime" ];
          "tokio-dns-over-https-rustls" = [ "tokio" "trust-dns-resolver/dns-over-https-rustls" ];
          "tokio-dns-over-rustls" = [ "tokio" "trust-dns-resolver/dns-over-rustls" ];
        };
        resolvedDefaultFeatures = [ "async-std" "async-std-resolver" ];
      };
      "libp2p-floodsub 0.30.0" = rec {
        crateName = "libp2p-floodsub";
        version = "0.30.0";
        edition = "2018";
        sha256 = "0kr1xdmssq45066wlscwhm9lm40zp5g2gd55qzd7jwcn423wlkj0";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cuckoofilter";
            packageId = "cuckoofilter";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-floodsub 0.31.0" = rec {
        crateName = "libp2p-floodsub";
        version = "0.31.0";
        edition = "2018";
        sha256 = "0zq66ija195xh34kiisfijprf5sj6jm83dg2pavm3sh114hxgcxa";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cuckoofilter";
            packageId = "cuckoofilter";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-gossipsub 0.32.0" = rec {
        crateName = "libp2p-gossipsub";
        version = "0.32.0";
        edition = "2018";
        sha256 = "13h5j57myxxw2nvgvxjngmm1dd5vnih3b9q83wra7hybkdq4ik5i";
        authors = [
          "Age Manning <Age@AgeManning.com>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hex_fmt";
            packageId = "hex_fmt";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-gossipsub 0.33.0" = rec {
        crateName = "libp2p-gossipsub";
        version = "0.33.0";
        edition = "2018";
        sha256 = "13b99p3lyfkw82kcqa0l7n0frak0b99qrixccmpc9nmmkrhsvvnz";
        authors = [
          "Age Manning <Age@AgeManning.com>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hex_fmt";
            packageId = "hex_fmt";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-identify 0.30.0" = rec {
        crateName = "libp2p-identify";
        version = "0.30.0";
        edition = "2018";
        sha256 = "13h0k5gj8qq17xzn0f3jq16dvcqj8m6qqcbc06bznr3ny1n1zdm7";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-identify 0.31.0" = rec {
        crateName = "libp2p-identify";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1k8dgdy1kjvxnkw9m0pp5qlsjppsbxfm6bdpz27jhgqqfiajg8fc";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.6.6";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-kad 0.31.0" = rec {
        crateName = "libp2p-kad";
        version = "0.31.0";
        edition = "2018";
        sha256 = "0pmp9wab4236pb065bgpy3gk9vlqn92v62jscqsl54l7ki47ivah";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
          }
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "uint";
            packageId = "uint";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-kad 0.32.0" = rec {
        crateName = "libp2p-kad";
        version = "0.32.0";
        edition = "2018";
        sha256 = "1fnkphjncgzm6crdacjdz539nlwy8h1dx2rns44klpr8rb07sad2";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
          }
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "uint";
            packageId = "uint";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-mdns 0.31.0" = rec {
        crateName = "libp2p-mdns";
        version = "0.31.0";
        edition = "2018";
        sha256 = "0czsskbl5s6i8h4bx8hf1xnhmdz7x2h81rb7cldlgf145ay6r7m2";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "dns-parser";
            packageId = "dns-parser";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            features = [ "all" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];

      };
      "libp2p-mdns 0.32.0" = rec {
        crateName = "libp2p-mdns";
        version = "0.32.0";
        edition = "2018";
        sha256 = "0iadwvwcn43y3q7qfl54j5hjapskws4dz80h77zq92nw9fv69j0l";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "dns-parser";
            packageId = "dns-parser";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            features = [ "all" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];

      };
      "libp2p-metrics" = rec {
        crateName = "libp2p-metrics";
        version = "0.1.0";
        edition = "2018";
        sha256 = "1ckapf5w9cgrkprhlb7diirzsb41y3w8jr44kdbs92rgvpy35x2a";
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
          }
          {
            name = "libp2p-identify";
            packageId = "libp2p-identify 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-kad";
            packageId = "libp2p-kad 0.32.0";
            optional = true;
          }
          {
            name = "libp2p-ping";
            packageId = "libp2p-ping 0.31.0";
            optional = true;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "open-metrics-client";
            packageId = "open-metrics-client";
          }
        ];
        features = {
          "identify" = [ "libp2p-identify" ];
          "kad" = [ "libp2p-kad" ];
          "ping" = [ "libp2p-ping" ];
        };
        resolvedDefaultFeatures = [ "identify" "kad" "libp2p-identify" "libp2p-kad" "libp2p-ping" "ping" ];
      };
      "libp2p-mplex 0.29.0" = rec {
        crateName = "libp2p-mplex";
        version = "0.29.0";
        edition = "2018";
        sha256 = "16bsdy0ijl0z9cayagf3y94zsgwxgbk2802qbx1g93f64sjrwg9i";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nohash-hasher";
            packageId = "nohash-hasher";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-mplex 0.30.0" = rec {
        crateName = "libp2p-mplex";
        version = "0.30.0";
        edition = "2018";
        sha256 = "1gsghdw708mlmrnpjq8w41nxsqyb1vsrf16fpwa0xx4pym7dcb3z";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nohash-hasher";
            packageId = "nohash-hasher";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-noise 0.32.0" = rec {
        crateName = "libp2p-noise";
        version = "0.32.0";
        edition = "2018";
        sha256 = "0gjj75ccmjif2i6glrcfninfbsbn3zil1k41r6knnarl5whvf79z";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.2.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "ring-resolver" ];
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "default-resolver" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-noise 0.33.0" = rec {
        crateName = "libp2p-noise";
        version = "0.33.0";
        edition = "2018";
        sha256 = "0ymqiy6g4xdj34v9ycacmfklcl7m9dbw1id9gjxj30h8k5x2qxx8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.2.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "ring-resolver" ];
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "default-resolver" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-ping 0.30.0" = rec {
        crateName = "libp2p-ping";
        version = "0.30.0";
        edition = "2018";
        sha256 = "0fd4aj7pb39g36vlf6hv2qd1i1979zf2kcz7yfm0nyhbxgcwz0i4";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];

      };
      "libp2p-ping 0.31.0" = rec {
        crateName = "libp2p-ping";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1kyv99k85xhjbb133pivcr2jqsnl96p5kkxnkq6m61ngql77pvw0";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];

      };
      "libp2p-plaintext 0.29.0" = rec {
        crateName = "libp2p-plaintext";
        version = "0.29.0";
        edition = "2018";
        sha256 = "1r7qkj48scrwpzp9navbnmmdhrmwlfknb7qrbjd0p1r3ahz7id0k";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-plaintext 0.30.0" = rec {
        crateName = "libp2p-plaintext";
        version = "0.30.0";
        edition = "2018";
        sha256 = "0nll9qnjcf39q535rk356bqjmwrlky5xgcd3i562fjiyydpimfjz";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-pnet 0.21.0" = rec {
        crateName = "libp2p-pnet";
        version = "0.21.0";
        edition = "2018";
        sha256 = "0x69vjqjnysv2wfh25q35qs8vkdd0xmvjjgyvq6v9r8pp7a4vjq7";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "salsa20";
            packageId = "salsa20 0.8.1";
          }
          {
            name = "sha3";
            packageId = "sha3";
          }
        ];

      };
      "libp2p-pnet 0.22.0" = rec {
        crateName = "libp2p-pnet";
        version = "0.22.0";
        edition = "2018";
        sha256 = "0b699kkfpa4jsqz203nshnb3437gl6svkz1nbdxi1058pn5la6hg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "salsa20";
            packageId = "salsa20 0.9.0";
          }
          {
            name = "sha3";
            packageId = "sha3";
          }
        ];

      };
      "libp2p-relay 0.3.0" = rec {
        crateName = "libp2p-relay";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1ai2qr8i0dpfndkikr0j9yfnnbn62bh84afy2vkidp0wv37zccq1";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.8.0";
          }
        ];

      };
      "libp2p-relay 0.4.0" = rec {
        crateName = "libp2p-relay";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1qzkiqkidadksrbr3wlxixj0vhpgdipagay2zk4f737sj0fbcli8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];

      };
      "libp2p-rendezvous" = rec {
        crateName = "libp2p-rendezvous";
        version = "0.1.0";
        edition = "2018";
        sha256 = "1i87jh67miqhnrj6dvq19bc7cfdgda3m8a1xvihzyzk7wywx59hl";
        authors = [
          "The COMIT guys <hello@comit.network>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
          }
          {
            name = "bimap";
            packageId = "bimap";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
        ];

      };
      "libp2p-request-response 0.12.0" = rec {
        crateName = "libp2p-request-response";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0hfj2sad6ik457f9rbx86javmrn9qzgbqg7r7896c542nr2axk86";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.30.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.6.6";
          }
          {
            name = "minicbor";
            packageId = "minicbor";
            features = [ "std" "derive" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "std" "futures" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-request-response 0.13.0" = rec {
        crateName = "libp2p-request-response";
        version = "0.13.0";
        edition = "2018";
        sha256 = "1n1l8qx25dkcins6zsdjffpk9d0zys64x5z1fx3ghsylsv7a8xx8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm 0.31.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.7.2";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "std" "futures" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-swarm 0.30.0" = rec {
        crateName = "libp2p-swarm";
        version = "0.30.0";
        edition = "2018";
        sha256 = "1agr90r1y3vx14852yqggiwc9s51pq1dhk1vhrkm8mg1849qd0vh";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-swarm 0.31.0" = rec {
        crateName = "libp2p-swarm";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1sbs20dz02v7zgp0kz1nkw777f1zfwbmarhj188bq8zj12jq8l9z";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-swarm-derive 0.24.0" = rec {
        crateName = "libp2p-swarm-derive";
        version = "0.24.0";
        edition = "2018";
        sha256 = "176p11p7xi4xhi2wf1ylf3v2qgc3n3d4zddbymlli1gwsh4b735b";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "libp2p-swarm-derive 0.25.0" = rec {
        crateName = "libp2p-swarm-derive";
        version = "0.25.0";
        edition = "2018";
        sha256 = "1hh0digkxqw16s0mgmrvcxdd54w6jx3wilfnx72bsfbxf87jjb07";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "libp2p-tcp 0.29.0" = rec {
        crateName = "libp2p-tcp";
        version = "0.29.0";
        edition = "2018";
        sha256 = "0a5zncj0ixf3g6wj806bzq6r91m1viiabk8d47pgxdabddmx5vbr";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            rename = "async-io-crate";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
            optional = true;
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            features = [ "all" ];
          }
        ];
        features = {
          "async-io" = [ "async-io-crate" "if-watch" ];
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" "if-addrs" ];
        };
        resolvedDefaultFeatures = [ "async-io" "async-io-crate" "if-watch" ];
      };
      "libp2p-tcp 0.30.0" = rec {
        crateName = "libp2p-tcp";
        version = "0.30.0";
        edition = "2018";
        sha256 = "0jxfzfsangl77l6v66aqmwmq6kvj6lbgbz0i3ka2bx8y6svcb6bk";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            rename = "async-io-crate";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
            optional = true;
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            features = [ "all" ];
          }
        ];
        features = {
          "async-io" = [ "async-io-crate" "if-watch" ];
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" "if-addrs" ];
        };
        resolvedDefaultFeatures = [ "async-io" "async-io-crate" "if-watch" ];
      };
      "libp2p-uds 0.29.0" = rec {
        crateName = "libp2p-uds";
        version = "0.29.0";
        edition = "2018";
        sha256 = "10h1s8fz921wl3wljnp81zdwswjw6abl8kvi7lkryknx80s7j3i8";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "default" = [ "async-std" ];
        };
        resolvedDefaultFeatures = [ "async-std" "default" ];
      };
      "libp2p-uds 0.30.0" = rec {
        crateName = "libp2p-uds";
        version = "0.30.0";
        edition = "2018";
        sha256 = "0wsrvi819l3x9b3vvv2kbzbr0ig8gipvjr0gsvgnb0918qz5ddxq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "log";
            packageId = "log";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "default" = [ "async-std" ];
        };
        resolvedDefaultFeatures = [ "async-std" "default" ];
      };
      "libp2p-wasm-ext 0.29.0" = rec {
        crateName = "libp2p-wasm-ext";
        version = "0.29.0";
        edition = "2018";
        sha256 = "1xmis7j93hcza1sqlhh7jryp69hyb7mb15q4ymv7lgdd1wabflzm";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "parity-send-wrapper";
            packageId = "parity-send-wrapper";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
          }
        ];
        features = {
        };
      };
      "libp2p-wasm-ext 0.30.0" = rec {
        crateName = "libp2p-wasm-ext";
        version = "0.30.0";
        edition = "2018";
        sha256 = "1ks203rry41grp4pq90faf73c27dym9wc24p3wjj0l1wnw1a620h";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-send-wrapper";
            packageId = "parity-send-wrapper";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
          }
        ];
        features = {
        };
      };
      "libp2p-websocket 0.30.0" = rec {
        crateName = "libp2p-websocket";
        version = "0.30.0";
        edition = "2018";
        sha256 = "09sy1rf0d212sdrb9vdbynrflv38bklb2qbz11crsgh6yp5rvyfx";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-rustls";
            packageId = "futures-rustls";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "quicksink";
            packageId = "quicksink";
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "soketto";
            packageId = "soketto 0.4.2";
            features = [ "deflate" ];
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
          }
        ];

      };
      "libp2p-websocket 0.31.0" = rec {
        crateName = "libp2p-websocket";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1kx1v7m1hzvmq9v2bk04hrjn845rjbm6b7hs6xllkmhy5pw2vq92";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-rustls";
            packageId = "futures-rustls";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "quicksink";
            packageId = "quicksink";
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "soketto";
            packageId = "soketto 0.7.1";
            features = [ "deflate" ];
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
          }
        ];

      };
      "libp2p-yamux 0.33.0" = rec {
        crateName = "libp2p-yamux";
        version = "0.33.0";
        edition = "2018";
        sha256 = "1gs4s0nb9d76w5m9spmym29xpbxv846bl7mvy0kyvjrpkkfw0k11";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.29.0";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "yamux";
            packageId = "yamux";
          }
        ];

      };
      "libp2p-yamux 0.34.0" = rec {
        crateName = "libp2p-yamux";
        version = "0.34.0";
        edition = "2018";
        sha256 = "1bw9d1zhan8jvibsrj65gyclqm8d8rzz2gg9wy3p2zc6p2mn4wsf";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core 0.30.2";
            usesDefaultFeatures = false;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "yamux";
            packageId = "yamux";
          }
        ];

      };
      "librocksdb-sys" = rec {
        crateName = "librocksdb-sys";
        version = "6.20.3";
        edition = "2018";
        sha256 = "0pd2kjxx4mv3nfk7b2w6jq2x4m3153sqq2aakbmsqi088z9aj2f3";
        authors = [
          "Karl Hobley <karlhobley10@gmail.com>"
          "Arkadiy Paronyan <arkadiy@ethcore.io>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "bindgen";
            packageId = "bindgen";
            usesDefaultFeatures = false;
            features = [ "runtime" ];
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "glob";
            packageId = "glob";
          }
        ];
        features = {
          "default" = [ "static" ];
        };
        resolvedDefaultFeatures = [ "default" "snappy" "static" ];
      };
      "libsecp256k1 0.5.0" = rec {
        crateName = "libsecp256k1";
        version = "0.5.0";
        edition = "2018";
        sha256 = "1mzwq5bc6b7inwnwkk221b270ply4hl8ma1pjsm42fxkk8ikf4dx";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "base64";
            packageId = "base64 0.12.3";
            usesDefaultFeatures = false;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "hmac-drbg";
            packageId = "hmac-drbg";
            optional = true;
          }
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.2.2";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "libsecp256k1-gen-ecmult";
            packageId = "libsecp256k1-gen-ecmult 0.2.1";
          }
          {
            name = "libsecp256k1-gen-genmult";
            packageId = "libsecp256k1-gen-genmult 0.2.1";
          }
        ];
        features = {
          "default" = [ "std" "hmac" "static-context" ];
          "hmac" = [ "hmac-drbg" "sha2" "typenum" ];
          "std" = [ "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hmac" "hmac-drbg" "sha2" "static-context" "std" "typenum" ];
      };
      "libsecp256k1 0.7.0" = rec {
        crateName = "libsecp256k1";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0dvzx6xrk1rml5vifb3ynficw87ajhprn3iq54j280mbifn2lidh";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
            usesDefaultFeatures = false;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "hmac-drbg";
            packageId = "hmac-drbg";
            optional = true;
          }
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.3.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "libsecp256k1-gen-ecmult";
            packageId = "libsecp256k1-gen-ecmult 0.3.0";
          }
          {
            name = "libsecp256k1-gen-genmult";
            packageId = "libsecp256k1-gen-genmult 0.3.0";
          }
        ];
        features = {
          "default" = [ "std" "hmac" "static-context" ];
          "hmac" = [ "hmac-drbg" "sha2" "typenum" ];
          "lazy-static-context" = [ "static-context" "lazy_static" "std" ];
          "std" = [ "libsecp256k1-core/std" "sha2/std" "rand/std" "serde/std" "base64/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hmac" "hmac-drbg" "sha2" "static-context" "std" "typenum" ];
      };
      "libsecp256k1-core 0.2.2" = rec {
        crateName = "libsecp256k1-core";
        version = "0.2.2";
        edition = "2018";
        sha256 = "104a8yr8r472v3hsxnicjmgjmbkxl9qqdwf5b7vwwa7c1iqspxnh";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "subtle/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "libsecp256k1-core 0.3.0" = rec {
        crateName = "libsecp256k1-core";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0lalbm1f67dd0cxpa12mjq0q6wvcq5bangjk9nj2519dcjxvksav";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "subtle/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "libsecp256k1-gen-ecmult 0.2.1" = rec {
        crateName = "libsecp256k1-gen-ecmult";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1hy5agkfylvdlfsxm5n07ljx1byyy1cyc1rzm23ar3ykhjsrdayc";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.2.2";
          }
        ];

      };
      "libsecp256k1-gen-ecmult 0.3.0" = rec {
        crateName = "libsecp256k1-gen-ecmult";
        version = "0.3.0";
        edition = "2018";
        sha256 = "02a8rddxan8616rrq5b88hbw9ikz323psfk4fahyi1swql4chf1h";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.3.0";
          }
        ];

      };
      "libsecp256k1-gen-genmult 0.2.1" = rec {
        crateName = "libsecp256k1-gen-genmult";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0pag9hq2pvisin0iy67q5m0388wf0qmv7gm290famqwmjcagxav7";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.2.2";
          }
        ];

      };
      "libsecp256k1-gen-genmult 0.3.0" = rec {
        crateName = "libsecp256k1-gen-genmult";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0z3gl0x5rpdjrr3mds8620gk0h0qjfccr33f1v2ar7pc5jxddf1x";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "libsecp256k1-core";
            packageId = "libsecp256k1-core 0.3.0";
          }
        ];

      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.1.3";
        edition = "2015";
        sha256 = "0rpcxkccjn8da9114kvl8hrnrkspzsmdn0qcxlix85lwajw3am6y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "libc" "stock-zlib" ];
          "zlib-ng" = [ "libc" "cmake" ];
        };
      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.4";
        edition = "2015";
        sha256 = "1ww8zsraqnvrsknd315481185igwkx5n14xnhq5i8216z65b7fbz";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
      };
      "linked_hash_set" = rec {
        crateName = "linked_hash_set";
        version = "0.1.4";
        edition = "2018";
        sha256 = "124m7wiz9ah7ah58ckai413mzfglh3y1nz64qy1s676qlinnq627";
        authors = [
          "Alex Butler <alexheretic@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];

      };
      "linregress" = rec {
        crateName = "linregress";
        version = "0.4.4";
        edition = "2018";
        sha256 = "1f6ybljgh5lahx1b2qb48hfgp18m0fhbqisjcax1mkaybyl03inn";
        authors = [
          "Nils Mehrtens <nils@hasinila.de>"
        ];
        dependencies = [
          {
            name = "nalgebra";
            packageId = "nalgebra";
          }
          {
            name = "statrs";
            packageId = "statrs";
          }
        ];
        features = {
        };
      };
      "linux-raw-sys" = rec {
        crateName = "linux-raw-sys";
        version = "0.0.28";
        edition = "2018";
        sha256 = "1xdmvlx3vikahjhr1nwqdz97bdpdbxksadch2kra8zpc8bzqfwv8";
        authors = [
          "Dan Gohman <dev@sunfishcode.online>"
        ];
        features = {
          "default" = [ "std" "general" "errno" ];
          "no_std" = [ "cty" ];
        };
        resolvedDefaultFeatures = [ "default" "errno" "general" "std" "v5_11" "v5_4" ];
      };
      "lock_api" = rec {
        crateName = "lock_api";
        version = "0.4.6";
        edition = "2018";
        sha256 = "0frbbqqiwngg33xrc69xagi4rqqk62msllr7z95mlbjaxzbkv548";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log" = rec {
        crateName = "log";
        version = "0.4.14";
        edition = "2015";
        sha256 = "04175hv0v62shd82qydq58a48k3bjijmk54v38zgqlbxqkkbpfai";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "value-bag";
            packageId = "value-bag";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "value-bag";
            packageId = "value-bag";
            features = [ "test" ];
          }
        ];
        features = {
          "kv_unstable" = [ "value-bag" ];
          "kv_unstable_serde" = [ "kv_unstable_std" "value-bag/serde" "serde" ];
          "kv_unstable_std" = [ "std" "kv_unstable" "value-bag/error" ];
          "kv_unstable_sval" = [ "kv_unstable" "value-bag/sval" "sval" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "std" "value-bag" ];
      };
      "lru 0.6.6" = rec {
        crateName = "lru";
        version = "0.6.6";
        edition = "2015";
        sha256 = "14dsf7345kwb8fg75dmkywkjpchxc9yxkwng124nwhc5nhldk8ky";
        authors = [
          "Jerome Froelich <jeromefroelic@hotmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
          }
        ];
        features = {
          "default" = [ "hashbrown" ];
          "nightly" = [ "hashbrown" "hashbrown/nightly" ];
        };
        resolvedDefaultFeatures = [ "default" "hashbrown" ];
      };
      "lru 0.7.2" = rec {
        crateName = "lru";
        version = "0.7.2";
        edition = "2015";
        sha256 = "07sdl7gpg30hbz7cgph75n2xl8915rshi90c7jqr5j9mi62m6hr7";
        authors = [
          "Jerome Froelich <jeromefroelic@hotmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
          }
        ];
        features = {
          "default" = [ "hashbrown" ];
          "nightly" = [ "hashbrown" "hashbrown/nightly" ];
        };
        resolvedDefaultFeatures = [ "default" "hashbrown" ];
      };
      "lru-cache" = rec {
        crateName = "lru-cache";
        version = "0.1.2";
        edition = "2015";
        sha256 = "071viv6g2p3akwqmfb3c8vsycs5n7kr17b70l7la071jv0d4zqii";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];
        features = {
          "heapsize_impl" = [ "heapsize" "linked-hash-map/heapsize_impl" ];
        };
      };
      "lz4" = rec {
        crateName = "lz4";
        version = "1.23.2";
        edition = "2018";
        crateBin = [];
        sha256 = "0k3j1wsgn4c5ys4vma326r00g5rq5ggp7k385rmby08yk7b0xhma";
        authors = [
          "Jens Heyens <jens.heyens@ewetel.net>"
          "Artem V. Navrotskiy <bozaro@buzzsoft.ru>"
          "Patrick Marks <pmarks@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "lz4-sys";
            packageId = "lz4-sys";
          }
        ];

      };
      "lz4-sys" = rec {
        crateName = "lz4-sys";
        version = "1.9.2";
        edition = "2015";
        sha256 = "1bmc82bddx2lm0r9bn422cxbwlwq6qld6m6l78hjcclbbnlrm9yw";
        authors = [
          "Jens Heyens <jens.heyens@ewetel.net"
          "Artem V. Navrotskiy <bozaro@buzzsoft.ru>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "mach" = rec {
        crateName = "mach";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1yksa8lwzqh150gr4417rls1wk20asy9vhp8kq5g9n7z58xyh8xq";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "rustc-std-workspace-core" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "match_cfg" = rec {
        crateName = "match_cfg";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1r5j3zqc3qr8ybcx95bk8q57mkizmgmffj5lmicd4i8d9riyigpz";
        authors = [
          "gnzlbg <gonzalobg88@gmail.com>"
        ];
        features = {
          "default" = [ "use_core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_core" ];
      };
      "matchers" = rec {
        crateName = "matchers";
        version = "0.0.1";
        edition = "2018";
        sha256 = "1q8ckqmkjqkznvdi9x0z769yz2bmvlqcwx51ad2lpk4mfmgpi6gh";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "regex-automata";
            packageId = "regex-automata";
          }
        ];

      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0gw5ib38jfgyyah8nyyxr036grqv1arkf1srgfa4h386dav7iqx3";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];

      };
      "matrixmultiply" = rec {
        crateName = "matrixmultiply";
        version = "0.3.2";
        edition = "2018";
        sha256 = "112dbbjfiw4yji8vf94hk9hlhd9sa67qr3v0vkzfcx2hsd6mvn5d";
        authors = [
          "bluss"
          "R. Janis Goldschmidt"
        ];
        dependencies = [
          {
            name = "rawpointer";
            packageId = "rawpointer";
          }
        ];
        features = {
          "default" = [ "std" ];
          "threading" = [ "thread-tree" "std" "once_cell" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.4.1";
        edition = "2018";
        sha256 = "0smq8xzd40njqpfzv5mghigj91fzlfrfg842iz8x0wqvw2dw731h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "memmap2 0.2.3" = rec {
        crateName = "memmap2";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1d26q3sh0z5dvwpilqqvq5bqi7vqfd2kc5gk3pdj7h65rnykwgkj";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Evgeniy Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "memmap2 0.5.3" = rec {
        crateName = "memmap2";
        version = "0.5.3";
        edition = "2018";
        sha256 = "13y09b9fgyfsj3zkv62yd01wp3spdaqgwnbs3a16gj4r76r3syh5";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Yevhenii Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1kkrzll58a3ayn5zdyy9i1f1v3mx0xgl29x0chq614zazba638ss";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "memory-db" = rec {
        crateName = "memory-db";
        version = "0.27.0";
        edition = "2018";
        sha256 = "1ifwglrqbc0n8iv57xwak93w80cqlidbf5z8yyjh3hsgs04nw06y";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            usesDefaultFeatures = false;
            features = [ "ahash" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "hashbrown" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "hash-db/std" "parity-util-mem/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "memory_units" = rec {
        crateName = "memory_units";
        version = "0.3.0";
        edition = "2015";
        sha256 = "10h89f2ldiaf22x3hyf6nvf3w66biar36g6qrkc2aqqb7hznxnbi";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];

      };
      "merlin" = rec {
        crateName = "merlin";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0hivklid2gzwz6179g0wiay55ah3xafvaavxkznjvi5kz3q1q9jf";
        authors = [
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "keccak";
            packageId = "keccak";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "debug-transcript" = [ "hex" ];
          "default" = [ "std" ];
          "std" = [ "rand_core/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "minicbor" = rec {
        crateName = "minicbor";
        version = "0.8.1";
        edition = "2018";
        crateBin = [];
        sha256 = "03fahp9aa4jk6alpza0q4cdsv07q0ysjg8lnlnn5sh92raq5paji";
        authors = [
          "Toralf Wittner <tw@dtex.org>"
        ];
        dependencies = [
          {
            name = "minicbor-derive";
            packageId = "minicbor-derive";
            optional = true;
          }
        ];
        features = {
          "derive" = [ "minicbor-derive" ];
        };
        resolvedDefaultFeatures = [ "derive" "minicbor-derive" "std" ];
      };
      "minicbor-derive" = rec {
        crateName = "minicbor-derive";
        version = "0.6.4";
        edition = "2018";
        sha256 = "12670s0cs7a6md5qxdjxca6vicm239ijczkk0hwv34nhgj8rz6al";
        procMacro = true;
        authors = [
          "Toralf Wittner <tw@dtex.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "visit" ];
          }
        ];

      };
      "minimal-lexical" = rec {
        crateName = "minimal-lexical";
        version = "0.2.1";
        edition = "2018";
        sha256 = "16ppc5g84aijpri4jzv14rvcnslvlpphbszc7zzp6vfkddf4qdb8";
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.4.4";
        edition = "2018";
        sha256 = "0jsfv00hl5rmx1nijn59sr9jmjd4rjnjhh4kdjy8d187iklih9d9";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler";
            packageId = "adler";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "adler/rustc-dep-of-std" ];
        };
      };
      "mio 0.6.23" = rec {
        crateName = "mio";
        version = "0.6.23";
        edition = "2015";
        sha256 = "1i2c1vl8lr45apkh8xbh9k56ihfsmqff5l7s2fya7whvp7sndzaa";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow 0.2.2";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."windows" or false);
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio 0.8.0" = rec {
        crateName = "mio";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1cmgipv6k536xf0a6qd359wnpxg0pfrpkr9bhy8zqh8bza2jy9xs";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "miow";
            packageId = "miow 0.3.7";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" "mswsock" ];
          }
        ];
        features = {
          "os-ext" = [ "os-poll" ];
        };
        resolvedDefaultFeatures = [ "default" "net" "os-ext" "os-poll" ];
      };
      "mio-extras" = rec {
        crateName = "mio-extras";
        version = "2.0.6";
        edition = "2018";
        sha256 = "069gfhlv0wlwfx1k2sriwfws490kjp490rv2qivyfb01j3i3yh2j";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "David Hotham"
        ];
        dependencies = [
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "miow 0.2.2" = rec {
        crateName = "miow";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0kcl8rnv0bhiarcdakik670w8fnxzlxhi1ys7152sck68510in7b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];

      };
      "miow 0.3.7" = rec {
        crateName = "miow";
        version = "0.3.7";
        edition = "2018";
        sha256 = "08afp2xfpxmdw003111lxz6g9jgbj4zi2fpldvv7da6d4nqcbwdr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "fileapi" "handleapi" "ioapiset" "minwindef" "namedpipeapi" "ntdef" "synchapi" "winerror" "winsock2" "ws2def" "ws2ipdef" ];
          }
        ];

      };
      "more-asserts" = rec {
        crateName = "more-asserts";
        version = "0.2.2";
        edition = "2015";
        sha256 = "12b3fypg2sr4qmxy6wiyx6k9sdg573f5ij98cdmbrg00whnyqhvq";
        authors = [
          "Thom Chiovoloni <chiovolonit@gmail.com>"
        ];

      };
      "multiaddr" = rec {
        crateName = "multiaddr";
        version = "0.13.0";
        edition = "2018";
        sha256 = "16b4lh45wdqsvpvgma5y28vx8xh8n9qlz5lz6z31m5a146l4xvj8";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "multihash";
            packageId = "multihash 0.14.0";
            usesDefaultFeatures = false;
            features = [ "std" "multihash-impl" "identity" ];
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "url" ];
        };
        resolvedDefaultFeatures = [ "default" "url" ];
      };
      "multibase" = rec {
        crateName = "multibase";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1qk76q47fwfw97439lylvsfy2n4s57spx1mf83hi5zshjq1n135p";
        authors = [
          "Friedel Ziegelmayer <dignifiedquire@gmail.com>"
        ];
        dependencies = [
          {
            name = "base-x";
            packageId = "base-x";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "data-encoding-macro";
            packageId = "data-encoding-macro";
          }
        ];

      };
      "multihash 0.13.2" = rec {
        crateName = "multihash";
        version = "0.13.2";
        edition = "2018";
        sha256 = "1avwzd4pz71gnbfl1b2glbw1yhv06yv4ish6jf92szc8idln7b2d";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "David Craven <david@craven.ch>"
          "Volker Mische <volker.mische@gmail.com>"
        ];
        dependencies = [
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "blake2s_simd";
            packageId = "blake2s_simd";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "blake3";
            packageId = "blake3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "multihash-derive";
            packageId = "multihash-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            rename = "sha-2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha3";
            packageId = "sha3";
            rename = "sha-3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
          }
        ];
        features = {
          "arb" = [ "quickcheck" "rand" ];
          "blake2b" = [ "blake2b_simd" ];
          "blake2s" = [ "blake2s_simd" ];
          "default" = [ "std" "derive" "multihash-impl" "secure-hashes" ];
          "derive" = [ "multihash-derive" ];
          "multihash-impl" = [ "derive" ];
          "scale-codec" = [ "parity-scale-codec" ];
          "secure-hashes" = [ "blake2b" "blake2s" "blake3" "sha2" "sha3" ];
          "serde-codec" = [ "serde" "generic-array/serde" ];
          "sha1" = [ "digest" "sha-1" ];
          "sha2" = [ "digest" "sha-2" ];
          "sha3" = [ "digest" "sha-3" ];
          "std" = [ "unsigned-varint/std" "multihash-derive/std" ];
          "strobe" = [ "strobe-rs" ];
        };
        resolvedDefaultFeatures = [ "blake2b" "blake2b_simd" "blake2s" "blake2s_simd" "blake3" "default" "derive" "digest" "multihash-derive" "multihash-impl" "secure-hashes" "sha-2" "sha-3" "sha2" "sha3" "std" ];
      };
      "multihash 0.14.0" = rec {
        crateName = "multihash";
        version = "0.14.0";
        edition = "2018";
        sha256 = "1n3rm6sr8fx5hxb1qk8ycbanv1nm2qwd48ql86s93xhgi76n2akm";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "David Craven <david@craven.ch>"
          "Volker Mische <volker.mische@gmail.com>"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "multihash-derive";
            packageId = "multihash-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            rename = "sha-2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arb" = [ "quickcheck" "rand" ];
          "blake2b" = [ "blake2b_simd" ];
          "blake2s" = [ "blake2s_simd" ];
          "default" = [ "std" "derive" "multihash-impl" "secure-hashes" ];
          "derive" = [ "multihash-derive" ];
          "multihash-impl" = [ "derive" ];
          "scale-codec" = [ "parity-scale-codec" ];
          "secure-hashes" = [ "blake2b" "blake2s" "blake3" "sha2" "sha3" ];
          "serde-codec" = [ "serde" "generic-array/serde" ];
          "sha1" = [ "digest" "sha-1" ];
          "sha2" = [ "digest" "sha-2" ];
          "sha3" = [ "digest" "sha-3" ];
          "std" = [ "unsigned-varint/std" "multihash-derive/std" ];
          "strobe" = [ "strobe-rs" ];
        };
        resolvedDefaultFeatures = [ "derive" "digest" "identity" "multihash-derive" "multihash-impl" "sha-2" "sha2" "std" ];
      };
      "multihash-derive" = rec {
        crateName = "multihash-derive";
        version = "0.7.2";
        edition = "2018";
        sha256 = "16danj3slsqdlkjk3zvbsvha1b4mdds9a7kzpm62km9w4s36wks2";
        procMacro = true;
        authors = [
          "David Craven <david@craven.ch>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            features = [ "span-locations" ];
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "multimap" = rec {
        crateName = "multimap";
        version = "0.8.3";
        edition = "2015";
        sha256 = "0sicyz4n500vdhgcxn4g8jz97cp1ijir1rnbgph3pmx9ckz4dkp5";
        authors = [
          "Håvar Nøvik <havar.novik@gmail.com>"
        ];
        features = {
          "default" = [ "serde_impl" ];
          "serde_impl" = [ "serde" ];
        };
      };
      "multistream-select" = rec {
        crateName = "multistream-select";
        version = "0.10.4";
        edition = "2018";
        sha256 = "1ay07gpr82gvz0aj1ckqyixl2v5yvc3m8hpnfs47rj4bpan3d8sn";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
        ];

      };
      "nalgebra" = rec {
        crateName = "nalgebra";
        version = "0.27.1";
        edition = "2018";
        sha256 = "0811vksy1ls1m41gqkh1i5cy3h3g3b615kwxd8gjwkrg03jgybs6";
        authors = [
          "Sébastien Crozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "matrixmultiply";
            packageId = "matrixmultiply";
            optional = true;
          }
          {
            name = "nalgebra-macros";
            packageId = "nalgebra-macros";
            optional = true;
          }
          {
            name = "num-complex";
            packageId = "num-complex";
            usesDefaultFeatures = false;
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            rename = "rand-package";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand_distr";
            packageId = "rand_distr";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "simba";
            packageId = "simba";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
          "abomonation-serialize" = [ "abomonation" ];
          "arbitrary" = [ "quickcheck" ];
          "compare" = [ "matrixcompare-core" ];
          "convert-bytemuck" = [ "bytemuck" ];
          "convert-glam013" = [ "glam013" ];
          "convert-glam014" = [ "glam014" ];
          "convert-glam015" = [ "glam015" ];
          "convert-mint" = [ "mint" ];
          "debug" = [ "approx/num-complex" "rand" ];
          "default" = [ "std" "macros" ];
          "io" = [ "pest" "pest_derive" ];
          "libm" = [ "simba/libm" ];
          "libm-force" = [ "simba/libm_force" ];
          "macros" = [ "nalgebra-macros" ];
          "proptest-support" = [ "proptest" ];
          "rand" = [ "rand-no-std" "rand-package/std" "rand-package/std_rng" "rand_distr" ];
          "rand-no-std" = [ "rand-package" ];
          "rkyv-serialize" = [ "rkyv-serialize-no-std" "rkyv/std" ];
          "rkyv-serialize-no-std" = [ "rkyv" ];
          "serde-serialize" = [ "serde-serialize-no-std" "serde/std" ];
          "serde-serialize-no-std" = [ "serde" "num-complex/serde" ];
          "std" = [ "matrixmultiply" "simba/std" ];
        };
        resolvedDefaultFeatures = [ "default" "macros" "matrixmultiply" "nalgebra-macros" "rand" "rand-no-std" "rand-package" "rand_distr" "std" ];
      };
      "nalgebra-macros" = rec {
        crateName = "nalgebra-macros";
        version = "0.1.0";
        edition = "2018";
        sha256 = "063jvvvlwmzzxfr4wyiil2cn1yqj3arvghwsr2nk4ilv2jwc1z01";
        procMacro = true;
        authors = [
          "Andreas Longva"
          "Sébastien Crozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "names" = rec {
        crateName = "names";
        version = "0.12.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0xapf5qs9yrc6fg7mgf20ypwcynkqdkdd375a6c6bgwsy05nka0h";
        authors = [
          "Fletcher Nichol <fnichol@nichol.ca>"
        ];
        dependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
        ];
        features = {
          "application" = [ "clap" ];
          "default" = [ "application" ];
        };
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.37";
        edition = "2015";
        sha256 = "1bk8jp0i12gvhrlaqbfq19ancja70r1rg3sywbhjl0385g8k05ir";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || (target."unix" or false) || (target."os" == "wasi"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nodrop" = rec {
        crateName = "nodrop";
        version = "0.1.14";
        edition = "2015";
        sha256 = "1fz1v9r8ijacf0hlq0pdv5l9mz8vgqg1snmhvpjmi9aci1b4mvvj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
      "nohash-hasher" = rec {
        crateName = "nohash-hasher";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0lf4p6k01w4wm7zn4grnihzj8s7zd5qczjmzng7wviwxawih5x9b";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "nom" = rec {
        crateName = "nom";
        version = "7.1.0";
        edition = "2018";
        sha256 = "0281jdx0xcyhjgs1jkj9pii8py1clcpazg41bgz7d71qxzhi278v";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "minimal-lexical";
            packageId = "minimal-lexical";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "memchr/std" "minimal-lexical/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "ntapi" = rec {
        crateName = "ntapi";
        version = "0.3.7";
        edition = "2018";
        sha256 = "03wqq2x5jv5xrsirbxmm460gcfmpakjpq8yqmc5lzfrgznkp91y2";
        authors = [
          "MSxDOS <melcodos@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "cfg" "evntrace" "in6addr" "inaddr" "minwinbase" "ntsecapi" "windef" "winioctl" ];
          }
        ];
        features = {
          "default" = [ "user" ];
          "impl-default" = [ "winapi/impl-default" ];
          "nightly" = [ "beta" ];
        };
        resolvedDefaultFeatures = [ "default" "user" ];
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.2.6";
        edition = "2015";
        sha256 = "015k3wixdi4w698sappvy43pf8bvkw0f88xplmdgc3zfk2cpy309";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-complex" = rec {
        crateName = "num-complex";
        version = "0.4.0";
        edition = "2018";
        sha256 = "11ahq51ibf7x30rsabgp3a29zw6d6bfilz53sj152z5vpdkkd1r6";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "std" = [ "num-traits/std" ];
        };
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.44";
        edition = "2015";
        sha256 = "1nq152y3304as1iai95hqz8prqnc94lks1s7q05sfjdmcf56kk6j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "i128" "std" ];
      };
      "num-rational 0.2.4" = rec {
        crateName = "num-rational";
        version = "0.2.4";
        edition = "2015";
        sha256 = "1vsaz96chxcgpqd5a0dq8hb3b4sj6dnlhwmpbkf4mx6vnls0202w";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "bigint" = [ "num-bigint" ];
          "bigint-std" = [ "bigint" "num-bigint/std" ];
          "default" = [ "bigint-std" "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "bigint" "bigint-std" "num-bigint" "std" ];
      };
      "num-rational 0.4.0" = rec {
        crateName = "num-rational";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0ska19zb05f84b1cki7vyzy5wjqs26y82hiq1d9gabbw2syh45yl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "num-bigint-std" "std" ];
          "num-bigint-std" = [ "num-bigint/std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
      };
      "num-traits" = rec {
        crateName = "num-traits";
        version = "0.2.14";
        edition = "2015";
        sha256 = "144j176s2p76azy2ngk2vkdzgwdc0bc8c93jhki8c9fsbknb2r4s";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libm";
            packageId = "libm";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "libm" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.13.1";
        edition = "2015";
        sha256 = "18apx62z4j4lajj2fi6r1i8slr9rs2d0xrbj2ls85qfyxck4brhr";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."windows" or false));
          }
        ];

      };
      "object" = rec {
        crateName = "object";
        version = "0.27.1";
        edition = "2018";
        sha256 = "1ygv9zgi9wz6q5f2z9xn72i0c97jjr1dgj30kbyicdhxk8zivb37";
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
            optional = true;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "all" = [ "read" "write" "std" "compression" "wasm" ];
          "compression" = [ "flate2" "std" ];
          "default" = [ "read" "compression" ];
          "doc" = [ "read_core" "write_core" "std" "compression" "archive" "coff" "elf" "macho" "pe" "wasm" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "archive" "coff" "elf" "macho" "pe" "unaligned" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "alloc" "memchr/rustc-dep-of-std" ];
          "std" = [ "memchr/std" ];
          "wasm" = [ "wasmparser" ];
          "write" = [ "write_core" "coff" "elf" "macho" "pe" ];
          "write_core" = [ "crc32fast" "indexmap/std" "std" ];
        };
        resolvedDefaultFeatures = [ "archive" "coff" "crc32fast" "elf" "indexmap" "macho" "pe" "read_core" "std" "unaligned" "write" "write_core" ];
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.9.0";
        edition = "2018";
        sha256 = "1mfqhrsgi368x92bwnq3vi3p5nv0n1qlrn69gfflhvkfkxfm2cns";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        features = {
          "alloc" = [ "race" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "race" "std" ];
      };
      "opaque-debug 0.2.3" = rec {
        crateName = "opaque-debug";
        version = "0.2.3";
        edition = "2015";
        sha256 = "172j6bs8ndclqxa2m64qc0y1772rr73g4l9fg2svscgicnbfff98";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "opaque-debug 0.3.0" = rec {
        crateName = "opaque-debug";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1m8kzi4nd6shdqimn0mgb24f0hxslhnqd1whakyq06wcqd086jk2";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "open-metrics-client" = rec {
        crateName = "open-metrics-client";
        version = "0.12.0";
        edition = "2018";
        sha256 = "039z2y0v2rsa8laq3fj36xrj04jkzg21p633jlsb3n624c6dhdvk";
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "itoa";
            packageId = "itoa 0.4.8";
          }
          {
            name = "open-metrics-client-derive-text-encode";
            packageId = "open-metrics-client-derive-text-encode";
          }
          {
            name = "owning_ref";
            packageId = "owning_ref";
          }
        ];

      };
      "open-metrics-client-derive-text-encode" = rec {
        crateName = "open-metrics-client-derive-text-encode";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1z4grpaycs1s4wx87nd1kgfmjvqsxi037jy13736h0phhssq6p51";
        procMacro = true;
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1kq18qm48rvkwgcggfkqq6pm948190czqc94d6bm2sir5hq1l0gz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "owning_ref" = rec {
        crateName = "owning_ref";
        version = "0.4.1";
        edition = "2015";
        sha256 = "1kjj9m28wjv452jw49p1mp3d8ql058x78v4bz00avr7rvsnmpxbg";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "stable_deref_trait";
            packageId = "stable_deref_trait";
          }
        ];

      };
      "pallet-aleph" = rec {
        crateName = "pallet-aleph";
        version = "0.2.0";
        edition = "2021";
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./pallets/aleph; }
          else ./pallets/aleph;
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-balances";
            packageId = "pallet-balances";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-session";
            packageId = "pallet-session";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "primitives";
            packageId = "primitives";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "frame-support/std" "frame-system/std" "sp-std/std" "primitives/std" "pallet-balances/std" "pallet-session/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "pallet-aura" = rec {
        crateName = "pallet-aura";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-aura";
            packageId = "sp-consensus-aura";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-application-crypto/std" "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "frame-support/std" "sp-consensus-aura/std" "frame-system/std" "pallet-timestamp/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-authorship" = rec {
        crateName = "pallet-authorship";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-authorship";
            packageId = "sp-authorship";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime/std" "sp-std/std" "frame-support/std" "frame-system/std" "sp-authorship/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-babe" = rec {
        crateName = "pallet-babe";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-benchmarking";
            packageId = "frame-benchmarking";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-authorship";
            packageId = "pallet-authorship";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-session";
            packageId = "pallet-session";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-babe";
            packageId = "sp-consensus-babe";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-vrf";
            packageId = "sp-consensus-vrf";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-session";
            packageId = "sp-session";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "log/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "frame-benchmarking" "std" ];
      };
      "pallet-balances" = rec {
        crateName = "pallet-balances";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-benchmarking";
            packageId = "frame-benchmarking";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "log/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "frame-benchmarking" "std" ];
      };
      "pallet-elections" = rec {
        crateName = "pallet-elections";
        version = "0.1.0";
        edition = "2021";
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./pallets/elections; }
          else ./pallets/elections;
        dependencies = [
          {
            name = "frame-election-provider-support";
            packageId = "frame-election-provider-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-balances";
            packageId = "pallet-balances";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-session";
            packageId = "pallet-session";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "primitives";
            packageId = "primitives";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-std/std" "sp-core/std" "frame-support/std" "frame-system/std" "frame-election-provider-support/std" "pallet-session/std" "primitives/std" "pallet-balances/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "pallet-multisig" = rec {
        crateName = "pallet-multisig";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-std/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-randomness-collective-flip" = rec {
        crateName = "pallet-randomness-collective-flip";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "safe-mix";
            packageId = "safe-mix";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "safe-mix/std" "codec/std" "scale-info/std" "sp-runtime/std" "sp-std/std" "frame-system/std" "frame-support/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-scheduler" = rec {
        crateName = "pallet-scheduler";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-std/std" "log/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
      };
      "pallet-session" = rec {
        crateName = "pallet-session";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-session";
            packageId = "sp-session";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "historical" ];
          "historical" = [ "sp-trie" ];
          "std" = [ "log/std" "codec/std" "scale-info/std" "sp-std/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-trie/std" "frame-support/std" "frame-system/std" "pallet-timestamp/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "historical" "sp-trie" "std" ];
      };
      "pallet-staking" = rec {
        crateName = "pallet-staking";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-election-provider-support";
            packageId = "frame-election-provider-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-authorship";
            packageId = "pallet-authorship";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-session";
            packageId = "pallet-session";
            usesDefaultFeatures = false;
            features = [ "historical" ];
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "frame-election-provider-support";
            packageId = "frame-election-provider-support";
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" ];
          "std" = [ "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "pallet-sudo" = rec {
        crateName = "pallet-sudo";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "sp-runtime/std" "frame-support/std" "frame-system/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-timestamp" = rec {
        crateName = "pallet-timestamp";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-benchmarking";
            packageId = "frame-benchmarking";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-timestamp";
            packageId = "sp-timestamp";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "sp-io" ];
          "std" = [ "sp-inherents/std" "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "sp-timestamp/std" "log/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "frame-benchmarking" "std" ];
      };
      "pallet-transaction-payment" = rec {
        crateName = "pallet-transaction-payment";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "serde" "codec/std" "scale-info/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-support/std" "frame-system/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "pallet-transaction-payment-rpc" = rec {
        crateName = "pallet-transaction-payment-rpc";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-core-client";
            packageId = "jsonrpc-core-client";
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "pallet-transaction-payment-rpc-runtime-api";
            packageId = "pallet-transaction-payment-rpc-runtime-api";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-rpc";
            packageId = "sp-rpc";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
        ];

      };
      "pallet-transaction-payment-rpc-runtime-api" = rec {
        crateName = "pallet-transaction-payment-rpc-runtime-api";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "pallet-transaction-payment";
            packageId = "pallet-transaction-payment";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-api/std" "sp-runtime/std" "pallet-transaction-payment/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "pallet-treasury" = rec {
        crateName = "pallet-treasury";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "pallet-balances";
            packageId = "pallet-balances";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "serde" "sp-std/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "pallet-utility" = rec {
        crateName = "pallet-utility";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "sp-core";
            packageId = "sp-core";
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-std/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "pallet-vesting" = rec {
        crateName = "pallet-vesting";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "runtime-benchmarks" = [ "frame-benchmarking/runtime-benchmarks" ];
          "std" = [ "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "frame-support/std" "frame-system/std" ];
          "try-runtime" = [ "frame-support/try-runtime" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "parity-db" = rec {
        crateName = "parity-db";
        version = "0.3.7";
        edition = "2021";
        sha256 = "07gw5r19gkzs8nf8ri4jj2p0m41f0arjihlzdm2z0307p1dnrah9";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "fs2";
            packageId = "fs2";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lz4";
            packageId = "lz4";
          }
          {
            name = "memmap2";
            packageId = "memmap2 0.2.3";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "snap";
            packageId = "snap";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.5";
            features = [ "small_rng" ];
          }
        ];

      };
      "parity-scale-codec" = rec {
        crateName = "parity-scale-codec";
        version = "2.3.1";
        edition = "2018";
        sha256 = "02g95fp56sfpxixpy3x2h2yvcnmbpl8klfx53wywvn9q2d61lfrp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "bitvec";
            packageId = "bitvec";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "byte-slice-cast";
            packageId = "byte-slice-cast";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec-derive";
            packageId = "parity-scale-codec-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
        ];
        features = {
          "bit-vec" = [ "bitvec" ];
          "default" = [ "std" ];
          "derive" = [ "parity-scale-codec-derive" ];
          "fuzz" = [ "std" "arbitrary" ];
          "max-encoded-len" = [ "parity-scale-codec-derive/max-encoded-len" ];
          "std" = [ "serde" "bitvec/std" "byte-slice-cast/std" "chain-error" ];
        };
        resolvedDefaultFeatures = [ "bitvec" "chain-error" "default" "derive" "full" "max-encoded-len" "parity-scale-codec-derive" "serde" "std" ];
      };
      "parity-scale-codec-derive" = rec {
        crateName = "parity-scale-codec-derive";
        version = "2.3.1";
        edition = "2018";
        sha256 = "09zdgdqalc8d2zsjc9v1ayqxwg5rh7xxq5ldasdmqng0fq202mqm";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "max-encoded-len" ];
      };
      "parity-send-wrapper" = rec {
        crateName = "parity-send-wrapper";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0vswzhxfdm9lc2kabz2jp7gg3iq2rdmrnjm0mbarvbdqj6m7g5xa";
        authors = [
          "Thomas Keh"
          "Parity Technologies <admin@parity.io>"
        ];

      };
      "parity-tokio-ipc" = rec {
        crateName = "parity-tokio-ipc";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1dj2ilhpc2dmjg6f6qmalkh30f1r5ws71yzm930lq02ynwpy70cr";
        authors = [
          "NikVolf <nikvolf@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "net" "time" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winbase" "winnt" "accctrl" "aclapi" "securitybaseapi" "minwinbase" "winbase" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-util" "rt" "time" "macros" ];
          }
        ];

      };
      "parity-util-mem" = rec {
        crateName = "parity-util-mem";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0w27fzmah07j4mgv53afx799p97wr4635dmqqv5pjqa4d7hv8k3g";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "ethereum-types";
            packageId = "ethereum-types";
            optional = true;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "lru";
            packageId = "lru 0.6.6";
            optional = true;
          }
          {
            name = "parity-util-mem-derive";
            packageId = "parity-util-mem-derive";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "heapapi" ];
          }
        ];
        features = {
          "default" = [ "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types" ];
          "dlmalloc-global" = [ "dlmalloc" "estimate-heapsize" ];
          "ethereum-impls" = [ "ethereum-types" "primitive-types" ];
          "jemalloc-global" = [ "tikv-jemallocator" "tikv-jemalloc-ctl" ];
          "mimalloc-global" = [ "mimalloc" "libmimalloc-sys" ];
          "std" = [ "parking_lot" ];
          "weealloc-global" = [ "wee_alloc" "estimate-heapsize" ];
        };
        resolvedDefaultFeatures = [ "default" "ethereum-impls" "ethereum-types" "hashbrown" "lru" "parking_lot" "primitive-types" "smallvec" "std" ];
      };
      "parity-util-mem-derive" = rec {
        crateName = "parity-util-mem-derive";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1chhs58il2awl2blyvg7l39zlpjz5701j5j7474hg2i6dlnc6mzm";
        procMacro = true;
        libPath = "lib.rs";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];

      };
      "parity-wasm 0.32.0" = rec {
        crateName = "parity-wasm";
        version = "0.32.0";
        edition = "2015";
        sha256 = "1b0j0l02fmshhg7rll5pl3nph56j3f32cbmwncwk6d2dgj0m5b8n";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Shulepov <s.pepyakin@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "parity-wasm 0.42.2" = rec {
        crateName = "parity-wasm";
        version = "0.42.2";
        edition = "2018";
        sha256 = "14mfpzjby2in3i3mlzq2p12yzlgml20pvn166kwasajhcv116pmy";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Shulepov <s.pepyakin@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "parity-ws" = rec {
        crateName = "parity-ws";
        version = "0.11.1";
        edition = "2015";
        sha256 = "1iphdnjzihq86c54r9sdskn6c639kpql6rwsxg1i43ymka9d70sr";
        authors = [
          "Jason Housley <HousleyJK@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
          }
          {
            name = "mio-extras";
            packageId = "mio-extras";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.8.2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        features = {
          "nativetls" = [ "native-tls" ];
          "permessage-deflate" = [ "libz-sys" "libc" ];
          "ssl" = [ "openssl" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking" = rec {
        crateName = "parking";
        version = "2.0.0";
        edition = "2018";
        sha256 = "0wnxxnizfxlax3n709s5r83f4n8awy3m4a18q4fdk0z7z693hz22";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "The Rust Project Developers"
        ];

      };
      "parking_lot" = rec {
        crateName = "parking_lot";
        version = "0.11.2";
        edition = "2018";
        sha256 = "16gzf41bxmm10x82bla8d6wfppy9ym3fxsmdjyvn61m66s0bf5vx";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "lock_api";
            packageId = "lock_api";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core";
          }
        ];
        features = {
          "arc_lock" = [ "lock_api/arc_lock" ];
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
          "stdweb" = [ "instant/stdweb" ];
          "wasm-bindgen" = [ "instant/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core" = rec {
        crateName = "parking_lot_core";
        version = "0.8.5";
        edition = "2018";
        sha256 = "05ij4zxsylx99srbq8qd1k2wiwaq8krkf9y4cqkhvb5wjca8wvnp";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "paste" = rec {
        crateName = "paste";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1dcg6ll2in45066kvramw83cp1p0vcbafl6bjkrxfv8szrm14i07";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "pbkdf2 0.4.0" = rec {
        crateName = "pbkdf2";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1g8cm3nwrsydazjc1gjs549hzafgxq8qb49gixrhl3qrd9calvi1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
        ];
        features = {
          "default" = [ "include_simple" "thread_rng" ];
          "include_simple" = [ "sha2" "hmac" "rand_core" "base64" "subtle" ];
          "parallel" = [ "rayon" "std" ];
          "thread_rng" = [ "rand" ];
        };
      };
      "pbkdf2 0.8.0" = rec {
        crateName = "pbkdf2";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1ykgicvyjm41701mzqhrfmiz5sm5y0zwfg6csaapaqaf49a54pyr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.11.1";
          }
        ];
        features = {
          "default" = [ "simple" ];
          "parallel" = [ "rayon" "std" ];
          "simple" = [ "sha2" "hmac" "password-hash" "base64ct" ];
          "std" = [ "password-hash/std" ];
        };
      };
      "peeking_take_while" = rec {
        crateName = "peeking_take_while";
        version = "0.1.2";
        edition = "2015";
        sha256 = "16bhqr6rdyrp12zv381cxaaqqd0pwysvm1q8h2ygihvypvfprc8r";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];

      };
      "percent-encoding 1.0.1" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "percent-encoding 2.1.0" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "pest" = rec {
        crateName = "pest";
        version = "2.1.3";
        edition = "2015";
        sha256 = "0lry80bm90x47nq71wxq83kjrm9ashpz4kbm92p90ysdx4m8gx0h";
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = [
          {
            name = "ucd-trie";
            packageId = "ucd-trie";
          }
        ];
        features = {
          "pretty-print" = [ "serde" "serde_json" ];
        };
      };
      "petgraph 0.5.1" = rec {
        crateName = "petgraph";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1dzxda6z17sfxly11m8ja3iargh73pw0s1sdgjyp0qp5dm51cza6";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset 0.2.0";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
      };
      "petgraph 0.6.0" = rec {
        crateName = "petgraph";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0kw27zzhsa82d4qpkrz91vznyxi3wm0qg0i84grfaqqbkpxa44sa";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset 0.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
      };
      "pin-project 0.4.29" = rec {
        crateName = "pin-project";
        version = "0.4.29";
        edition = "2018";
        sha256 = "02f93m6qq0hiq7mmf9wqn7kph4nw9lk9jd06zzlpjx8k666w25cn";
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 0.4.29";
            usesDefaultFeatures = false;
          }
        ];

      };
      "pin-project 1.0.10" = rec {
        crateName = "pin-project";
        version = "1.0.10";
        edition = "2018";
        sha256 = "0pm7qfsczqnb3d6y530zk6xng239m0cagijbg124xbrvmmwkibaq";
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 1.0.10";
          }
        ];

      };
      "pin-project-internal 0.4.29" = rec {
        crateName = "pin-project-internal";
        version = "0.4.29";
        edition = "2018";
        sha256 = "0ami799a794z5a8h190f20vqzwby0kkbqnwxkpadkvhrf1168j84";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-internal 1.0.10" = rec {
        crateName = "pin-project-internal";
        version = "1.0.10";
        edition = "2018";
        sha256 = "1frnrghhxzkwn636q3s2917r8fgxd98dnx7jz983d7525c4nyjvl";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-lite 0.1.12" = rec {
        crateName = "pin-project-lite";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0xx7f3wzc8ydvd1v2mmrxfypjchp52bphrirf08phbq8ba8n8yr5";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];

      };
      "pin-project-lite 0.2.8" = rec {
        crateName = "pin-project-lite";
        version = "0.2.8";
        edition = "2018";
        sha256 = "0v2c5ds2jqr84q0nc94dfhv8fs7lachl9sarf9992b66gkkzp072";

      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0";
        edition = "2018";
        sha256 = "117ir7vslsl2z1a7qzhws4pd01cg2d3338c47swjyvqv2n60v1wb";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];

      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.24";
        edition = "2015";
        sha256 = "1ghcyjp5537r7qigmgl3dj62j01arlpddaq93a3i414v3iskz2aq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "platforms" = rec {
        crateName = "platforms";
        version = "2.0.0";
        edition = "2018";
        sha256 = "152cnf65zzr6vj5xyap1aqp6ajmfqdhlij2x1lx02hhjazryxl78";
        authors = [
          "Tony Arcieri <bascule@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "polling" = rec {
        crateName = "polling";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0najvslgg2zclsnxay071jdw0bna7f0abqvgx3isv7w817ah8m38";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "fuchsia") || (target."os" == "vxworks"));
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "wepoll-ffi";
            packageId = "wepoll-ffi";
            target = { target, features }: (target."windows" or false);
            features = [ "null-overlapped-wakeups-patch" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "ioapiset" "winsock2" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "poly1305" = rec {
        crateName = "poly1305";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1pkf4jlriskq9rvz8y5fjj9dw42q6yg5djijlin4n6p1dd3yp2h4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.2.1";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
        };
      };
      "polyval" = rec {
        crateName = "polyval";
        version = "0.5.3";
        edition = "2018";
        sha256 = "1890wqvc0csc9y9k9k4gsbz91rgdnhn6xnfmy9pqkh674fvd46c4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.2.1";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
        };
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.16";
        edition = "2018";
        sha256 = "0wkqwnvnfcgqlrahphl45vdlgi2f1bs7nqcsalsllp1y4dp9x7zb";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "primitive-types" = rec {
        crateName = "primitive-types";
        version = "0.10.1";
        edition = "2018";
        sha256 = "0wr3yhpc59m5xbhqs69j8qm0hz0xh8q8r806bnfsjn3sd4n75r05";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "fixed-hash";
            packageId = "fixed-hash";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-codec";
            packageId = "impl-codec";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-rlp";
            packageId = "impl-rlp";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            rename = "scale-info-crate";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "uint";
            packageId = "uint";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "arbitrary" = [ "fixed-hash/arbitrary" "uint/arbitrary" ];
          "byteorder" = [ "fixed-hash/byteorder" ];
          "codec" = [ "impl-codec" ];
          "default" = [ "std" ];
          "fp-conversion" = [ "std" ];
          "num-traits" = [ "impl-num-traits" ];
          "rlp" = [ "impl-rlp" ];
          "rustc-hex" = [ "fixed-hash/rustc-hex" ];
          "scale-info" = [ "codec" "scale-info-crate" ];
          "serde" = [ "std" "impl-serde" "impl-serde/std" ];
          "serde_no_std" = [ "impl-serde" ];
          "std" = [ "uint/std" "fixed-hash/std" "impl-codec/std" ];
        };
        resolvedDefaultFeatures = [ "byteorder" "codec" "impl-codec" "impl-rlp" "impl-serde" "rlp" "rustc-hex" "scale-info" "scale-info-crate" "serde" "serde_no_std" "std" ];
      };
      "primitives" = rec {
        crateName = "primitives";
        version = "0.3.0";
        edition = "2021";
        # We can't filter paths with references in Nix 2.4
        # See https://github.com/NixOS/nix/issues/5410
        src = if (lib.versionOlder builtins.nixVersion "2.4pre20211007")
          then lib.cleanSourceWith { filter = sourceFilter;  src = ./primitives; }
          else ./primitives;
        authors = [
          "Cardinal Cryptography"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "serde/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-runtime/std" "sp-std/std" "sp-staking/std" ];
        };
        resolvedDefaultFeatures = [ "default" "short_session" "std" ];
      };
      "proc-macro-crate 0.1.5" = rec {
        crateName = "proc-macro-crate";
        version = "0.1.5";
        edition = "2018";
        sha256 = "11cpihdk9ba68hzw95aa8zxn0i5g6kdrfd4l2cy3d5jvb72a6vhx";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "toml";
            packageId = "toml";
          }
        ];

      };
      "proc-macro-crate 1.1.3" = rec {
        crateName = "proc-macro-crate";
        version = "1.1.3";
        edition = "2018";
        sha256 = "06pi2jqncn1kscwsp7zm0p04iki3vl70n99j0d2dxx2bj774fzg1";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "toml";
            packageId = "toml";
          }
        ];

      };
      "proc-macro-error" = rec {
        crateName = "proc-macro-error";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1373bhxaf0pagd8zkyd03kkx6bchzf6g0dkwrwzsnal9z47lj9fs";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro-error-attr";
            packageId = "proc-macro-error-attr";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
          "default" = [ "syn-error" ];
          "syn-error" = [ "syn" ];
        };
        resolvedDefaultFeatures = [ "default" "syn" "syn-error" ];
      };
      "proc-macro-error-attr" = rec {
        crateName = "proc-macro-error-attr";
        version = "1.0.4";
        edition = "2018";
        sha256 = "0sgq6m5jfmasmwwy8x4mjygx5l7kp8s4j60bv25ckv2j1qc41gm1";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];

      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "1.0.36";
        edition = "2018";
        sha256 = "0adh6gvs31x6pfwmygypmzrv1jc7kjq568vsqcfaxk7vhdc2sd67";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" "span-locations" ];
      };
      "prometheus" = rec {
        crateName = "prometheus";
        version = "0.13.0";
        edition = "2018";
        sha256 = "011mb812f6ys8rqp1yyhv5g0jfhn7k2qm9jpplwqzpfmzxllkxmp";
        authors = [
          "overvenus@gmail.com"
          "siddontang@gmail.com"
          "vistaswx@gmail.com"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "protobuf" ];
          "gen" = [ "protobuf-codegen-pure" ];
          "nightly" = [ "libc" ];
          "process" = [ "libc" "procfs" ];
          "push" = [ "reqwest" "libc" "protobuf" ];
        };
      };
      "prost 0.8.0" = rec {
        crateName = "prost";
        version = "0.8.0";
        edition = "2018";
        sha256 = "0840bmn5rx06yfbyyrkydnyp0ak9l2ylwdzxckrzq24xylrjapny";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive 0.8.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "prost-derive" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "prost-derive" "std" ];
      };
      "prost 0.9.0" = rec {
        crateName = "prost";
        version = "0.9.0";
        edition = "2018";
        sha256 = "00b0xfn80alw7h2pzr2z4dycyvsys4h5878sifaq9zdlbhkpjj24";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive 0.9.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "prost-derive" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "prost-derive" "std" ];
      };
      "prost-build 0.8.0" = rec {
        crateName = "prost-build";
        version = "0.8.0";
        edition = "2018";
        sha256 = "00yniwxmf5k2czm4zwfwlvphxrz7f1bzjj3qxqj0gn6d8d5n6prm";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.8.0";
            usesDefaultFeatures = false;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "which";
            packageId = "which";
            usesDefaultFeatures = false;
          }
        ];

      };
      "prost-build 0.9.0" = rec {
        crateName = "prost-build";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1xalqfhrhfyd12famfz59zr2yygyw4zlz774b4v4cpb7zci1g532";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.6.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "which";
            packageId = "which";
            usesDefaultFeatures = false;
          }
        ];

      };
      "prost-derive 0.8.0" = rec {
        crateName = "prost-derive";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1fpg0knfsixpi1jq9dsq3gas9pmn3bpigqjmlw1cnnm098rjy3b0";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-derive 0.9.0" = rec {
        crateName = "prost-derive";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1zi0qway5anz5ik3k1yrc2av81sjcqvqy9lnivv0nzp0ccr1mk7r";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-types 0.8.0" = rec {
        crateName = "prost-types";
        version = "0.8.0";
        edition = "2018";
        sha256 = "06vp090a8d0j31bc3kw7b1m5mlz9gnfabbasybri67bhjiivsfv0";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.8.0";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" ];
        };
      };
      "prost-types 0.9.0" = rec {
        crateName = "prost-types";
        version = "0.9.0";
        edition = "2018";
        sha256 = "02pgz98nn62bb8glspb9m4fn3rrr5sc0y1wk4qnlhg3fhc77ljsk";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" ];
        };
      };
      "psm" = rec {
        crateName = "psm";
        version = "0.1.17";
        edition = "2015";
        sha256 = "0vvyn6n0acbr14fb53b7bqbf67nvn7q8iiffhkhrck3wvnjhzjkf";
        authors = [
          "Simonas Kazlauskas <psm@kazlauskas.me>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "pwasm-utils" = rec {
        crateName = "pwasm-utils";
        version = "0.18.2";
        edition = "2018";
        crateBin = [];
        sha256 = "0p0z8kv6860xg49x5aixmq01j86j7fwmilymrkngdf00zf2362w8";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.42.2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "cli" = [ "std" "glob" "clap" "env_logger" "lazy_static" ];
          "default" = [ "std" ];
          "std" = [ "parity-wasm/std" "log/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "quick-error" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quicksink" = rec {
        crateName = "quicksink";
        version = "0.1.2";
        edition = "2018";
        sha256 = "0n7qgajwz01ksx33n4jywcx09whxh2b2fnf674ahn5jsbs0krpkp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.1.12";
          }
        ];

      };
      "quote" = rec {
        crateName = "quote";
        version = "1.0.15";
        edition = "2018";
        sha256 = "0id1q0875pvhkg0mlb5z8gzdm2g2rbbz76bfzhv331lrm2b3wkc6";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "radium" = rec {
        crateName = "radium";
        version = "0.6.2";
        edition = "2018";
        sha256 = "1ys4bpp2l701ghdniz90zhkvb5ykmfw2pj0m8pfcbi7bm10qygv4";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
          "myrrlyn <self@myrrlyn.dev>"
        ];

      };
      "rand 0.7.3" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc";
            target = { target, features }: (target."os" == "emscripten");
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc";
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "rand_pcg" "small_rng" "std" "wasm-bindgen" ];
      };
      "rand 0.8.5" = rec {
        crateName = "rand";
        version = "0.8.5";
        edition = "2018";
        sha256 = "013l6931nn7gkc23jz5mm3qdhf93jjf0fg64nz2lp4i51qd8vbrl";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.3.1";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" "std_rng" ];
          "getrandom" = [ "rand_core/getrandom" ];
          "serde1" = [ "serde" "rand_core/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "std_rng" = [ "rand_chacha" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "libc" "rand_chacha" "std" "std_rng" ];
      };
      "rand_chacha 0.2.2" = rec {
        crateName = "rand_chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00il36fkdbsmpr99p9ksmmp6dn1md7rmnwmz0rr77jbrca2yvj7l";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_chacha 0.3.1" = rec {
        crateName = "rand_chacha";
        version = "0.3.1";
        edition = "2018";
        sha256 = "123x2adin558xbhvqb8w4f6syjsdkmqff8cxwhmjacpsl1ihmhg6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde1" = [ "serde" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.5.1" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_core 0.6.3" = rec {
        crateName = "rand_core";
        version = "0.6.3";
        edition = "2018";
        sha256 = "1rxlxc3bpzgwphcg9c9yasvv9idipcg2z2y4j0vlb52jyl418kyk";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.5";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_distr" = rec {
        crateName = "rand_distr";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0cgfwg3z0pkqhrl0x90c77kx70r6g9z4m6fxq9v0h2ibr2dhpjrj";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
            features = [ "libm" ];
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.5";
            usesDefaultFeatures = false;
            features = [ "std_rng" "std" "small_rng" ];
          }
        ];
        features = {
          "alloc" = [ "rand/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "serde" "rand/serde1" ];
          "std" = [ "alloc" "rand/std" ];
          "std_math" = [ "num-traits/std" ];
        };
      };
      "rand_hc" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];

      };
      "rand_pcg" = rec {
        crateName = "rand_pcg";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0ab4h6s6x3py833jk61lwadq83qd1c8bih2hgi6yps9rnv0x1aqn";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "rawpointer" = rec {
        crateName = "rawpointer";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1qy1qvj17yh957vhffnq6agq0brvylw27xgks171qrah75wmg8v0";
        authors = [
          "bluss"
        ];

      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.5.1";
        edition = "2018";
        sha256 = "143dl2453bazgk7rwjrickmyqd0ks3q69nfz8axcins19n0clsn0";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg";
          }
        ];

      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.9.1";
        edition = "2018";
        sha256 = "13kdcnqp2p1a5a3amamfjpnm7ay463vq4dfxy4rrh9shr3i210fp";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel";
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "redox_syscall" = rec {
        crateName = "redox_syscall";
        version = "0.2.10";
        edition = "2018";
        sha256 = "1zq36bhw4c6xig340ja1jmr36iy0d3djp8smsabxx71676bg70w3";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
        ];

      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0r5y1a26flkn6gkayi558jg5dzh2m2fdsapgkpn7mj01v3rk51aj";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.5";
            features = [ "std" ];
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
          }
        ];
        features = {
          "auth" = [ "rust-argon2" ];
          "default" = [ "auth" ];
        };
      };
      "ref-cast" = rec {
        crateName = "ref-cast";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1nj1wp530yd1rx545qisvllvp7nbv9x00iax57p391w0bn1jl3rh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "ref-cast-impl";
            packageId = "ref-cast-impl";
          }
        ];

      };
      "ref-cast-impl" = rec {
        crateName = "ref-cast-impl";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1lndalzfwhrpknibjs027zjcfjvincxqhyv3b4wwn89brnpf6f2c";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "regalloc" = rec {
        crateName = "regalloc";
        version = "0.0.32";
        edition = "2018";
        sha256 = "1x11qcxqvd5anzgklv4rp3bi73bv23m5bhrj7pd23nafaml48c56";
        authors = [
          "The Regalloc.rs Developers"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.5.4";
        edition = "2018";
        sha256 = "0qf479kjbmb582h4d1d6gfl75h0j8aq2nrdi5wg6zdcy6llqcynh";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" "regex-syntax/default" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "regex-syntax/unicode" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0ci1hvbzhrfby5fdpf4ganhf7kla58acad9i1ff1p34dzdrhs8vc";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" ];
          "transducer" = [ "std" "fst" ];
        };
        resolvedDefaultFeatures = [ "default" "regex-syntax" "std" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.25";
        edition = "2018";
        sha256 = "16y87hz1bxmmz6kk360cxwfm3jnbsxb3x4zw9x1gzz7khic2i5zl";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "region" = rec {
        crateName = "region";
        version = "2.2.0";
        edition = "2015";
        sha256 = "1q4szar3ms76552iygmhsvzhvvwkgz4l94qpx600vmyw5bm58zl7";
        authors = [
          "Elliott Linder <elliott.darfink@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "basetsd" "minwindef" "sysinfoapi" "memoryapi" "winnt" ];
          }
        ];

      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1rzqbsgkmr053bxxl04vmvsd1njyz0nxvly97aip6aa2cmb15k9s";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];

      };
      "resolv-conf" = rec {
        crateName = "resolv-conf";
        version = "0.7.0";
        edition = "2015";
        sha256 = "005sk8r1php2g41yn7fdf1sn8cafyaqm6jxia42h2v88saa47r2j";
        libName = "resolv_conf";
        authors = [
          "paul@colomiets.name"
        ];
        dependencies = [
          {
            name = "hostname";
            packageId = "hostname";
            optional = true;
          }
          {
            name = "quick-error";
            packageId = "quick-error";
          }
        ];
        features = {
          "system" = [ "hostname" ];
        };
        resolvedDefaultFeatures = [ "hostname" "system" ];
      };
      "retain_mut" = rec {
        crateName = "retain_mut";
        version = "0.1.6";
        edition = "2015";
        sha256 = "0c6vwr9baal8m1c9b5ji3ncjgiwd73hvw4k726sxlf036r2l9pai";
        authors = [
          "Xidorn Quan <me@upsuper.org>"
        ];

      };
      "ring" = rec {
        crateName = "ring";
        version = "0.16.20";
        edition = "2018";
        sha256 = "1z682xp7v38ayq9g9nkbhhfpj6ygralmlx7wdmsfv8rnw99cylrh";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
            features = [ "std" ];
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd") || (target."os" == "illumos") || (target."os" == "netbsd") || (target."os" == "openbsd") || (target."os" == "solaris"));
            features = [ "std" ];
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "x86") || (target."arch" == "x86_64") || (((target."arch" == "aarch64") || (target."arch" == "arm")) && ((target."os" == "android") || (target."os" == "fuchsia") || (target."os" == "linux"))));
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (target."vendor" == "unknown") && (target."os" == "unknown") && (target."env" == ""));
            features = [ "Crypto" "Window" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "ntsecapi" "wtypesbase" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = {target, features}: ((target."unix" or false) || (target."windows" or false));
          }
        ];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "dev_urandom_fallback" = [ "once_cell" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "dev_urandom_fallback" "once_cell" "std" ];
      };
      "rlp" = rec {
        crateName = "rlp";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1da7b1hc4czlmsyr7ifs9bz9fv8hi5dw8q14xnmjlydfn2mhi5cr";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "bytes/std" "rustc-hex/std" ];
        };
      };
      "rocksdb" = rec {
        crateName = "rocksdb";
        version = "0.17.0";
        edition = "2018";
        sha256 = "19s4iwpq03rz2vsjjjxypx08sna5y3cvwcc629hq4b6grajyqqks";
        authors = [
          "Tyler Neely <t@jujit.su>"
          "David Greenberg <dsg123456789@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "librocksdb-sys";
            packageId = "librocksdb-sys";
          }
        ];
        features = {
          "bzip2" = [ "librocksdb-sys/bzip2" ];
          "default" = [ "snappy" "lz4" "zstd" "zlib" "bzip2" ];
          "lz4" = [ "librocksdb-sys/lz4" ];
          "snappy" = [ "librocksdb-sys/snappy" ];
          "zlib" = [ "librocksdb-sys/zlib" ];
          "zstd" = [ "librocksdb-sys/zstd" ];
        };
        resolvedDefaultFeatures = [ "snappy" ];
      };
      "rpassword" = rec {
        crateName = "rpassword";
        version = "5.0.1";
        edition = "2015";
        sha256 = "1yry1kmgjcb4qd5wak91203493x42ak3dz9hy1c0r9kyib7kdjgz";
        authors = [
          "Conrad Kleinespel <conradk@conradk.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "winnt" "fileapi" "processenv" "winbase" "handleapi" "consoleapi" "minwindef" "wincon" ];
          }
        ];

      };
      "rsix" = rec {
        crateName = "rsix";
        version = "0.23.9";
        edition = "2018";
        sha256 = "0cb4qrqdkqy7zqv7n9pvfsgv0km2fsaxk68l8isqpassimwcar0z";
        authors = [
          "Dan Gohman <dev@sunfishcode.online>"
          "Jakub Konka <kubkon@jakubkonka.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "errno";
            packageId = "errno";
            target = { target, features }: ((target."rsix_use_libc" or false) || (!(((target."os" == "linux")) && ((target."arch" == "x86") || ((target."arch" == "x86_64") && (!(target."pointer_width" == "32"))) || (target."arch" == "arm") || (target."arch" == "aarch64") || (target."arch" == "riscv64")))));
          }
          {
            name = "io-lifetimes";
            packageId = "io-lifetimes";
            usesDefaultFeatures = false;
          }
          {
            name = "itoa";
            packageId = "itoa 0.4.8";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."rsix_use_libc" or false) || (!(((target."os" == "linux")) && ((target."arch" == "x86") || ((target."arch" == "x86_64") && (!(target."pointer_width" == "32"))) || (target."arch" == "arm") || (target."arch" == "aarch64") || (target."arch" == "riscv64")))));
            features = [ "extra_traits" ];
          }
          {
            name = "linux-raw-sys";
            packageId = "linux-raw-sys";
            target = { target, features }: ((!(target."rsix_use_libc" or false)) && ((target."os" == "linux")) && ((target."arch" == "x86") || ((target."arch" == "x86_64") && (!(target."pointer_width" == "32"))) || (target."arch" == "arm") || (target."arch" == "aarch64") || (target."arch" == "riscv64")));
            features = [ "v5_4" "v5_11" ];
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "rustc_version";
            packageId = "rustc_version 0.4.0";
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "async-std" = [ "io-lifetimes/async-std" ];
          "fs-err" = [ "io-lifetimes/fs-err" ];
          "mio" = [ "io-lifetimes/mio" ];
          "os_pipe" = [ "io-lifetimes/os_pipe" ];
          "socket2" = [ "io-lifetimes/socket2" ];
          "tokio" = [ "io-lifetimes/tokio" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.21";
        edition = "2015";
        sha256 = "0hn3xyd2n3bg3jnc5a5jbzll32n4r5a65bqzs287l30m5c53xw3y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1qkc5khrmv5pqi5l5ca9p5nl5hs742cagrndhbrlk3dhlrx3zm08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustc-hex" = rec {
        crateName = "rustc-hex";
        version = "2.1.0";
        edition = "2018";
        sha256 = "1mkjy2vbn5kzg67wgngwddlk4snmd8mkjkql2dzrzzfh6ajzcx9y";
        authors = [
          "The Rust Project Developers"
          "debris <marek.kotewicz@gmail.com>"
          "Robert Habermeier"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rustc_version 0.2.3" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.9.0";
          }
        ];

      };
      "rustc_version 0.3.3" = rec {
        crateName = "rustc_version";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1vjmw7xcdri0spsf24mkpwpph853wrbqppihhw061i2igh4f5pzh";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.11.0";
          }
        ];

      };
      "rustc_version 0.4.0" = rec {
        crateName = "rustc_version";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0rpk9rcdk405xhbmgclsh4pai0svn49x35aggl4nhbkd4a2zb85z";
        authors = [
          "Dirkjan Ochtman <dirkjan@ochtman.nl>"
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 1.0.6";
          }
        ];

      };
      "rustls" = rec {
        crateName = "rustls";
        version = "0.19.1";
        edition = "2018";
        sha256 = "1mx6nzbplydy9khll4clsl35m6c1a2cgz9czr74swfgfzrsvdv9m";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "sct";
            packageId = "sct";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log";
          }
        ];
        features = {
          "default" = [ "logging" ];
          "logging" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "logging" ];
      };
      "rustls-native-certs" = rec {
        crateName = "rustls-native-certs";
        version = "0.5.0";
        edition = "2018";
        sha256 = "14i0bbbigk6r6262hvc51vz4dvqk1f3vg2f264wfvn2vi30vf1ss";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "rustls";
            packageId = "rustls";
            optional = true;
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: (target."os" == "macos");
          }
        ];
        features = {
          "default" = [ "rustls" ];
        };
        resolvedDefaultFeatures = [ "default" "rustls" ];
      };
      "rw-stream-sink" = rec {
        crateName = "rw-stream-sink";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0810glqcrs36r3k3a5skg40kygd9hn914fw3zxfmlvy4ajqgr9ad";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "pin-project";
            packageId = "pin-project 0.4.29";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];

      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.9";
        edition = "2018";
        sha256 = "17qlxkqm4h8h9xqj6rh2vnmwxyzikbsj5w223chmr5l2qx8bgd3k";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safe-mix" = rec {
        crateName = "safe-mix";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0p110l33lgw1a21k4dpn5c4r38qa0hj1a753sw7b1rl24md0agbd";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "salsa20 0.8.1" = rec {
        crateName = "salsa20";
        version = "0.8.1";
        edition = "2018";
        sha256 = "1c13p5f8iyx9ak009s1pak8p48fcfgipz0x00icanz7x76v2xggc";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "xsalsa20" ];
          "hsalsa20" = [ "xsalsa20" ];
        };
        resolvedDefaultFeatures = [ "default" "xsalsa20" ];
      };
      "salsa20 0.9.0" = rec {
        crateName = "salsa20";
        version = "0.9.0";
        edition = "2018";
        sha256 = "11i646kpgimimqiq8hyi0b7ngp588f7nl9xsc317d9kdcxgvn3qc";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
        };
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "sc-allocator" = rec {
        crateName = "sc-allocator";
        version = "4.1.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sc-basic-authorship" = rec {
        crateName = "sc-basic-authorship";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-proposer-metrics";
            packageId = "sc-proposer-metrics";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
        ];

      };
      "sc-block-builder" = rec {
        crateName = "sc-block-builder";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
        ];

      };
      "sc-chain-spec" = rec {
        crateName = "sc-chain-spec";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "memmap2";
            packageId = "memmap2 0.5.3";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-chain-spec-derive";
            packageId = "sc-chain-spec-derive";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
        ];

      };
      "sc-chain-spec-derive" = rec {
        crateName = "sc-chain-spec-derive";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "sc-cli" = rec {
        crateName = "sc-cli";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "fdlimit";
            packageId = "fdlimit";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "names";
            packageId = "names";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "rpassword";
            packageId = "rpassword";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-keystore";
            packageId = "sc-keystore";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-service";
            packageId = "sc-service";
            usesDefaultFeatures = false;
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sc-tracing";
            packageId = "sc-tracing";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-keyring";
            packageId = "sp-keyring";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-panic-handler";
            packageId = "sp-panic-handler";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "structopt";
            packageId = "structopt";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tiny-bip39";
            packageId = "tiny-bip39";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "signal" "rt-multi-thread" ];
          }
        ];
        features = {
          "wasmtime" = [ "sc-service/wasmtime" ];
        };
        resolvedDefaultFeatures = [ "wasmtime" ];
      };
      "sc-client-api" = rec {
        crateName = "sc-client-api";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-executor";
            packageId = "sc-executor";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-database";
            packageId = "sp-database";
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
        ];

      };
      "sc-client-db" = rec {
        crateName = "sc-client-db";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
          }
          {
            name = "kvdb";
            packageId = "kvdb";
          }
          {
            name = "kvdb-memorydb";
            packageId = "kvdb-memorydb";
          }
          {
            name = "kvdb-rocksdb";
            packageId = "kvdb-rocksdb";
            optional = true;
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-db";
            packageId = "parity-db";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-state-db";
            packageId = "sc-state-db";
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-database";
            packageId = "sp-database";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
        ];
        devDependencies = [
          {
            name = "kvdb-rocksdb";
            packageId = "kvdb-rocksdb";
          }
        ];
        features = {
          "with-kvdb-rocksdb" = [ "kvdb-rocksdb" ];
          "with-parity-db" = [ "parity-db" ];
        };
        resolvedDefaultFeatures = [ "default" "kvdb-rocksdb" "parity-db" "test-helpers" "with-kvdb-rocksdb" "with-parity-db" ];
      };
      "sc-consensus" = rec {
        crateName = "sc-consensus";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sc-consensus-aura" = rec {
        crateName = "sc-consensus-aura";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-consensus-slots";
            packageId = "sc-consensus-slots";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-consensus-aura";
            packageId = "sp-consensus-aura";
          }
          {
            name = "sp-consensus-slots";
            packageId = "sp-consensus-slots";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
        ];

      };
      "sc-consensus-slots" = rec {
        crateName = "sc-consensus-slots";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-consensus-slots";
            packageId = "sp-consensus-slots";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-timestamp";
            packageId = "sp-timestamp";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sc-executor" = rec {
        crateName = "sc-executor";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1 0.7.0";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-executor-common";
            packageId = "sc-executor-common";
          }
          {
            name = "sc-executor-wasmi";
            packageId = "sc-executor-wasmi";
          }
          {
            name = "sc-executor-wasmtime";
            packageId = "sc-executor-wasmtime";
            optional = true;
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-core-hashing-proc-macro";
            packageId = "sp-core-hashing-proc-macro";
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
          }
          {
            name = "sp-io";
            packageId = "sp-io";
          }
          {
            name = "sp-panic-handler";
            packageId = "sp-panic-handler";
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
          }
          {
            name = "sp-tasks";
            packageId = "sp-tasks";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
          }
          {
            name = "wasmi";
            packageId = "wasmi";
          }
        ];
        features = {
          "default" = [ "std" ];
          "wasmer-sandbox" = [ "sc-executor-common/wasmer-sandbox" ];
          "wasmi-errno" = [ "wasmi/errno" ];
          "wasmtime" = [ "sc-executor-wasmtime" ];
        };
        resolvedDefaultFeatures = [ "default" "sc-executor-wasmtime" "std" "wasmtime" ];
      };
      "sc-executor-common" = rec {
        crateName = "sc-executor-common";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "environmental";
            packageId = "environmental";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "pwasm-utils";
            packageId = "pwasm-utils";
          }
          {
            name = "sc-allocator";
            packageId = "sc-allocator";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-maybe-compressed-blob";
            packageId = "sp-maybe-compressed-blob";
          }
          {
            name = "sp-serializer";
            packageId = "sp-serializer";
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmi";
            packageId = "wasmi";
          }
        ];
        features = {
          "wasmer-sandbox" = [ "wasmer" "wasmer-compiler-singlepass" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sc-executor-wasmi" = rec {
        crateName = "sc-executor-wasmi";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-allocator";
            packageId = "sc-allocator";
          }
          {
            name = "sc-executor-common";
            packageId = "sc-executor-common";
          }
          {
            name = "scoped-tls";
            packageId = "scoped-tls";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
          }
          {
            name = "wasmi";
            packageId = "wasmi";
          }
        ];

      };
      "sc-executor-wasmtime" = rec {
        crateName = "sc-executor-wasmtime";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.42.2";
          }
          {
            name = "sc-allocator";
            packageId = "sc-allocator";
          }
          {
            name = "sc-executor-common";
            packageId = "sc-executor-common";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
          }
          {
            name = "wasmtime";
            packageId = "wasmtime";
            usesDefaultFeatures = false;
            features = [ "cache" "cranelift" "jitdump" "parallel-compilation" ];
          }
        ];

      };
      "sc-informant" = rec {
        crateName = "sc-informant";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
        ];

      };
      "sc-keystore" = rec {
        crateName = "sc-keystore";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
        ];

      };
      "sc-network" = rec {
        crateName = "sc-network";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.5.0";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "cid";
            packageId = "cid";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "fork-tree";
            packageId = "fork-tree";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "ip_network";
            packageId = "ip_network";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "linked_hash_set";
            packageId = "linked_hash_set";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.7.2";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-peerset";
            packageId = "sc-peerset";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-finality-grandpa";
            packageId = "sp-finality-grandpa";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.6.0";
            features = [ "futures" "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
          }
        ];
        devDependencies = [
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sc-offchain" = rec {
        crateName = "sc-offchain";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "stream" "http2" ];
          }
          {
            name = "hyper-rustls";
            packageId = "hyper-rustls";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-offchain";
            packageId = "sp-offchain";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "threadpool";
            packageId = "threadpool";
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sc-peerset" = rec {
        crateName = "sc-peerset";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];

      };
      "sc-proposer-metrics" = rec {
        crateName = "sc-proposer-metrics";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
        ];

      };
      "sc-rpc" = rec {
        crateName = "sc-rpc";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
            rename = "rpc";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-chain-spec";
            packageId = "sc-chain-spec";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-rpc-api";
            packageId = "sc-rpc-api";
          }
          {
            name = "sc-tracing";
            packageId = "sc-tracing";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-offchain";
            packageId = "sp-offchain";
          }
          {
            name = "sp-rpc";
            packageId = "sp-rpc";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-session";
            packageId = "sp-session";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
        ];
        features = {
          "test-helpers" = [ "lazy_static" ];
        };
      };
      "sc-rpc-api" = rec {
        crateName = "sc-rpc-api";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-core-client";
            packageId = "jsonrpc-core-client";
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-chain-spec";
            packageId = "sc-chain-spec";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-rpc";
            packageId = "sp-rpc";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sc-rpc-server" = rec {
        crateName = "sc-rpc-server";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-http-server";
            packageId = "jsonrpc-http-server";
            rename = "http";
          }
          {
            name = "jsonrpc-ipc-server";
            packageId = "jsonrpc-ipc-server";
            rename = "ipc";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
            rename = "pubsub";
          }
          {
            name = "jsonrpc-ws-server";
            packageId = "jsonrpc-ws-server";
            rename = "ws";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];

      };
      "sc-service" = rec {
        crateName = "sc-service";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "exit-future";
            packageId = "exit-future";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "hash-db";
            packageId = "hash-db";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-pubsub";
            packageId = "jsonrpc-pubsub";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-chain-spec";
            packageId = "sc-chain-spec";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-client-db";
            packageId = "sc-client-db";
            usesDefaultFeatures = false;
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-executor";
            packageId = "sc-executor";
          }
          {
            name = "sc-informant";
            packageId = "sc-informant";
          }
          {
            name = "sc-keystore";
            packageId = "sc-keystore";
          }
          {
            name = "sc-network";
            packageId = "sc-network";
          }
          {
            name = "sc-offchain";
            packageId = "sc-offchain";
          }
          {
            name = "sc-rpc";
            packageId = "sc-rpc";
          }
          {
            name = "sc-rpc-server";
            packageId = "sc-rpc-server";
          }
          {
            name = "sc-telemetry";
            packageId = "sc-telemetry";
          }
          {
            name = "sc-tracing";
            packageId = "sc-tracing";
          }
          {
            name = "sc-transaction-pool";
            packageId = "sc-transaction-pool";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-session";
            packageId = "sp-session";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
          }
          {
            name = "sp-transaction-storage-proof";
            packageId = "sp-transaction-storage-proof";
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "time" "rt-multi-thread" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures";
          }
        ];
        features = {
          "db" = [ "sc-client-db/with-kvdb-rocksdb" "sc-client-db/with-parity-db" ];
          "default" = [ "db" ];
          "wasmtime" = [ "sc-executor/wasmtime" ];
        };
        resolvedDefaultFeatures = [ "db" "default" "test-helpers" "wasmtime" ];
      };
      "sc-state-db" = rec {
        crateName = "sc-state-db";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "parity-util-mem-derive";
            packageId = "parity-util-mem-derive";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
        ];

      };
      "sc-telemetry" = rec {
        crateName = "sc-telemetry";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "libp2p";
            packageId = "libp2p 0.40.0";
            usesDefaultFeatures = false;
            features = [ "dns-async-std" "tcp-async-io" "wasm-ext" "websocket" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];

      };
      "sc-tracing" = rec {
        crateName = "sc-tracing";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-rpc-server";
            packageId = "sc-rpc-server";
          }
          {
            name = "sc-tracing-proc-macro";
            packageId = "sc-tracing-proc-macro";
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-rpc";
            packageId = "sp-rpc";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            features = [ "parking_lot" ];
          }
        ];

      };
      "sc-tracing-proc-macro" = rec {
        crateName = "sc-tracing-proc-macro";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
            features = [ "proc-macro" ];
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "proc-macro" "full" "extra-traits" "parsing" ];
          }
        ];

      };
      "sc-transaction-pool" = rec {
        crateName = "sc-transaction-pool";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "intervalier";
            packageId = "intervalier";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "retain_mut";
            packageId = "retain_mut";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sc-utils";
            packageId = "sc-utils";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
          }
          {
            name = "substrate-prometheus-endpoint";
            packageId = "substrate-prometheus-endpoint";
            rename = "prometheus-endpoint";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
          }
        ];
        features = {
        };
      };
      "sc-transaction-pool-api" = rec {
        crateName = "sc-transaction-pool-api";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sc-utils" = rec {
        crateName = "sc-utils";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "prometheus";
            packageId = "prometheus";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "metered" ];
        };
        resolvedDefaultFeatures = [ "default" "metered" ];
      };
      "scale-info" = rec {
        crateName = "scale-info";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0bvq3a9im6c20xmx8lipr5px9y4x22dpilm0ccnm69cw752bfmaw";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bitvec";
            packageId = "bitvec";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
            usesDefaultFeatures = false;
            features = [ "from" ];
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "scale";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info-derive";
            packageId = "scale-info-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" "alloc" ];
          }
        ];
        features = {
          "bit-vec" = [ "bitvec" ];
          "decode" = [ "scale/full" ];
          "default" = [ "std" ];
          "derive" = [ "scale-info-derive" ];
          "docs" = [ "scale-info-derive/docs" ];
          "std" = [ "bitvec/std" "scale/std" ];
        };
        resolvedDefaultFeatures = [ "bitvec" "decode" "derive" "scale-info-derive" "serde" "std" ];
      };
      "scale-info-derive" = rec {
        crateName = "scale-info-derive";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1k8z7y6181yjdnggbhnqr8mfnpw197pa8ni0hqpmk003d602gsxs";
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
          "Centrality Developers <support@centrality.ai>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "derive" "visit" "visit-mut" "extra-traits" ];
          }
        ];
        features = {
          "default" = [ "docs" ];
        };
      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.19";
        edition = "2015";
        sha256 = "0xdwr3clrylywpv2r5hw7mrxmsf7ljagwiymw2z60ki3kihbl1cg";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];

      };
      "schnorrkel" = rec {
        crateName = "schnorrkel";
        version = "0.9.1";
        edition = "2018";
        sha256 = "0qkq4sm7yppih2zw753aadfqwn69ngv15spnd3m1xn3hzqx406q2";
        authors = [
          "Jeff Burdges <jeff@web3.foundation>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
            usesDefaultFeatures = false;
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            usesDefaultFeatures = false;
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 2.1.3";
            usesDefaultFeatures = false;
          }
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "merlin";
            packageId = "merlin";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand_core/alloc" ];
          "asm" = [ "sha2/asm" ];
          "avx2_backend" = [ "curve25519-dalek/avx2_backend" ];
          "chacha" = [ "rand_chacha" ];
          "default" = [ "std" "u64_backend" "rand" "getrandom" ];
          "nightly" = [ "curve25519-dalek/nightly" "rand/nightly" ];
          "std" = [ "getrandom" "curve25519-dalek/std" "rand/std" ];
          "stdweb" = [ "getrandom/stdweb" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
          "wasm-bindgen" = [ "getrandom/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" "getrandom" "preaudit_deprecated" "rand" "std" "u64_backend" ];
      };
      "scoped-tls" = rec {
        crateName = "scoped-tls";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1hj8lifzvivdb1z02lfnzkshpvk85nkgzxsy2hc0zky9wf894spa";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "sct" = rec {
        crateName = "sct";
        version = "0.6.1";
        edition = "2018";
        sha256 = "1ki8qa7yf4d9i4ynsfvwwkpnnqw0m8ayx0jva4w9zrp0k0wbhqmk";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];

      };
      "secrecy" = rec {
        crateName = "secrecy";
        version = "0.8.0";
        edition = "2018";
        sha256 = "07p9h2bpkkg61f1fzzdqqbf74kwv1gg095r1cdmjzzbcl17cblcv";
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "default" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "2.6.1";
        edition = "2018";
        sha256 = "1p0hgqba3h2glm7mgp5d45l2gpmh28kn5vddlfa032mg5wblzh9d";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" "session-tickets" "serial-number-bigint" ];
          "OSX_10_14" = [ "OSX_10_13" "security-framework-sys/OSX_10_14" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
          "default" = [ "OSX_10_9" ];
          "serial-number-bigint" = [ "num-bigint" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" "default" ];
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "2.6.1";
        edition = "2018";
        sha256 = "0mn5lm0jip9nm6ydqm6qd9alyiwq15c027777jsbyibs2wxa2q01";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
          "OSX_10_14" = [ "OSX_10_13" ];
          "default" = [ "OSX_10_9" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" ];
      };
      "semver 0.11.0" = rec {
        crateName = "semver";
        version = "0.11.0";
        edition = "2015";
        sha256 = "1dn6064fipjymnmjccyjhb70miyvqvp08gvw1wbg8vbg4c8ay0gk";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.10.2";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
        ];
        features = {
          "ci" = [ "serde" "diesel/sqlite" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" ];
      };
      "semver 0.6.0" = rec {
        crateName = "semver";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0drmjiwkq0znj33q9x9hw7ld8f28n9diyjs3jlh1l1v5kvn8ccbs";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.7.0";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver 0.9.0" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.7.0";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver 1.0.6" = rec {
        crateName = "semver";
        version = "1.0.6";
        edition = "2018";
        sha256 = "13gkqi8szcqgn3k6agndw9kfggfa41pm6ir02y3l5lpd0cg3i8x4";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "semver-parser 0.10.2" = rec {
        crateName = "semver-parser";
        version = "0.10.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1xqijhqhx3bn77xnl1mlcp032hz8nv7n2fbdacbdzq7rnzsvxc00";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        dependencies = [
          {
            name = "pest";
            packageId = "pest";
          }
        ];

      };
      "semver-parser 0.7.0" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];

      };
      "serde" = rec {
        crateName = "serde";
        version = "1.0.136";
        edition = "2015";
        sha256 = "12a791cbdd3gi08536i4frrqsps0ak8gvhpijvgj9rg1055y4cff";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "derive" "serde_derive" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.136";
        edition = "2015";
        sha256 = "1yb28smlymba4qbj2bn4c4myvblypqvkxv9q33s0dlzwa9qpwn88";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.79";
        edition = "2018";
        sha256 = "158xd1swdvw6y59bx4avb8vdpj727n54r77xw5f7c15kqfjrz3cf";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "unbounded_depth" ];
      };
      "sha-1 0.8.2" = rec {
        crateName = "sha-1";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1pv387q0r7llk2cqzyq0nivzvkgqgzsiygqzlv7b68z9xl5lvngp";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha-1 0.9.8" = rec {
        crateName = "sha-1";
        version = "0.9.8";
        edition = "2018";
        sha256 = "19jibp8l9k5v4dnhj5kfhaczdfd997h22qz0hin6pw9wvc9ngkcr";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.2.1";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86") || (target."arch" == "x86_64"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha2 0.8.2" = rec {
        crateName = "sha2";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0s9yddvyg6anaikdl86wmwfim25c0d4m0xq0y2ghs34alxpg8mm2";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
      };
      "sha2 0.9.9" = rec {
        crateName = "sha2";
        version = "0.9.9";
        edition = "2018";
        sha256 = "006q2f0ar26xcjxqz8zsncfgz86zqa5dkwlwv03rhx1rpzhs2n2d";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures 0.2.1";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha3" = rec {
        crateName = "sha3";
        version = "0.9.1";
        edition = "2018";
        sha256 = "02d85wpvz75a0n7r2da15ikqjwzamhii11qy9gqf6pafgm0rj4gq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
            features = [ "block-padding" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "keccak";
            packageId = "keccak";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sharded-slab" = rec {
        crateName = "sharded-slab";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0cbb8kgwsyr3zzhsv8jrs3y1j3vsw4jxil42lfq31ikhdy0bl3wh";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
        ];

      };
      "shlex" = rec {
        crateName = "shlex";
        version = "1.1.0";
        edition = "2015";
        sha256 = "18zqcay2dgxgrd1r645mb79m4q745jcrqj659k11bwh99lx8bcj3";
        authors = [
          "comex <comexk@gmail.com>"
          "Fenhl <fenhl@fenhl.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "signal-hook" = rec {
        crateName = "signal-hook";
        version = "0.3.13";
        edition = "2018";
        sha256 = "0bdzvax49hm0d3s59j062cznhbkznpylzdsv93mdq1qh4zgrfz34";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Thomas Himmelstoss <thimm@posteo.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
          }
        ];
        features = {
          "default" = [ "channel" "iterator" ];
          "extended-siginfo" = [ "channel" "iterator" "extended-siginfo-raw" ];
          "extended-siginfo-raw" = [ "cc" ];
          "iterator" = [ "channel" ];
        };
        resolvedDefaultFeatures = [ "channel" "iterator" ];
      };
      "signal-hook-registry" = rec {
        crateName = "signal-hook-registry";
        version = "1.4.0";
        edition = "2015";
        sha256 = "1c2mhijg54y6c1zi4630yki1vpq3z96ljfnsrdy0rb64ilr767p5";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Masaki Hara <ackie.h.gmai@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "signature" = rec {
        crateName = "signature";
        version = "1.5.0";
        edition = "2018";
        sha256 = "1r4x94n6ibdd1f85cwmvi29jvyyf1l379n9yybb7jlg9lv0wcm7h";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
          "default" = [ "std" ];
          "derive-preview" = [ "digest-preview" "signature_derive" ];
          "digest-preview" = [ "digest" ];
          "rand-preview" = [ "rand_core" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "simba" = rec {
        crateName = "simba";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0p1x1ndajy4j3dr9zbh79cz5k0hbj4p9bagd7cj00gc5aws0d0lf";
        authors = [
          "sebcrozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "paste";
            packageId = "paste";
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "partial_fixed_point_support" = [ "fixed" "cordic" ];
          "serde_serialize" = [ "serde" "fixed/serde" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.5";
        edition = "2018";
        sha256 = "1ddg01hf8h4bpfm027h0snhb7jfcs1jzi497083y13q13vyr3vwx";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec" = rec {
        crateName = "smallvec";
        version = "1.8.0";
        edition = "2018";
        sha256 = "10zf4fn63p2d6sx8qap3jvyarcfw563308x3431hd4c34r35gpgj";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "const_new" = [ "const_generics" ];
        };
      };
      "snap" = rec {
        crateName = "snap";
        version = "1.0.5";
        edition = "2018";
        sha256 = "0l8llidvm7dlwfw2ql6hk4b4byl9677fppwgl7i2wglqs6a60ia5";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];

      };
      "snow" = rec {
        crateName = "snow";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1dxbdf9k9gf4mk3whn9z8sdi1y8d4gn4hcrclcjzvxllbv1gfhk1";
        authors = [
          "Jake McGinty <me@jake.su>"
          "trevp"
        ];
        dependencies = [
          {
            name = "aes-gcm";
            packageId = "aes-gcm";
            optional = true;
          }
          {
            name = "blake2";
            packageId = "blake2";
            optional = true;
          }
          {
            name = "chacha20poly1305";
            packageId = "chacha20poly1305";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            optional = true;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
          {
            name = "ring";
            packageId = "ring";
            optional = true;
            features = [ "std" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            optional = true;
          }
          {
            name = "subtle";
            packageId = "subtle";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.3.3";
          }
        ];
        features = {
          "default" = [ "default-resolver" ];
          "default-resolver" = [ "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand" ];
          "libsodium-accelerated" = [ "libsodium-resolver" "default-resolver" ];
          "libsodium-resolver" = [ "sodiumoxide" "byteorder" ];
          "nightly" = [ "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly" ];
          "pqclean_kyber1024" = [ "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver" ];
          "ring-accelerated" = [ "ring-resolver" "default-resolver" ];
          "ring-resolver" = [ "ring" ];
          "xchachapoly" = [ "chacha20poly1305" "default-resolver" ];
        };
        resolvedDefaultFeatures = [ "aes-gcm" "blake2" "chacha20poly1305" "default-resolver" "rand" "ring" "ring-resolver" "sha2" "x25519-dalek" ];
      };
      "socket2 0.3.19" = rec {
        crateName = "socket2";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0vldz14mxqxnjqb6an2pj7mgclv7nrk45cpscwq7g3fj2c0mfbhj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
            features = [ "align" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "socket2 0.4.4" = rec {
        crateName = "socket2";
        version = "0.4.4";
        edition = "2018";
        sha256 = "1q71bsw7sqr3nq71gszywgymxxfv311a3w1aia4k5binjisjpmv6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "all" ];
      };
      "soketto 0.4.2" = rec {
        crateName = "soketto";
        version = "0.4.2";
        edition = "2018";
        sha256 = "124waqfkd036xqfn40p63yihyiavwjrip3llyjcsdc2dsp9ixixm";
        authors = [
          "Parity Technologies <admin@parity.io>"
          "Jason Ozias <jason.g.ozias@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.12.3";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "zlib" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "unstable" "bilock" ];
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
          }
        ];
        features = {
          "deflate" = [ "flate2" ];
        };
        resolvedDefaultFeatures = [ "deflate" "flate2" ];
      };
      "soketto 0.7.1" = rec {
        crateName = "soketto";
        version = "0.7.1";
        edition = "2018";
        sha256 = "1hkf17swk2a7rdj0rxbwwg53p2zpy9274b1w719rdq1rbqqcbla1";
        authors = [
          "Parity Technologies <admin@parity.io>"
          "Jason Ozias <jason.g.ozias@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "zlib" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            usesDefaultFeatures = false;
            features = [ "bilock" "std" "unstable" ];
          }
          {
            name = "httparse";
            packageId = "httparse";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            usesDefaultFeatures = false;
            features = [ "std" "std_rng" ];
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "deflate" = [ "flate2" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "flate2" ];
      };
      "sp-api" = rec {
        crateName = "sp-api";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-api-proc-macro";
            packageId = "sp-api-proc-macro";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "disable-logging" = [ "log/max_level_off" ];
          "std" = [ "codec/std" "sp-core/std" "sp-std/std" "sp-runtime/std" "sp-state-machine" "sp-version/std" "hash-db" "thiserror" "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hash-db" "sp-state-machine" "std" "thiserror" ];
      };
      "sp-api-proc-macro" = rec {
        crateName = "sp-api-proc-macro";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
            usesDefaultFeatures = false;
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" "extra-traits" "visit" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-application-crypto" = rec {
        crateName = "sp-application-crypto";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "full_crypto" = [ "sp-core/full_crypto" "sp-io/disable_panic_handler" "sp-io/disable_oom" ];
          "std" = [ "full_crypto" "sp-core/std" "codec/std" "scale-info/std" "serde" "sp-std/std" "sp-io/std" ];
        };
        resolvedDefaultFeatures = [ "default" "full_crypto" "serde" "std" ];
      };
      "sp-arithmetic" = rec {
        crateName = "sp-arithmetic";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "integer-sqrt";
            packageId = "integer-sqrt";
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "num-traits/std" "sp-std/std" "serde" "sp-debug-derive/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "sp-authorship" = rec {
        crateName = "sp-authorship";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "sp-std/std" "sp-inherents/std" "sp-runtime/std" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "std" ];
      };
      "sp-block-builder" = rec {
        crateName = "sp-block-builder";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-runtime/std" "codec/std" "sp-inherents/std" "sp-api/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-blockchain" = rec {
        crateName = "sp-blockchain";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru";
            packageId = "lru 0.7.2";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-database";
            packageId = "sp-database";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "sp-consensus" = rec {
        crateName = "sp-consensus";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            features = [ "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
          {
            name = "sp-std";
            packageId = "sp-std";
          }
          {
            name = "sp-version";
            packageId = "sp-version";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "sp-consensus-aura" = rec {
        crateName = "sp-consensus-aura";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
            optional = true;
          }
          {
            name = "sp-consensus-slots";
            packageId = "sp-consensus-slots";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-timestamp";
            packageId = "sp-timestamp";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-application-crypto/std" "codec/std" "scale-info/std" "sp-std/std" "sp-api/std" "sp-runtime/std" "sp-inherents/std" "sp-timestamp/std" "sp-consensus-slots/std" "sp-consensus" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "default" "sp-consensus" "std" ];
      };
      "sp-consensus-babe" = rec {
        crateName = "sp-consensus-babe";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "merlin";
            packageId = "merlin";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
            optional = true;
          }
          {
            name = "sp-consensus-slots";
            packageId = "sp-consensus-slots";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-vrf";
            packageId = "sp-consensus-vrf";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-timestamp";
            packageId = "sp-timestamp";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-application-crypto/std" "codec/std" "scale-info/std" "merlin/std" "sp-std/std" "sp-api/std" "sp-consensus" "sp-consensus-slots/std" "sp-consensus-vrf/std" "sp-core/std" "sp-inherents/std" "sp-keystore" "sp-runtime/std" "serde" "sp-timestamp" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "serde" "sp-consensus" "sp-keystore" "sp-timestamp" "std" ];
      };
      "sp-consensus-slots" = rec {
        crateName = "sp-consensus-slots";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "serde" "sp-runtime/std" "sp-arithmetic/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "sp-consensus-vrf" = rec {
        crateName = "sp-consensus-vrf";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
            usesDefaultFeatures = false;
            features = [ "preaudit_deprecated" "u64_backend" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "schnorrkel/std" "sp-std/std" "sp-core/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sp-core" = rec {
        crateName = "sp-core";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "base58";
            packageId = "base58";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "dyn-clonable";
            packageId = "dyn-clonable";
            optional = true;
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "u64_backend" "alloc" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
            optional = true;
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hash256-std-hasher";
            packageId = "hash256-std-hasher";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1 0.7.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "hmac" "static-context" ];
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "merlin";
            packageId = "merlin";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types";
            usesDefaultFeatures = false;
            features = [ "codec" "scale-info" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            features = [ "small_rng" ];
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "preaudit_deprecated" "u64_backend" ];
          }
          {
            name = "secrecy";
            packageId = "secrecy";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core-hashing";
            packageId = "sp-core-hashing";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
          {
            name = "ss58-registry";
            packageId = "ss58-registry";
            usesDefaultFeatures = false;
          }
          {
            name = "substrate-bip39";
            packageId = "substrate-bip39";
            optional = true;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
          {
            name = "tiny-bip39";
            packageId = "tiny-bip39";
            optional = true;
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            optional = true;
            features = [ "keccak" ];
          }
          {
            name = "twox-hash";
            packageId = "twox-hash";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi";
            packageId = "wasmi";
            optional = true;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "default" = [ "std" ];
          "full_crypto" = [ "ed25519-dalek" "blake2-rfc" "tiny-keccak" "schnorrkel" "hex" "sha2" "twox-hash" "libsecp256k1" "sp-core-hashing" "sp-runtime-interface/disable_target_static_assertions" "merlin" ];
          "std" = [ "full_crypto" "log/std" "thiserror" "wasmi" "lazy_static" "parking_lot" "primitive-types/std" "primitive-types/serde" "primitive-types/byteorder" "primitive-types/rustc-hex" "impl-serde" "codec/std" "scale-info/std" "hash256-std-hasher/std" "hash-db/std" "sp-std/std" "serde" "twox-hash/std" "blake2-rfc/std" "ed25519-dalek/std" "hex/std" "base58" "substrate-bip39" "tiny-bip39" "byteorder/std" "rand" "sha2/std" "schnorrkel/std" "regex" "num-traits/std" "tiny-keccak" "sp-core-hashing/std" "sp-debug-derive/std" "sp-externalities" "sp-storage/std" "sp-runtime-interface/std" "ss58-registry/std" "zeroize/alloc" "secrecy/alloc" "futures" "futures/thread-pool" "libsecp256k1/std" "dyn-clonable" ];
        };
        resolvedDefaultFeatures = [ "base58" "blake2-rfc" "default" "dyn-clonable" "ed25519-dalek" "full_crypto" "futures" "hex" "impl-serde" "lazy_static" "libsecp256k1" "merlin" "parking_lot" "rand" "regex" "schnorrkel" "serde" "sha2" "sp-core-hashing" "sp-externalities" "std" "substrate-bip39" "thiserror" "tiny-bip39" "tiny-keccak" "twox-hash" "wasmi" ];
      };
      "sp-core-hashing" = rec {
        crateName = "sp-core-hashing";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "blake2-rfc";
            packageId = "blake2-rfc";
            usesDefaultFeatures = false;
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "tiny-keccak";
            packageId = "tiny-keccak";
            features = [ "keccak" ];
          }
          {
            name = "twox-hash";
            packageId = "twox-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "blake2-rfc/std" "sha2/std" "sp-std/std" "twox-hash/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sp-core-hashing-proc-macro" = rec {
        crateName = "sp-core-hashing-proc-macro";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "sp-core-hashing";
            packageId = "sp-core-hashing";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "parsing" ];
          }
        ];

      };
      "sp-database" = rec {
        crateName = "sp-database";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "kvdb";
            packageId = "kvdb";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
        ];

      };
      "sp-debug-derive" = rec {
        crateName = "sp-debug-derive";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sp-externalities" = rec {
        crateName = "sp-externalities";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "environmental";
            packageId = "environmental";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "environmental/std" "sp-std/std" "sp-storage/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-finality-grandpa" = rec {
        crateName = "sp-finality-grandpa";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "finality-grandpa";
            packageId = "finality-grandpa";
            rename = "grandpa";
            usesDefaultFeatures = false;
            features = [ "derive-codec" ];
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "log" "serde" "codec/std" "scale-info/std" "grandpa/std" "sp-api/std" "sp-application-crypto/std" "sp-core/std" "sp-keystore" "sp-runtime/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "serde" "sp-keystore" "std" ];
      };
      "sp-inherents" = rec {
        crateName = "sp-inherents";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-std/std" "codec/std" "sp-core/std" "thiserror" "sp-runtime" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "default" "sp-runtime" "std" "thiserror" ];
      };
      "sp-io" = rec {
        crateName = "sp-io";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            optional = true;
            features = [ "thread-pool" ];
          }
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1 0.7.0";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            optional = true;
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-core/std" "sp-keystore" "codec/std" "sp-std/std" "hash-db/std" "sp-trie" "sp-state-machine" "libsecp256k1" "sp-runtime-interface/std" "sp-externalities" "sp-wasm-interface/std" "sp-tracing/std" "tracing/std" "tracing-core/std" "log" "futures" "parking_lot" ];
          "with-tracing" = [ "sp-tracing/with-tracing" ];
        };
        resolvedDefaultFeatures = [ "default" "disable_oom" "disable_panic_handler" "futures" "libsecp256k1" "log" "parking_lot" "sp-externalities" "sp-keystore" "sp-state-machine" "sp-trie" "std" ];
      };
      "sp-keyring" = rec {
        crateName = "sp-keyring";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "strum";
            packageId = "strum";
            features = [ "derive" ];
          }
        ];

      };
      "sp-keystore" = rec {
        crateName = "sp-keystore";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "merlin";
            packageId = "merlin";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            usesDefaultFeatures = false;
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
            usesDefaultFeatures = false;
            features = [ "preaudit_deprecated" "u64_backend" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "serde" "schnorrkel/std" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "sp-maybe-compressed-blob" = rec {
        crateName = "sp-maybe-compressed-blob";
        version = "4.1.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "zstd";
            packageId = "zstd";
            usesDefaultFeatures = false;
          }
        ];

      };
      "sp-npos-elections" = rec {
        crateName = "sp-npos-elections";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-npos-elections-solution-type";
            packageId = "sp-npos-elections-solution-type";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "serde" "sp-std/std" "sp-arithmetic/std" "sp-core/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "sp-npos-elections-solution-type" = rec {
        crateName = "sp-npos-elections-solution-type";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" ];
          }
        ];

      };
      "sp-offchain" = rec {
        crateName = "sp-offchain";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-core/std" "sp-api/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-panic-handler" = rec {
        crateName = "sp-panic-handler";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "regex";
            packageId = "regex";
          }
        ];

      };
      "sp-rpc" = rec {
        crateName = "sp-rpc";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
        ];

      };
      "sp-runtime" = rec {
        crateName = "sp-runtime";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "hash256-std-hasher";
            packageId = "hash256-std-hasher";
            usesDefaultFeatures = false;
          }
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" "max-encoded-len" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-arithmetic";
            packageId = "sp-arithmetic";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-application-crypto/std" "sp-arithmetic/std" "codec/std" "scale-info/std" "log/std" "sp-core/std" "rand" "sp-std/std" "sp-io/std" "serde" "parity-util-mem/std" "hash256-std-hasher/std" "either/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "serde" "std" ];
      };
      "sp-runtime-interface" = rec {
        crateName = "sp-runtime-interface";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "primitive-types";
            packageId = "primitive-types";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-runtime-interface-proc-macro";
            packageId = "sp-runtime-interface-proc-macro";
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-storage";
            packageId = "sp-storage";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-tracing";
            packageId = "sp-tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-wasm-interface";
            packageId = "sp-wasm-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-wasm-interface/std" "sp-std/std" "sp-tracing/std" "codec/std" "sp-externalities" "primitive-types/std" ];
        };
        resolvedDefaultFeatures = [ "default" "disable_target_static_assertions" "sp-externalities" "std" ];
      };
      "sp-runtime-interface-proc-macro" = rec {
        crateName = "sp-runtime-interface-proc-macro";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "Inflector";
            packageId = "Inflector";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit" "fold" "extra-traits" ];
          }
        ];

      };
      "sp-serializer" = rec {
        crateName = "sp-serializer";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];

      };
      "sp-session" = rec {
        crateName = "sp-session";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            optional = true;
          }
          {
            name = "sp-staking";
            packageId = "sp-staking";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-api/std" "sp-core/std" "sp-std/std" "sp-staking/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "default" "sp-runtime" "std" ];
      };
      "sp-staking" = rec {
        crateName = "sp-staking";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-runtime/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sp-state-machine" = rec {
        crateName = "sp-state-machine";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-panic-handler";
            packageId = "sp-panic-handler";
            optional = true;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            optional = true;
          }
          {
            name = "trie-db";
            packageId = "trie-db";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-root";
            packageId = "trie-root";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "hash-db/std" "num-traits/std" "sp-core/std" "sp-externalities/std" "sp-std/std" "sp-trie/std" "trie-db/std" "trie-root/std" "log" "thiserror" "parking_lot" "rand" "sp-panic-handler" "tracing" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "parking_lot" "rand" "sp-panic-handler" "std" "thiserror" "tracing" ];
      };
      "sp-std" = rec {
        crateName = "sp-std";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-storage" = rec {
        crateName = "sp-storage";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "ref-cast";
            packageId = "ref-cast";
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-debug-derive";
            packageId = "sp-debug-derive";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-std/std" "serde" "impl-serde" "codec/std" "sp-debug-derive/std" ];
        };
        resolvedDefaultFeatures = [ "default" "impl-serde" "serde" "std" ];
      };
      "sp-tasks" = rec {
        crateName = "sp-tasks";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            optional = true;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "log" "sp-core/std" "sp-externalities" "sp-io/std" "sp-runtime-interface/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "sp-externalities" "std" ];
      };
      "sp-timestamp" = rec {
        crateName = "sp-timestamp";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 3.0.2";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-api/std" "sp-std/std" "sp-runtime/std" "codec/std" "sp-inherents/std" "thiserror" "log" "futures-timer" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "default" "futures-timer" "log" "std" "thiserror" ];
      };
      "sp-tracing" = rec {
        crateName = "sp-tracing";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber";
            optional = true;
            features = [ "tracing-log" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "with-tracing" "tracing/std" "tracing-core/std" "codec/std" "sp-std/std" "tracing-subscriber" ];
          "with-tracing" = [ "codec/derive" "codec/full" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "tracing-subscriber" "with-tracing" ];
      };
      "sp-transaction-pool" = rec {
        crateName = "sp-transaction-pool";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-api/std" "sp-runtime/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-transaction-storage-proof" = rec {
        crateName = "sp-transaction-storage-proof";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "log";
            packageId = "log";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            optional = true;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "codec/std" "scale-info/std" "sp-std/std" "sp-inherents/std" "sp-runtime/std" "sp-trie/std" "sp-core" "log" "async-trait" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "default" "log" "sp-core" "sp-trie" "std" ];
      };
      "sp-trie" = rec {
        crateName = "sp-trie";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "memory-db";
            packageId = "memory-db";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-db";
            packageId = "trie-db";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-root";
            packageId = "trie-root";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "sp-std/std" "codec/std" "scale-info/std" "hash-db/std" "memory-db/std" "trie-db/std" "trie-root/std" "sp-core/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sp-version" = rec {
        crateName = "sp-version";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-serde";
            packageId = "impl-serde";
            optional = true;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.42.2";
            optional = true;
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version-proc-macro";
            packageId = "sp-version-proc-macro";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "impl-serde" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-runtime/std" "parity-wasm" "thiserror" ];
        };
        resolvedDefaultFeatures = [ "default" "impl-serde" "parity-wasm" "serde" "std" "thiserror" ];
      };
      "sp-version-proc-macro" = rec {
        crateName = "sp-version-proc-macro";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            features = [ "derive" ];
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" "extra-traits" "visit" ];
          }
        ];

      };
      "sp-wasm-interface" = rec {
        crateName = "sp-wasm-interface";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "impl-trait-for-tuples";
            packageId = "impl-trait-for-tuples";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi";
            packageId = "wasmi";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "wasmi" "sp-std/std" "codec/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "wasmi" ];
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0b84m6dbzrwf2kxylnw82d3dr8w06av7rfkr8s85fb5f43rwyqvf";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];

      };
      "ss58-registry" = rec {
        crateName = "ss58-registry";
        version = "1.15.0";
        edition = "2021";
        sha256 = "0gib6dmdy1rx6vslksk0ya2k4gxh508mi5s586r1q9qjskk9k5rg";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        buildDependencies = [
          {
            name = "Inflector";
            packageId = "Inflector";
            usesDefaultFeatures = false;
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde";
            usesDefaultFeatures = false;
            features = [ "std" "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "stable_deref_trait" = rec {
        crateName = "stable_deref_trait";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1lxjr8q2n534b2lhkxd6l6wcddzjvnksi58zv11f9y0jjmr15wd8";
        authors = [
          "Robert Grosse <n210241048576@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0gsl6xmw10gvn3zs1rv99laj5ig7ylffnh71f9l34js4nr4r7sx2";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "statrs" = rec {
        crateName = "statrs";
        version = "0.15.0";
        edition = "2018";
        sha256 = "01bggaq9n09ch20r4yq9s2c4y54367nd71asg22nl8bq9s7bpg85";
        authors = [
          "Michael Ma"
        ];
        dependencies = [
          {
            name = "approx";
            packageId = "approx";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "nalgebra";
            packageId = "nalgebra";
            features = [ "rand" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
        ];
        features = {
        };
      };
      "strsim" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];

      };
      "structopt" = rec {
        crateName = "structopt";
        version = "0.3.26";
        edition = "2018";
        sha256 = "043sg3qxllann6q9i71d05qp3q13scmcvhxhd950ka2v8ij5qsqc";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "structopt-derive";
            packageId = "structopt-derive";
          }
        ];
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "paw" = [ "structopt-derive/paw" "paw_dep" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "structopt-derive" = rec {
        crateName = "structopt-derive";
        version = "0.4.18";
        edition = "2018";
        sha256 = "1q5gcigmvw0cinjxzpyrkflliq5r1ivljmrvfrl3phcwgwraxdfw";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
      "strum" = rec {
        crateName = "strum";
        version = "0.22.0";
        edition = "2018";
        sha256 = "17kjz02z1wwfw1rcfdsmsbpazngnqhz23zhwychql727gly8kb7p";
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "strum_macros" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "std" "strum_macros" ];
      };
      "strum_macros" = rec {
        crateName = "strum_macros";
        version = "0.22.0";
        edition = "2018";
        sha256 = "1yz9ia03p3xbndhjbcmxjifh1r43cchynzxcqx23g7jliffpk7rk";
        procMacro = true;
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "parsing" "extra-traits" ];
          }
        ];

      };
      "substrate-bip39" = rec {
        crateName = "substrate-bip39";
        version = "0.4.4";
        edition = "2018";
        sha256 = "0g3k0kfb1qwx4rzr0lsfn10svghx5flqbvnj5n42zcwna6bfdvj9";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hmac";
            packageId = "hmac 0.11.0";
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2 0.8.0";
            usesDefaultFeatures = false;
          }
          {
            name = "schnorrkel";
            packageId = "schnorrkel";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];

      };
      "substrate-build-script-utils" = rec {
        crateName = "substrate-build-script-utils";
        version = "3.0.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "platforms";
            packageId = "platforms";
          }
        ];

      };
      "substrate-frame-rpc-system" = rec {
        crateName = "substrate-frame-rpc-system";
        version = "4.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "frame-system-rpc-runtime-api";
            packageId = "frame-system-rpc-runtime-api";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "jsonrpc-core";
            packageId = "jsonrpc-core";
          }
          {
            name = "jsonrpc-core-client";
            packageId = "jsonrpc-core-client";
          }
          {
            name = "jsonrpc-derive";
            packageId = "jsonrpc-derive";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-rpc-api";
            packageId = "sc-rpc-api";
          }
          {
            name = "sc-transaction-pool-api";
            packageId = "sc-transaction-pool-api";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
        ];

      };
      "substrate-prometheus-endpoint" = rec {
        crateName = "substrate-prometheus-endpoint";
        version = "0.10.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "unstable" ];
          }
          {
            name = "derive_more";
            packageId = "derive_more";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "io" ];
          }
          {
            name = "hyper";
            packageId = "hyper";
            usesDefaultFeatures = false;
            features = [ "http1" "server" "tcp" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "prometheus";
            packageId = "prometheus";
            usesDefaultFeatures = false;
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper";
            features = [ "client" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" ];
          }
        ];

      };
      "substrate-test-client" = rec {
        crateName = "substrate-test-client";
        version = "2.0.1";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-client-db";
            packageId = "sc-client-db";
            features = [ "test-helpers" ];
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sc-executor";
            packageId = "sc-executor";
          }
          {
            name = "sc-offchain";
            packageId = "sc-offchain";
          }
          {
            name = "sc-service";
            packageId = "sc-service";
            usesDefaultFeatures = false;
            features = [ "test-helpers" ];
          }
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-keyring";
            packageId = "sp-keyring";
          }
          {
            name = "sp-keystore";
            packageId = "sp-keystore";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
          }
        ];

      };
      "substrate-test-runtime" = rec {
        crateName = "substrate-test-runtime";
        version = "2.0.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "frame-support";
            packageId = "frame-support";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system";
            packageId = "frame-system";
            usesDefaultFeatures = false;
          }
          {
            name = "frame-system-rpc-runtime-api";
            packageId = "frame-system-rpc-runtime-api";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "memory-db";
            packageId = "memory-db";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-babe";
            packageId = "pallet-babe";
            usesDefaultFeatures = false;
          }
          {
            name = "pallet-timestamp";
            packageId = "pallet-timestamp";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "parity-util-mem";
            packageId = "parity-util-mem";
            usesDefaultFeatures = false;
            features = [ "primitive-types" ];
          }
          {
            name = "sc-service";
            packageId = "sc-service";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "test-helpers" ];
          }
          {
            name = "scale-info";
            packageId = "scale-info";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sp-api";
            packageId = "sp-api";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-application-crypto";
            packageId = "sp-application-crypto";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-block-builder";
            packageId = "sp-block-builder";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-aura";
            packageId = "sp-consensus-aura";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-consensus-babe";
            packageId = "sp-consensus-babe";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-core";
            packageId = "sp-core";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-externalities";
            packageId = "sp-externalities";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-finality-grandpa";
            packageId = "sp-finality-grandpa";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-inherents";
            packageId = "sp-inherents";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-io";
            packageId = "sp-io";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-keyring";
            packageId = "sp-keyring";
            optional = true;
          }
          {
            name = "sp-offchain";
            packageId = "sp-offchain";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-runtime-interface";
            packageId = "sp-runtime-interface";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-session";
            packageId = "sp-session";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-state-machine";
            packageId = "sp-state-machine";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-transaction-pool";
            packageId = "sp-transaction-pool";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-trie";
            packageId = "sp-trie";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-version";
            packageId = "sp-version";
            usesDefaultFeatures = false;
          }
          {
            name = "trie-db";
            packageId = "trie-db";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "substrate-wasm-builder";
            packageId = "substrate-wasm-builder 5.0.0-dev";
          }
        ];
        features = {
          "default" = [ "std" ];
          "disable-logging" = [ "sp-api/disable-logging" ];
          "std" = [ "sp-application-crypto/std" "sp-consensus-aura/std" "sp-consensus-babe/std" "sp-block-builder/std" "codec/std" "scale-info/std" "sp-inherents/std" "sp-keyring" "log/std" "memory-db/std" "sp-offchain/std" "sp-core/std" "sp-core/std" "sp-std/std" "sp-runtime-interface/std" "sp-io/std" "frame-support/std" "sp-version/std" "serde" "sp-session/std" "sp-api/std" "sp-runtime/std" "sp-externalities/std" "sp-state-machine/std" "pallet-babe/std" "frame-system-rpc-runtime-api/std" "frame-system/std" "pallet-timestamp/std" "sc-service" "sp-finality-grandpa/std" "sp-trie/std" "sp-transaction-pool/std" "trie-db/std" ];
        };
        resolvedDefaultFeatures = [ "default" "sc-service" "serde" "sp-keyring" "std" ];
      };
      "substrate-test-runtime-client" = rec {
        crateName = "substrate-test-runtime-client";
        version = "2.0.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "parity-scale-codec";
            packageId = "parity-scale-codec";
            rename = "codec";
          }
          {
            name = "sc-block-builder";
            packageId = "sc-block-builder";
          }
          {
            name = "sc-client-api";
            packageId = "sc-client-api";
          }
          {
            name = "sc-consensus";
            packageId = "sc-consensus";
          }
          {
            name = "sp-api";
            packageId = "sp-api";
          }
          {
            name = "sp-blockchain";
            packageId = "sp-blockchain";
          }
          {
            name = "sp-consensus";
            packageId = "sp-consensus";
          }
          {
            name = "sp-core";
            packageId = "sp-core";
          }
          {
            name = "sp-runtime";
            packageId = "sp-runtime";
          }
          {
            name = "substrate-test-client";
            packageId = "substrate-test-client";
          }
          {
            name = "substrate-test-runtime";
            packageId = "substrate-test-runtime";
          }
        ];

      };
      "substrate-wasm-builder 4.0.0" = rec {
        crateName = "substrate-wasm-builder";
        version = "4.0.0";
        edition = "2018";
        sha256 = "0406zppy30fixm5pv39ii91rp5fcpxi215pa0f5l1g5bsqddb8wk";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "build-helper";
            packageId = "build-helper";
          }
          {
            name = "cargo_metadata";
            packageId = "cargo_metadata 0.12.3";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "wasm-gc-api";
            packageId = "wasm-gc-api";
          }
        ];

      };
      "substrate-wasm-builder 5.0.0-dev" = rec {
        crateName = "substrate-wasm-builder";
        version = "5.0.0-dev";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/paritytech/substrate.git";
          rev = "afb74de23dfe2994e7ce38c0870efb9734e966f7";
          sha256 = "06c3zca6xjkdfwsgv4jvxj9p21civ081cdpn5rcmsbacg4fjzg9h";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "build-helper";
            packageId = "build-helper";
          }
          {
            name = "cargo_metadata";
            packageId = "cargo_metadata 0.14.2";
          }
          {
            name = "sp-maybe-compressed-blob";
            packageId = "sp-maybe-compressed-blob";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "wasm-gc-api";
            packageId = "wasm-gc-api";
          }
        ];

      };
      "subtle" = rec {
        crateName = "subtle";
        version = "2.4.1";
        edition = "2015";
        sha256 = "00b6jzh9gzb0h9n25g06nqr90z3xzqppfhhb260s1hjhh4pg7pkb";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "syn" = rec {
        crateName = "syn";
        version = "1.0.86";
        edition = "2018";
        sha256 = "0sqwa4nqxzm89nj8xd8sk4iz0hbrw3mb17b6hyc2w2d0zzsb6rca";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.6";
        edition = "2018";
        sha256 = "03r1lydbf3japnlpc4wka7y90pmz1i0danaj3f9a7b431akdlszk";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "tap" = rec {
        crateName = "tap";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0sc3gl4nldqpvyhqi3bbd0l9k7fngrcl4zs47n314nqqk4bpx4sm";
        authors = [
          "Elliott Linder <elliott.darfink@gmail.com>"
          "myrrlyn <self@myrrlyn.dev>"
        ];

      };
      "target-lexicon" = rec {
        crateName = "target-lexicon";
        version = "0.12.3";
        edition = "2018";
        sha256 = "1hbs7gs6br3r7hkjw011bnfbddpfla2i9h5klvy8bjrs0iapxynp";
        authors = [
          "Dan Gohman <sunfish@mozilla.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.3.0";
        edition = "2018";
        sha256 = "1r3rdp66f7w075mz6blh244syr3h0lbm07ippn7xrbgfxbs1xnsw";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "wasi"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        features = {
        };
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.1.2";
        edition = "2018";
        sha256 = "1x65i1ny4m6z1by62ra6wdcrd557p2ysm866x0pg60zby2cxizid";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "textwrap" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];

      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.30";
        edition = "2018";
        sha256 = "05y4wm29ck8flwq5k1q6nhwh00a3b30cz3xr0qvnbwad5vjsnjw5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];

      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.30";
        edition = "2018";
        sha256 = "0jviwmvx6wzawsj6c9msic7h419wmsbjagl9dzhpydkzc8zzscma";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "thread_local" = rec {
        crateName = "thread_local";
        version = "1.1.4";
        edition = "2018";
        sha256 = "1001bvz6a688wf3izcrh3jqrkiqaarf44wf08azm071ig1xw45jm";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "threadpool" = rec {
        crateName = "threadpool";
        version = "1.8.1";
        edition = "2015";
        sha256 = "1amgfyzvynbm8pacniivzq9r0fh3chhs7kijic81j76l6c5ycl6h";
        authors = [
          "The Rust Project Developers"
          "Corey Farwell <coreyf@rwell.org>"
          "Stefan Schindler <dns2utf8@estada.ch>"
        ];
        dependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "time" = rec {
        crateName = "time";
        version = "0.1.44";
        edition = "2015";
        sha256 = "0m9jwy2pcmk232r3b9r80fs12mkckfjffjha4qfaxcdq9a8ydfbd";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];

      };
      "tiny-bip39" = rec {
        crateName = "tiny-bip39";
        version = "0.8.2";
        edition = "2018";
        sha256 = "17c3073drxkpp1dmv27sn08f70l5iamdd3x7qc9b6ny8vywrrigz";
        libName = "bip39";
        authors = [
          "Stephen Oliver <steve@infincia.com>"
          "Maciej Hirsz <hello@maciej.codes>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "hmac";
            packageId = "hmac 0.8.1";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "pbkdf2";
            packageId = "pbkdf2 0.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "wasm-bindgen" ];
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "default" = [ "chinese-simplified" "chinese-traditional" "french" "italian" "japanese" "korean" "spanish" ];
        };
        resolvedDefaultFeatures = [ "chinese-simplified" "chinese-traditional" "default" "french" "italian" "japanese" "korean" "spanish" ];
      };
      "tiny-keccak" = rec {
        crateName = "tiny-keccak";
        version = "2.0.2";
        edition = "2018";
        sha256 = "0dq2x0hjffmixgyf6xv9wgsbcxkd65ld0wrfqmagji8a829kg79c";
        authors = [
          "debris <marek.kotewicz@gmail.com>"
        ];
        dependencies = [
          {
            name = "crunchy";
            packageId = "crunchy";
          }
        ];
        features = {
          "fips202" = [ "keccak" "shake" "sha3" ];
          "kmac" = [ "cshake" ];
          "parallel_hash" = [ "cshake" ];
          "sp800" = [ "cshake" "kmac" "tuple_hash" ];
          "tuple_hash" = [ "cshake" ];
        };
        resolvedDefaultFeatures = [ "default" "keccak" ];
      };
      "tinyvec" = rec {
        crateName = "tinyvec";
        version = "1.5.1";
        edition = "2018";
        sha256 = "1lnqnva56673r0d40586rkzyl2qqcz19wm29q8h5a95n89d1s71c";
        authors = [
          "Lokathor <zefria@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec_macros";
            packageId = "tinyvec_macros";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "tinyvec_macros" ];
          "real_blackbox" = [ "criterion/real_blackbox" ];
          "rustc_1_55" = [ "rustc_1_40" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "tinyvec_macros" ];
      };
      "tinyvec_macros" = rec {
        crateName = "tinyvec_macros";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0p5zvgbas5nh403fbxica819mf3g83n8g2hzpfazfr56w6klv9yd";
        authors = [
          "Soveu <marx.tomasz@gmail.com>"
        ];

      };
      "tokio" = rec {
        crateName = "tokio";
        version = "1.17.0";
        edition = "2018";
        sha256 = "1vm5ynzjpsqzqv15fdrk69n6y8fhwlilmqvj270ggwsnjz23mxra";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio 0.8.0";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            optional = true;
            features = [ "all" ];
          }
          {
            name = "tokio-macros";
            packageId = "tokio-macros";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = {target, features}: (target."unix" or false);
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.4";
            target = {target, features}: (!(target."arch" == "wasm32"));
          }
        ];
        features = {
          "full" = [ "fs" "io-util" "io-std" "macros" "net" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "sync" "time" ];
          "io-util" = [ "memchr" "bytes" ];
          "macros" = [ "tokio-macros" ];
          "net" = [ "libc" "mio/os-poll" "mio/os-ext" "mio/net" "socket2" "winapi/namedpipeapi" ];
          "process" = [ "bytes" "once_cell" "libc" "mio/os-poll" "mio/os-ext" "mio/net" "signal-hook-registry" "winapi/threadpoollegacyapiset" ];
          "rt-multi-thread" = [ "num_cpus" "rt" ];
          "signal" = [ "once_cell" "libc" "mio/os-poll" "mio/net" "mio/os-ext" "signal-hook-registry" "winapi/consoleapi" ];
          "test-util" = [ "rt" "sync" "time" ];
        };
        resolvedDefaultFeatures = [ "bytes" "default" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "socket2" "sync" "time" "tokio-macros" "winapi" ];
      };
      "tokio-macros" = rec {
        crateName = "tokio-macros";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ds34qsfvgf63cjgdx3gr4pl7i76fifyar15ksbillcc8hpzfmxm";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "tokio-rustls" = rec {
        crateName = "tokio-rustls";
        version = "0.22.0";
        edition = "2018";
        sha256 = "1dp1s2kai081f3fn9gjq92x2lw7lm7iqpcsl02cg2zg5fbg48s5w";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "dangerous_configuration" = [ "rustls/dangerous_configuration" ];
        };
      };
      "tokio-stream" = rec {
        crateName = "tokio-stream";
        version = "0.1.8";
        edition = "2018";
        sha256 = "1qwq0y21xprsql4v9y1cm1ymhgw66rznjmnjrjsii27zxy25852h";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" "test-util" ];
          }
        ];
        features = {
          "default" = [ "time" ];
          "fs" = [ "tokio/fs" ];
          "io-util" = [ "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "signal" = [ "tokio/signal" ];
          "sync" = [ "tokio/sync" "tokio-util" ];
          "time" = [ "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "default" "net" "time" ];
      };
      "tokio-util" = rec {
        crateName = "tokio-util";
        version = "0.6.9";
        edition = "2018";
        sha256 = "1h2cc3ickn6wj5c0bhw8v5drzrwr5r6n0rjbxgc6qdsx7scf36cy";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "__docs_rs" = [ "futures-util" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "compat" "io-util" "time" "net" "rt" ];
          "io-util" = [ "io" "tokio/rt" "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "rt" = [ "tokio/rt" ];
          "time" = [ "tokio/time" "slab" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" ];
      };
      "toml" = rec {
        crateName = "toml";
        version = "0.5.8";
        edition = "2018";
        sha256 = "1apcmjrrjw429pjw7mqlmdwwd67g8305vwqy4kw3swr612bl44d3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tower-service" = rec {
        crateName = "tower-service";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1iih764s3f6vlkspfmr72fkrs2lw1v3wiqmc6bd5zq1hdlfzs39n";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];

      };
      "tracing" = rec {
        crateName = "tracing";
        version = "0.1.31";
        edition = "2018";
        sha256 = "17wvxyppvkqgs1cc583sjrd4q8nirchks0vgff9xvlhcxyl51ipn";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tracing-attributes";
            packageId = "tracing-attributes";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
          "valuable" = [ "tracing-core/valuable" ];
        };
        resolvedDefaultFeatures = [ "attributes" "default" "std" "tracing-attributes" ];
      };
      "tracing-attributes" = rec {
        crateName = "tracing-attributes";
        version = "0.1.19";
        edition = "2018";
        sha256 = "05m7wxidfsx3mnvi8adq8532cn1xnm8as0skmnvxfn55lfjdjxl2";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <dbarsky@amazon.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "visit" "visit-mut" "clone-impls" "extra-traits" "proc-macro" ];
          }
        ];
        features = {
        };
      };
      "tracing-core" = rec {
        crateName = "tracing-core";
        version = "0.1.22";
        edition = "2018";
        sha256 = "08wssa1n70vg02nfw6ykfzjhind88ws8vjqi64nsfch6718wpkq3";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "valuable";
            packageId = "valuable";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."tracing_unstable" or false);
          }
        ];
        features = {
          "default" = [ "std" "valuable/std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" "valuable" ];
      };
      "tracing-futures" = rec {
        crateName = "tracing-futures";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1wimg0iwa2ldq7xv98lvivvf3q9ykfminig8r1bs0ig22np9bl4p";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project" ];
        };
        resolvedDefaultFeatures = [ "default" "pin-project" "std" "std-future" ];
      };
      "tracing-log" = rec {
        crateName = "tracing-log";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1qv1cwvdqrgvizkszbff4fvkw0m3nn5yz68r3yaw2hcflivk94m6";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];
        features = {
          "default" = [ "log-tracer" "trace-logger" "std" ];
          "std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "log-tracer" "std" "trace-logger" ];
      };
      "tracing-serde" = rec {
        crateName = "tracing-serde";
        version = "0.1.3";
        edition = "2018";
        sha256 = "1qfr0va69djvxqvjrx4vqq7p6myy414lx4w1f6amcn0hfwqj2sxw";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
        ];
        features = {
          "valuable" = [ "valuable_crate" "valuable-serde" "tracing-core/valuable" ];
        };
      };
      "tracing-subscriber" = rec {
        crateName = "tracing-subscriber";
        version = "0.2.25";
        edition = "2018";
        sha256 = "0wcc3sqckjsxaahd9jnc4cwa13m623lhk8fg8way9hn3k6m2w38f";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <me@davidbarsky.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
          }
          {
            name = "chrono";
            packageId = "chrono";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "clock" "std" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            optional = true;
          }
          {
            name = "matchers";
            packageId = "matchers";
            optional = true;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "serde";
            packageId = "serde";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "sharded-slab";
            packageId = "sharded-slab";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
            optional = true;
          }
          {
            name = "thread_local";
            packageId = "thread_local";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing-core";
            packageId = "tracing-core";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "log-tracer" "std" ];
          }
          {
            name = "tracing-serde";
            packageId = "tracing-serde";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing";
            packageId = "tracing";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
        ];
        features = {
          "ansi" = [ "fmt" "ansi_term" ];
          "default" = [ "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json" ];
          "env-filter" = [ "matchers" "regex" "lazy_static" "tracing" ];
          "fmt" = [ "registry" ];
          "json" = [ "tracing-serde" "serde" "serde_json" ];
          "registry" = [ "sharded-slab" "thread_local" ];
        };
        resolvedDefaultFeatures = [ "ansi" "ansi_term" "chrono" "default" "env-filter" "fmt" "json" "lazy_static" "matchers" "parking_lot" "regex" "registry" "serde" "serde_json" "sharded-slab" "smallvec" "thread_local" "tracing" "tracing-log" "tracing-serde" ];
      };
      "trie-db" = rec {
        crateName = "trie-db";
        version = "0.22.6";
        edition = "2018";
        sha256 = "1yh2kvii620x4c801ajpg76ssf180j198f87psrvd0af6cg17b4y";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            usesDefaultFeatures = false;
            features = [ "ahash" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rustc-hex";
            packageId = "rustc-hex";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "hash-db/std" "rustc-hex" ];
        };
        resolvedDefaultFeatures = [ "rustc-hex" "std" ];
      };
      "trie-root" = rec {
        crateName = "trie-root";
        version = "0.16.0";
        edition = "2018";
        sha256 = "1kb8kylp5046rpkh8zxkc50pp2kiasgvjw3s47bl84icdm832ab5";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "hash-db";
            packageId = "hash-db";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "hash-db/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "trust-dns-proto" = rec {
        crateName = "trust-dns-proto";
        version = "0.20.4";
        edition = "2018";
        sha256 = "0cafw8m2488xlr251b0khf6h2d7g4ix0s164j33838dnzvlx956a";
        libName = "trust_dns_proto";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "enum-as-inner";
            packageId = "enum-as-inner";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "idna";
            packageId = "idna 0.2.3";
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        features = {
          "default" = [ "tokio-runtime" ];
          "dnssec-openssl" = [ "dnssec" "openssl" ];
          "dnssec-ring" = [ "dnssec" "ring" ];
          "mdns" = [ "socket2/reuseport" ];
          "serde-config" = [ "serde" ];
          "tokio-runtime" = [ "tokio/net" "tokio/rt" "tokio/time" "tokio/rt-multi-thread" ];
          "wasm-bindgen" = [ "wasm-bindgen-crate" "js-sys" ];
        };
      };
      "trust-dns-resolver" = rec {
        crateName = "trust-dns-resolver";
        version = "0.20.4";
        edition = "2018";
        sha256 = "0ymprysz8f5qjaj74x488pjhbwy329yybs2clgx5x6frm8xkibpc";
        libName = "trust_dns_resolver";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "ipconfig";
            packageId = "ipconfig";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "lru-cache";
            packageId = "lru-cache";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "resolv-conf";
            packageId = "resolv-conf";
            optional = true;
            features = [ "system" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "trust-dns-proto";
            packageId = "trust-dns-proto";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "backtrace" = [ "trust-dns-proto/backtrace" ];
          "default" = [ "system-config" "tokio-runtime" ];
          "dns-over-https-rustls" = [ "trust-dns-https" "dns-over-rustls" "dns-over-https" ];
          "dns-over-native-tls" = [ "dns-over-tls" "tokio-native-tls" "trust-dns-native-tls" ];
          "dns-over-openssl" = [ "dns-over-tls" "trust-dns-openssl" "tokio-openssl" ];
          "dns-over-rustls" = [ "dns-over-tls" "rustls" "tokio-rustls" "trust-dns-rustls" "webpki-roots" ];
          "dnssec-openssl" = [ "dnssec" "trust-dns-proto/dnssec-openssl" ];
          "dnssec-ring" = [ "dnssec" "trust-dns-proto/dnssec-ring" ];
          "mdns" = [ "trust-dns-proto/mdns" ];
          "serde-config" = [ "serde" "trust-dns-proto/serde-config" ];
          "system-config" = [ "ipconfig" "resolv-conf" ];
          "tokio-runtime" = [ "tokio/rt" "trust-dns-proto/tokio-runtime" ];
        };
        resolvedDefaultFeatures = [ "ipconfig" "resolv-conf" "system-config" ];
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0hkn1ksmg5hdqgqdw1ahy5qk69f4crh2psf0v61qphyrf777nm2r";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "tt-call" = rec {
        crateName = "tt-call";
        version = "1.0.8";
        edition = "2018";
        sha256 = "0md03vvmq18k3hsx8vcw237cg9cy8v17czn50gfnj319qjzdqrjy";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "twox-hash" = rec {
        crateName = "twox-hash";
        version = "1.6.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1866mb05iimdb2vmbn2wc5fifcajmn6dkm5qah1r9zi495p3xrsf";
        authors = [
          "Jake Goulding <jake.goulding@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "serialize" = [ "serde" ];
          "std" = [ "rand" ];
        };
        resolvedDefaultFeatures = [ "rand" "std" ];
      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.15.0";
        edition = "2018";
        sha256 = "11yrvz1vd43gqv738yw1v75rzngjbs7iwcgzjy3cq5ywkv2imy6w";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
          "scale_info" = [ "scale-info/derive" ];
        };
      };
      "ucd-trie" = rec {
        crateName = "ucd-trie";
        version = "0.1.3";
        edition = "2018";
        sha256 = "072cblf8v3wzyaz3lhbpzgil4s03dpzg1ppy3gqx2l4v622y3pjn";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "uint" = rec {
        crateName = "uint";
        version = "0.9.3";
        edition = "2021";
        sha256 = "1q6icqnnxjphzbi76r091mvlbdy9vc80s2j5rh8xc7ghrkvkmw0j";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "crunchy";
            packageId = "crunchy";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "quickcheck" = [ "qc" "rand07" ];
          "std" = [ "byteorder/std" "crunchy/std" "hex/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicase" = rec {
        crateName = "unicase";
        version = "2.6.0";
        edition = "2015";
        sha256 = "1xmlbink4ycgxrkjspp0mf7pghcx4m7vxq7fpfm04ikr2zk7pwsh";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
          }
        ];
        features = {
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.7";
        edition = "2018";
        sha256 = "13v7v8pp7mdqqf0ypk73va78c3b4xzpryvbls9p47nz3cd34008s";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.19";
        edition = "2018";
        sha256 = "1yabhmg8zlcksda3ajly9hpbzqgbhknxwch8dwkfkaa1569r0ifm";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.9.0";
        edition = "2018";
        sha256 = "16gxxda9aya0arcqs9aa9lb31b3i54i34dmyqi6j5xkpszsj123y";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0wq9wl69wlp6zwlxp660g9p4hm5gk91chwk14dp1gl9bxba45mry";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1wrkgcw557v311dkdb6n2hrix9dm2qdsb1zpw7pn79l03zb85jwc";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "universal-hash" = rec {
        crateName = "universal-hash";
        version = "0.4.1";
        edition = "2018";
        sha256 = "01av09i0rqcl8f0xgvn2g07kzyafgbiwdhkfwq0m14kyd67lw8cz";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "subtle";
            packageId = "subtle";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "unsigned-varint 0.5.1" = rec {
        crateName = "unsigned-varint";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0ddc36m85jw5bzl2gjnhazi283r4qdsrnmdf77zavbq5ybdyxzgp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
          "futures-codec" = [ "std" "bytes" "futures_codec" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "unsigned-varint 0.6.0" = rec {
        crateName = "unsigned-varint";
        version = "0.6.0";
        edition = "2018";
        sha256 = "1ch8d6rpck9k70ghp61acdzb3zzmqwh72q1fb25ya0a17pw1yn1m";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.5.0";
            optional = true;
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            optional = true;
            features = [ "io" ];
          }
        ];
        features = {
          "asynchronous_codec" = [ "std" "bytes" "asynchronous-codec" ];
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
        };
        resolvedDefaultFeatures = [ "asynchronous-codec" "asynchronous_codec" "bytes" "futures" "futures-io" "futures-util" "std" ];
      };
      "unsigned-varint 0.7.1" = rec {
        crateName = "unsigned-varint";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0dn8q6rrxky2jd5zg9ba0nppfki7iz1khc74606ink2yyk3qssnq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec 0.6.0";
            optional = true;
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            optional = true;
            features = [ "io" ];
          }
        ];
        features = {
          "asynchronous_codec" = [ "std" "bytes" "asynchronous-codec" ];
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
        };
        resolvedDefaultFeatures = [ "asynchronous-codec" "asynchronous_codec" "bytes" "futures" "futures-io" "futures-util" "std" ];
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0jkbqaj9d3v5a91pp3wp9mffvng1nhycx6sh4qkdd9qyr62ccmm1";
        libPath = "src/untrusted.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];

      };
      "url 1.7.2" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.1.5";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "url 2.2.2" = rec {
        crateName = "url";
        version = "2.2.2";
        edition = "2018";
        sha256 = "132pzpvfvpw33gjlzqd55n5iag9qddzffq8qbp1myfykna1w61x5";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "idna";
            packageId = "idna 0.2.3";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "valuable" = rec {
        crateName = "valuable";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0v9gp3nkjbl30z0fd56d8mx7w1csk86wwjhfjhr400wh9mfpw2w3";
        features = {
          "default" = [ "std" ];
          "derive" = [ "valuable-derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "value-bag" = rec {
        crateName = "value-bag";
        version = "1.0.0-alpha.8";
        edition = "2018";
        sha256 = "0gr6w3mmx6ld13kmg36dbk9vncy57azrhc33lgxynqfw65vkz4kr";
        authors = [
          "Ashley Mannix <ashleymannix@live.com.au>"
        ];
        dependencies = [
          {
            name = "ctor";
            packageId = "ctor";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check";
            rename = "rustc";
          }
        ];
        features = {
          "error" = [ "std" "sval1_lib/std" ];
          "serde" = [ "serde1" ];
          "serde1" = [ "serde1_lib" "sval1_lib/serde1" "sval1_lib/alloc" "erased-serde1/alloc" "serde1_fmt" ];
          "sval" = [ "sval1" ];
          "sval1" = [ "sval1_lib" ];
          "test" = [ "std" ];
        };
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.15";
        edition = "2015";
        sha256 = "09i4nf5y8lig6xgj3f7fyrvzd3nlaw4znrihw8psidvv5yk4xkdc";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];

      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1481w9g1dw9rxp3l6snkdqihzyrd2f8vispzqmwjwsdyhw8xzggi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check" = rec {
        crateName = "version_check";
        version = "0.9.4";
        edition = "2015";
        sha256 = "0gs8grwdlgh0xq660d7wr80x14vxbizmd8dbp29p2pdncx8lp1s9";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];

      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "waker-fn" = rec {
        crateName = "waker-fn";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1jpfiis0frk2b36krqvk8264kgxk2dyhfzjsr8g3wah1nii2qnwx";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mnszy33685v8y9js8mw6x2p3iddqs8vfj7n2dhqddnlbirz5340";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "want" = rec {
        crateName = "want";
        version = "0.3.0";
        edition = "2018";
        sha256 = "181b2zmwfq389x9n2g1n37cvcvvdand832zz6v8i1l8wrdlaks0w";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];

      };
      "wasi 0.10.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.10.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "07y3l8mzfzzz4cj09c8y90yak4hpsi9g7pllyzpr6xvwrabka50s";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasi 0.9.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.79";
        edition = "2018";
        sha256 = "01kc4lj2vlf0ra2w63izrgdlv8p6f8p15086hhyqln6q4dsazw95";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.79";
        edition = "2018";
        sha256 = "1jpdrl5jj01961jxhmvj7v25ws928fyfj8ms7izifnhg0ggw08cb";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.4.29";
        edition = "2018";
        sha256 = "15bk4rjqny6drwgv7r47dj5wxaq9j5rrkfb6wb3x7c9i18kyrdif";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (builtins.elem "atomics" targetFeatures);
            features = [ "MessageEvent" "Worker" ];
          }
        ];
        features = {
          "futures-core-03-stream" = [ "futures-core" ];
        };
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.79";
        edition = "2018";
        sha256 = "00gdh0dlf2r77mxwh08q0z01vz2z7mvrllmj4gjjx9a0kvb06hig";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.79";
        edition = "2018";
        sha256 = "1g1fjqvrkrf3j20z8nxsf60cypxg9dfvpbachl2b53908q6s7a5z";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.79";
        edition = "2018";
        sha256 = "18h67l9b9jn06iw9r2p7bh9i0brh24lilcp4f26f4f24bh1qv59x";
        authors = [
          "The wasm-bindgen Developers"
        ];

      };
      "wasm-gc-api" = rec {
        crateName = "wasm-gc-api";
        version = "0.1.11";
        edition = "2015";
        sha256 = "1fc6444a3cq9dk8gq84nlix512q8m5hm7mcggx7c3rn7ns8jdhyh";
        libName = "wasm_gc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.32.0";
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];

      };
      "wasm-timer" = rec {
        crateName = "wasm-timer";
        version = "0.2.5";
        edition = "2018";
        sha256 = "0zsyijv3wgj9p4q47a4awla8j4kw33jd7da2fsd1wml0nh6wn3my";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
            features = [ "Performance" "Window" ];
          }
        ];

      };
      "wasmi" = rec {
        crateName = "wasmi";
        version = "0.9.1";
        edition = "2018";
        crateBin = [];
        sha256 = "0pbrxg8fzac6pgwv74ycr7i6qmhyqfzfv8613v4qx6iighaca06a";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];
        dependencies = [
          {
            name = "downcast-rs";
            packageId = "downcast-rs";
            usesDefaultFeatures = false;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
          {
            name = "memory_units";
            packageId = "memory_units";
          }
          {
            name = "num-rational";
            packageId = "num-rational 0.2.4";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.42.2";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmi-validation";
            packageId = "wasmi-validation";
            rename = "validation";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "core" = [ "vec_memory" "validation/core" "libm" ];
          "default" = [ "std" ];
          "reduced-stack-buffer" = [ "parity-wasm/reduced-stack-buffer" ];
          "std" = [ "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" ];
      };
      "wasmi-validation" = rec {
        crateName = "wasmi-validation";
        version = "0.4.1";
        edition = "2018";
        sha256 = "0dvrdppm7nybrzqh53bg7vps5j824xsq1qnaxc4zq660svn46lqn";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "parity-wasm";
            packageId = "parity-wasm 0.42.2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "parity-wasm/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "wasmparser" = rec {
        crateName = "wasmparser";
        version = "0.81.0";
        edition = "2018";
        sha256 = "1g4s5dmvrjibkwvp25fcvglflv3ncwpw5zbfhc5d0qwza53094wq";
        authors = [
          "Yury Delendik <ydelendik@mozilla.com>"
        ];
        features = {
        };
      };
      "wasmtime" = rec {
        crateName = "wasmtime";
        version = "0.31.0";
        edition = "2018";
        sha256 = "04xvnpvg62lc9srszhakfxdbjdj0hhp0a5waykxx2ilkqjq0c79i";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpp_demangle";
            packageId = "cpp_demangle";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "read_core" "elf" ];
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "psm";
            packageId = "psm";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "region";
            packageId = "region";
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
          }
          {
            name = "wasmtime-cache";
            packageId = "wasmtime-cache";
            optional = true;
          }
          {
            name = "wasmtime-cranelift";
            packageId = "wasmtime-cranelift";
            optional = true;
          }
          {
            name = "wasmtime-environ";
            packageId = "wasmtime-environ";
          }
          {
            name = "wasmtime-jit";
            packageId = "wasmtime-jit";
          }
          {
            name = "wasmtime-runtime";
            packageId = "wasmtime-runtime";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
          }
        ];
        features = {
          "all-arch" = [ "wasmtime-cranelift/all-arch" ];
          "async" = [ "wasmtime-fiber" "wasmtime-runtime/async" "async-trait" ];
          "cache" = [ "wasmtime-cache" ];
          "cranelift" = [ "wasmtime-cranelift" ];
          "default" = [ "async" "cache" "wat" "jitdump" "parallel-compilation" "cranelift" ];
          "jitdump" = [ "wasmtime-jit/jitdump" ];
          "parallel-compilation" = [ "rayon" ];
          "posix-signals-on-macos" = [ "wasmtime-runtime/posix-signals-on-macos" ];
          "uffd" = [ "wasmtime-runtime/uffd" ];
          "vtune" = [ "wasmtime-jit/vtune" ];
        };
        resolvedDefaultFeatures = [ "cache" "cranelift" "jitdump" "parallel-compilation" "rayon" "wasmtime-cache" "wasmtime-cranelift" ];
      };
      "wasmtime-cache" = rec {
        crateName = "wasmtime-cache";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1ig2mf06mki1x0rs9bmvwadpjimlffjifnvf17f3flcrlhq7j51n";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "directories-next";
            packageId = "directories-next";
          }
          {
            name = "file-per-thread-logger";
            packageId = "file-per-thread-logger";
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "rsix";
            packageId = "rsix";
            target = { target, features }: (!(target."os" == "windows"));
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "zstd";
            packageId = "zstd";
            usesDefaultFeatures = false;
          }
        ];

      };
      "wasmtime-cranelift" = rec {
        crateName = "wasmtime-cranelift";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1rz268s2y06fwij2mf50xnd3yrqdchqrh7baq2m3iphygsj86c5b";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
          {
            name = "cranelift-frontend";
            packageId = "cranelift-frontend";
          }
          {
            name = "cranelift-native";
            packageId = "cranelift-native";
          }
          {
            name = "cranelift-wasm";
            packageId = "cranelift-wasm";
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            usesDefaultFeatures = false;
            features = [ "read" "std" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "write" ];
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
          }
          {
            name = "wasmtime-environ";
            packageId = "wasmtime-environ";
          }
        ];
        features = {
          "all-arch" = [ "cranelift-codegen/all-arch" ];
        };
      };
      "wasmtime-environ" = rec {
        crateName = "wasmtime-environ";
        version = "0.31.0";
        edition = "2018";
        sha256 = "041m0xq6wxlppij75l8pi9f6alnmxaj1l6hiqhxha8akcm5ijb8w";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "log";
            packageId = "log";
            usesDefaultFeatures = false;
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "read_core" "write_core" "elf" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
          }
          {
            name = "wasmtime-types";
            packageId = "wasmtime-types";
          }
        ];

      };
      "wasmtime-jit" = rec {
        crateName = "wasmtime-jit";
        version = "0.31.0";
        edition = "2018";
        sha256 = "049x08xm4c3fmhqd1rcy035qjwr51ibbvz8nkz2hlcffwkgwhjl6";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line 0.16.0";
            usesDefaultFeatures = false;
          }
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            usesDefaultFeatures = false;
            features = [ "std" "read" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "object";
            packageId = "object";
            usesDefaultFeatures = false;
            features = [ "std" "read_core" "elf" ];
          }
          {
            name = "region";
            packageId = "region";
          }
          {
            name = "rsix";
            packageId = "rsix";
            optional = true;
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
          }
          {
            name = "wasmtime-environ";
            packageId = "wasmtime-environ";
          }
          {
            name = "wasmtime-runtime";
            packageId = "wasmtime-runtime";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "winnt" "impl-default" ];
          }
        ];
        features = {
          "jitdump" = [ "rsix" ];
          "vtune" = [ "ittapi-rs" ];
        };
        resolvedDefaultFeatures = [ "jitdump" "rsix" ];
      };
      "wasmtime-runtime" = rec {
        crateName = "wasmtime-runtime";
        version = "0.31.0";
        edition = "2018";
        sha256 = "12wc5lhjs9if9qs4c1lwfj5vgxj2kvcw5c6kpyd8rf967a0xm5xb";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "mach";
            packageId = "mach";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "region";
            packageId = "region";
          }
          {
            name = "rsix";
            packageId = "rsix";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmtime-environ";
            packageId = "wasmtime-environ";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "winbase" "memoryapi" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "async" = [ "wasmtime-fiber" ];
          "uffd" = [ "userfaultfd" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "wasmtime-types" = rec {
        crateName = "wasmtime-types";
        version = "0.31.0";
        edition = "2018";
        sha256 = "1ikryddihb7gcf6yc3swjrz75lvbrl65453brsygnysmqff4157z";
        authors = [
          "The Wasmtime Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
            features = [ "enable-serde" ];
          }
          {
            name = "serde";
            packageId = "serde";
            features = [ "derive" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser";
            usesDefaultFeatures = false;
          }
        ];

      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.56";
        edition = "2018";
        sha256 = "1sxqmwq773ss5m6vz7z95fdm6bqlix0s2awsy0j5gllxy8cv6q60";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "AbortSignal" = [ "EventTarget" ];
          "AnalyserNode" = [ "AudioNode" "EventTarget" ];
          "Animation" = [ "EventTarget" ];
          "AnimationEvent" = [ "Event" ];
          "AnimationPlaybackEvent" = [ "Event" ];
          "Attr" = [ "EventTarget" "Node" ];
          "AudioBufferSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "AudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "AudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "AudioNode" = [ "EventTarget" ];
          "AudioProcessingEvent" = [ "Event" ];
          "AudioScheduledSourceNode" = [ "AudioNode" "EventTarget" ];
          "AudioStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "AudioTrackList" = [ "EventTarget" ];
          "AudioWorklet" = [ "Worklet" ];
          "AudioWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "AudioWorkletNode" = [ "AudioNode" "EventTarget" ];
          "AuthenticatorAssertionResponse" = [ "AuthenticatorResponse" ];
          "AuthenticatorAttestationResponse" = [ "AuthenticatorResponse" ];
          "BaseAudioContext" = [ "EventTarget" ];
          "BatteryManager" = [ "EventTarget" ];
          "BeforeUnloadEvent" = [ "Event" ];
          "BiquadFilterNode" = [ "AudioNode" "EventTarget" ];
          "BlobEvent" = [ "Event" ];
          "Bluetooth" = [ "EventTarget" ];
          "BluetoothAdvertisingEvent" = [ "Event" ];
          "BluetoothDevice" = [ "EventTarget" ];
          "BluetoothPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "BluetoothRemoteGattCharacteristic" = [ "EventTarget" ];
          "BluetoothRemoteGattService" = [ "EventTarget" ];
          "BroadcastChannel" = [ "EventTarget" ];
          "CanvasCaptureMediaStream" = [ "EventTarget" "MediaStream" ];
          "CdataSection" = [ "CharacterData" "EventTarget" "Node" "Text" ];
          "ChannelMergerNode" = [ "AudioNode" "EventTarget" ];
          "ChannelSplitterNode" = [ "AudioNode" "EventTarget" ];
          "CharacterData" = [ "EventTarget" "Node" ];
          "ChromeWorker" = [ "EventTarget" "Worker" ];
          "Clipboard" = [ "EventTarget" ];
          "ClipboardEvent" = [ "Event" ];
          "CloseEvent" = [ "Event" ];
          "Comment" = [ "CharacterData" "EventTarget" "Node" ];
          "CompositionEvent" = [ "Event" "UiEvent" ];
          "ConstantSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "ConvolverNode" = [ "AudioNode" "EventTarget" ];
          "CssAnimation" = [ "Animation" "EventTarget" ];
          "CssConditionRule" = [ "CssGroupingRule" "CssRule" ];
          "CssCounterStyleRule" = [ "CssRule" ];
          "CssFontFaceRule" = [ "CssRule" ];
          "CssFontFeatureValuesRule" = [ "CssRule" ];
          "CssGroupingRule" = [ "CssRule" ];
          "CssImportRule" = [ "CssRule" ];
          "CssKeyframeRule" = [ "CssRule" ];
          "CssKeyframesRule" = [ "CssRule" ];
          "CssMediaRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssNamespaceRule" = [ "CssRule" ];
          "CssPageRule" = [ "CssRule" ];
          "CssStyleRule" = [ "CssRule" ];
          "CssStyleSheet" = [ "StyleSheet" ];
          "CssSupportsRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssTransition" = [ "Animation" "EventTarget" ];
          "CustomEvent" = [ "Event" ];
          "DedicatedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "DelayNode" = [ "AudioNode" "EventTarget" ];
          "DeviceLightEvent" = [ "Event" ];
          "DeviceMotionEvent" = [ "Event" ];
          "DeviceOrientationEvent" = [ "Event" ];
          "DeviceProximityEvent" = [ "Event" ];
          "Document" = [ "EventTarget" "Node" ];
          "DocumentFragment" = [ "EventTarget" "Node" ];
          "DocumentTimeline" = [ "AnimationTimeline" ];
          "DocumentType" = [ "EventTarget" "Node" ];
          "DomMatrix" = [ "DomMatrixReadOnly" ];
          "DomPoint" = [ "DomPointReadOnly" ];
          "DomRect" = [ "DomRectReadOnly" ];
          "DomRequest" = [ "EventTarget" ];
          "DragEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "DynamicsCompressorNode" = [ "AudioNode" "EventTarget" ];
          "Element" = [ "EventTarget" "Node" ];
          "ErrorEvent" = [ "Event" ];
          "EventSource" = [ "EventTarget" ];
          "ExtendableEvent" = [ "Event" ];
          "ExtendableMessageEvent" = [ "Event" "ExtendableEvent" ];
          "FetchEvent" = [ "Event" "ExtendableEvent" ];
          "FetchObserver" = [ "EventTarget" ];
          "File" = [ "Blob" ];
          "FileReader" = [ "EventTarget" ];
          "FileSystemDirectoryEntry" = [ "FileSystemEntry" ];
          "FileSystemFileEntry" = [ "FileSystemEntry" ];
          "FocusEvent" = [ "Event" "UiEvent" ];
          "FontFaceSet" = [ "EventTarget" ];
          "FontFaceSetLoadEvent" = [ "Event" ];
          "GainNode" = [ "AudioNode" "EventTarget" ];
          "GamepadAxisMoveEvent" = [ "Event" "GamepadEvent" ];
          "GamepadButtonEvent" = [ "Event" "GamepadEvent" ];
          "GamepadEvent" = [ "Event" ];
          "GpuDevice" = [ "EventTarget" ];
          "GpuUncapturedErrorEvent" = [ "Event" ];
          "HashChangeEvent" = [ "Event" ];
          "Hid" = [ "EventTarget" ];
          "HidConnectionEvent" = [ "Event" ];
          "HidDevice" = [ "EventTarget" ];
          "HidInputReportEvent" = [ "Event" ];
          "HtmlAnchorElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAudioElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "HtmlBaseElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBodyElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlButtonElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlCanvasElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDetailsElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDialogElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDirectoryElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDivElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDocument" = [ "Document" "EventTarget" "Node" ];
          "HtmlElement" = [ "Element" "EventTarget" "Node" ];
          "HtmlEmbedElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFieldSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFontElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFormControlsCollection" = [ "HtmlCollection" ];
          "HtmlFormElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadingElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHtmlElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlIFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlImageElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlInputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLabelElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLegendElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLiElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLinkElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMapElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMediaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuItemElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMetaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMeterElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlModElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlObjectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptGroupElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionsCollection" = [ "HtmlCollection" ];
          "HtmlOutputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParagraphElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParamElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPictureElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPreElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlProgressElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlQuoteElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlScriptElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSelectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSlotElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSourceElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSpanElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlStyleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCaptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCellElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableColElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableRowElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableSectionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTemplateElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTextAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTimeElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTitleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTrackElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUnknownElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlVideoElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "IdbCursorWithValue" = [ "IdbCursor" ];
          "IdbDatabase" = [ "EventTarget" ];
          "IdbFileHandle" = [ "EventTarget" ];
          "IdbFileRequest" = [ "DomRequest" "EventTarget" ];
          "IdbLocaleAwareKeyRange" = [ "IdbKeyRange" ];
          "IdbMutableFile" = [ "EventTarget" ];
          "IdbOpenDbRequest" = [ "EventTarget" "IdbRequest" ];
          "IdbRequest" = [ "EventTarget" ];
          "IdbTransaction" = [ "EventTarget" ];
          "IdbVersionChangeEvent" = [ "Event" ];
          "IirFilterNode" = [ "AudioNode" "EventTarget" ];
          "ImageCaptureErrorEvent" = [ "Event" ];
          "InputEvent" = [ "Event" "UiEvent" ];
          "KeyboardEvent" = [ "Event" "UiEvent" ];
          "KeyframeEffect" = [ "AnimationEffect" ];
          "LocalMediaStream" = [ "EventTarget" "MediaStream" ];
          "MediaDevices" = [ "EventTarget" ];
          "MediaElementAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaEncryptedEvent" = [ "Event" ];
          "MediaKeyError" = [ "Event" ];
          "MediaKeyMessageEvent" = [ "Event" ];
          "MediaKeySession" = [ "EventTarget" ];
          "MediaQueryList" = [ "EventTarget" ];
          "MediaQueryListEvent" = [ "Event" ];
          "MediaRecorder" = [ "EventTarget" ];
          "MediaRecorderErrorEvent" = [ "Event" ];
          "MediaSource" = [ "EventTarget" ];
          "MediaStream" = [ "EventTarget" ];
          "MediaStreamAudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamEvent" = [ "Event" ];
          "MediaStreamTrack" = [ "EventTarget" ];
          "MediaStreamTrackEvent" = [ "Event" ];
          "MessageEvent" = [ "Event" ];
          "MessagePort" = [ "EventTarget" ];
          "MidiAccess" = [ "EventTarget" ];
          "MidiConnectionEvent" = [ "Event" ];
          "MidiInput" = [ "EventTarget" "MidiPort" ];
          "MidiMessageEvent" = [ "Event" ];
          "MidiOutput" = [ "EventTarget" "MidiPort" ];
          "MidiPort" = [ "EventTarget" ];
          "MouseEvent" = [ "Event" "UiEvent" ];
          "MouseScrollEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "MutationEvent" = [ "Event" ];
          "NetworkInformation" = [ "EventTarget" ];
          "Node" = [ "EventTarget" ];
          "Notification" = [ "EventTarget" ];
          "NotificationEvent" = [ "Event" "ExtendableEvent" ];
          "OfflineAudioCompletionEvent" = [ "Event" ];
          "OfflineAudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "OfflineResourceList" = [ "EventTarget" ];
          "OffscreenCanvas" = [ "EventTarget" ];
          "OscillatorNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "PageTransitionEvent" = [ "Event" ];
          "PaintWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "PannerNode" = [ "AudioNode" "EventTarget" ];
          "PaymentMethodChangeEvent" = [ "Event" "PaymentRequestUpdateEvent" ];
          "PaymentRequestUpdateEvent" = [ "Event" ];
          "Performance" = [ "EventTarget" ];
          "PerformanceMark" = [ "PerformanceEntry" ];
          "PerformanceMeasure" = [ "PerformanceEntry" ];
          "PerformanceNavigationTiming" = [ "PerformanceEntry" "PerformanceResourceTiming" ];
          "PerformanceResourceTiming" = [ "PerformanceEntry" ];
          "PermissionStatus" = [ "EventTarget" ];
          "PointerEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "PopStateEvent" = [ "Event" ];
          "PopupBlockedEvent" = [ "Event" ];
          "PresentationAvailability" = [ "EventTarget" ];
          "PresentationConnection" = [ "EventTarget" ];
          "PresentationConnectionAvailableEvent" = [ "Event" ];
          "PresentationConnectionCloseEvent" = [ "Event" ];
          "PresentationConnectionList" = [ "EventTarget" ];
          "PresentationRequest" = [ "EventTarget" ];
          "ProcessingInstruction" = [ "CharacterData" "EventTarget" "Node" ];
          "ProgressEvent" = [ "Event" ];
          "PromiseRejectionEvent" = [ "Event" ];
          "PublicKeyCredential" = [ "Credential" ];
          "PushEvent" = [ "Event" "ExtendableEvent" ];
          "RadioNodeList" = [ "NodeList" ];
          "RtcDataChannel" = [ "EventTarget" ];
          "RtcDataChannelEvent" = [ "Event" ];
          "RtcPeerConnection" = [ "EventTarget" ];
          "RtcPeerConnectionIceEvent" = [ "Event" ];
          "RtcTrackEvent" = [ "Event" ];
          "RtcdtmfSender" = [ "EventTarget" ];
          "RtcdtmfToneChangeEvent" = [ "Event" ];
          "Screen" = [ "EventTarget" ];
          "ScreenOrientation" = [ "EventTarget" ];
          "ScriptProcessorNode" = [ "AudioNode" "EventTarget" ];
          "ScrollAreaEvent" = [ "Event" "UiEvent" ];
          "SecurityPolicyViolationEvent" = [ "Event" ];
          "ServiceWorker" = [ "EventTarget" ];
          "ServiceWorkerContainer" = [ "EventTarget" ];
          "ServiceWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "ServiceWorkerRegistration" = [ "EventTarget" ];
          "ShadowRoot" = [ "DocumentFragment" "EventTarget" "Node" ];
          "SharedWorker" = [ "EventTarget" ];
          "SharedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "SourceBuffer" = [ "EventTarget" ];
          "SourceBufferList" = [ "EventTarget" ];
          "SpeechRecognition" = [ "EventTarget" ];
          "SpeechRecognitionError" = [ "Event" ];
          "SpeechRecognitionEvent" = [ "Event" ];
          "SpeechSynthesis" = [ "EventTarget" ];
          "SpeechSynthesisErrorEvent" = [ "Event" "SpeechSynthesisEvent" ];
          "SpeechSynthesisEvent" = [ "Event" ];
          "SpeechSynthesisUtterance" = [ "EventTarget" ];
          "StereoPannerNode" = [ "AudioNode" "EventTarget" ];
          "StorageEvent" = [ "Event" ];
          "SvgAnimateElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateMotionElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateTransformElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimationElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgCircleElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgClipPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgComponentTransferFunctionElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgDefsElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgDescElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgElement" = [ "Element" "EventTarget" "Node" ];
          "SvgEllipseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgFilterElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgForeignObjectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGeometryElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgGraphicsElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgLineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgLinearGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgMarkerElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMaskElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMetadataElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPathSegArcAbs" = [ "SvgPathSeg" ];
          "SvgPathSegArcRel" = [ "SvgPathSeg" ];
          "SvgPathSegClosePath" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalRel" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoRel" = [ "SvgPathSeg" ];
          "SvgPatternElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPolygonElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPolylineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgRadialGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgRectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgScriptElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSetElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgStopElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgStyleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSwitchElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgSymbolElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgTextContentElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgTextElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "SvgTextPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTextPositioningElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTitleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgUseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgViewElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgaElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgfeBlendElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeColorMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeComponentTransferElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeCompositeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeConvolveMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDiffuseLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDisplacementMapElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDistantLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDropShadowElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFloodElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFuncAElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncBElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncGElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncRElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeGaussianBlurElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeNodeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMorphologyElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeOffsetElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfePointLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpecularLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpotLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTileElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTurbulenceElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvggElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgmPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgsvgElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgtSpanElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "TcpServerSocket" = [ "EventTarget" ];
          "TcpServerSocketEvent" = [ "Event" ];
          "TcpSocket" = [ "EventTarget" ];
          "TcpSocketErrorEvent" = [ "Event" ];
          "TcpSocketEvent" = [ "Event" ];
          "Text" = [ "CharacterData" "EventTarget" "Node" ];
          "TextTrack" = [ "EventTarget" ];
          "TextTrackCue" = [ "EventTarget" ];
          "TextTrackList" = [ "EventTarget" ];
          "TimeEvent" = [ "Event" ];
          "TouchEvent" = [ "Event" "UiEvent" ];
          "TrackEvent" = [ "Event" ];
          "TransitionEvent" = [ "Event" ];
          "UiEvent" = [ "Event" ];
          "Usb" = [ "EventTarget" ];
          "UsbConnectionEvent" = [ "Event" ];
          "UsbPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "UserProximityEvent" = [ "Event" ];
          "ValueEvent" = [ "Event" ];
          "VideoStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "VideoTrackList" = [ "EventTarget" ];
          "VrDisplay" = [ "EventTarget" ];
          "VttCue" = [ "EventTarget" "TextTrackCue" ];
          "WakeLockSentinel" = [ "EventTarget" ];
          "WaveShaperNode" = [ "AudioNode" "EventTarget" ];
          "WebGlContextEvent" = [ "Event" ];
          "WebKitCssMatrix" = [ "DomMatrix" "DomMatrixReadOnly" ];
          "WebSocket" = [ "EventTarget" ];
          "WheelEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "Window" = [ "EventTarget" ];
          "WindowClient" = [ "Client" ];
          "Worker" = [ "EventTarget" ];
          "WorkerDebuggerGlobalScope" = [ "EventTarget" ];
          "WorkerGlobalScope" = [ "EventTarget" ];
          "XmlDocument" = [ "Document" "EventTarget" "Node" ];
          "XmlHttpRequest" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "XmlHttpRequestEventTarget" = [ "EventTarget" ];
          "XmlHttpRequestUpload" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "Xr" = [ "EventTarget" ];
          "XrBoundedReferenceSpace" = [ "EventTarget" "XrReferenceSpace" "XrSpace" ];
          "XrInputSourceEvent" = [ "Event" ];
          "XrInputSourcesChangeEvent" = [ "Event" ];
          "XrReferenceSpace" = [ "EventTarget" "XrSpace" ];
          "XrReferenceSpaceEvent" = [ "Event" ];
          "XrSession" = [ "EventTarget" ];
          "XrSessionEvent" = [ "Event" ];
          "XrSpace" = [ "EventTarget" ];
          "XrViewerPose" = [ "XrPose" ];
        };
        resolvedDefaultFeatures = [ "Crypto" "Event" "EventTarget" "MessageEvent" "Performance" "Window" "Worker" ];
      };
      "webpki" = rec {
        crateName = "webpki";
        version = "0.21.4";
        edition = "2018";
        sha256 = "1sm4i8c5bw3bdhi7mjk0wpvwx55hvsmyn0k2lpa4cb161038rqxq";
        libPath = "src/webpki.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        features = {
          "default" = [ "std" "trust_anchor_util" ];
          "trust_anchor_util" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "trust_anchor_util" ];
      };
      "webpki-roots" = rec {
        crateName = "webpki-roots";
        version = "0.21.1";
        edition = "2018";
        crateBin = [];
        sha256 = "0h49lkr7hrxpyr0xg1nph4m3v1l6rhg8ax9n8msvfwz48hsibgma";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];

      };
      "wepoll-ffi" = rec {
        crateName = "wepoll-ffi";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1yxpkva08d5f6ih3b5hdb8h45mkz3jq3dh1bzjspfhy6qpnzshyp";
        authors = [
          "Philip Degarmo <aclysma@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "null-overlapped-wakeups-patch" ];
      };
      "which" = rec {
        crateName = "which";
        version = "4.2.4";
        edition = "2018";
        sha256 = "1ln1wmhb6k3al9zhbw8rzidr1imni55ajr3840hg474jgr47wnia";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "widestring" = rec {
        crateName = "widestring";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0z3ba8qrxb62vpfgk7n2xs2grm9kdaj1cz4q8s0gs8fx8h0r8s61";
        authors = [
          "Kathryn Long <squeeself@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi 0.3.9" = rec {
        crateName = "winapi";
        version = "0.3.9";
        edition = "2015";
        sha256 = "06gl025x418lchw1wxj64ycr7gha83m44cjr5sarhynd9xkrm0sw";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "accctrl" "aclapi" "basetsd" "cfg" "consoleapi" "errhandlingapi" "evntrace" "fileapi" "handleapi" "heapapi" "impl-debug" "impl-default" "in6addr" "inaddr" "ioapiset" "knownfolders" "ktmw32" "libloaderapi" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "mswsock" "namedpipeapi" "netioapi" "ntdef" "ntsecapi" "ntstatus" "objbase" "processenv" "processthreadsapi" "profileapi" "schannel" "securitybaseapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "timezoneapi" "winbase" "wincon" "wincrypt" "windef" "winerror" "winioctl" "winnt" "winreg" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" "wtypesbase" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0y71bp7f6d536czj40dhqk0d55wfbbwqfp2ymqf1an5ibgl6rv3h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];

      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winreg" = rec {
        crateName = "winreg";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1jdcqr6zmvwyrp87h48miasfdvv16gjsb60rc8dy2kqwb3mnv65j";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "wyz" = rec {
        crateName = "wyz";
        version = "0.2.0";
        edition = "2018";
        sha256 = "05028bk49b2ix1lz22sj65fnlxr0f29j2klkaqjxp6az3c6hprl5";
        authors = [
          "myrrlyn <self@myrrlyn.dev>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "x25519-dalek" = rec {
        crateName = "x25519-dalek";
        version = "1.1.1";
        edition = "2018";
        sha256 = "0kqzyy7sbv2054qc9q9ha899nbg8dkl6a2m0ysb3nzhha98i032s";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "DebugSteven <debugsteven@gmail.com>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek 3.2.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "our_serde" "curve25519-dalek/serde" ];
          "std" = [ "curve25519-dalek/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "u64_backend" ];
      };
      "yamux" = rec {
        crateName = "yamux";
        version = "0.9.0";
        edition = "2018";
        sha256 = "01y1crk8b1aifr67shqi276cllqvbh8rzrjbc4yfdmcd427h5ng7";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "log";
            packageId = "log";
          }
          {
            name = "nohash-hasher";
            packageId = "nohash-hasher";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot";
          }
          {
            name = "rand";
            packageId = "rand 0.8.5";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.21";
          }
        ];

      };
      "zeroize" = rec {
        crateName = "zeroize";
        version = "1.5.2";
        edition = "2018";
        sha256 = "01k0xmqd7l3yqzdfii7c5gxvdrb6m7bgi8l5q87f17n3cc08g23w";
        authors = [
          "The RustCrypto Project Developers"
        ];
        dependencies = [
          {
            name = "zeroize_derive";
            packageId = "zeroize_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "alloc" ];
          "derive" = [ "zeroize_derive" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "zeroize_derive" ];
      };
      "zeroize_derive" = rec {
        crateName = "zeroize_derive";
        version = "1.3.2";
        edition = "2018";
        sha256 = "05rs3m2bckzcfv52d7qphicic65l4m1gqjswsa0gdm6s85v1i3rz";
        procMacro = true;
        authors = [
          "The RustCrypto Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];

      };
      "zstd" = rec {
        crateName = "zstd";
        version = "0.9.2+zstd.1.5.1";
        edition = "2018";
        sha256 = "0m5aik2jy2w1g68i4isa0c3gq9a7avq9abgjfjbc6f60yqdym413";
        authors = [
          "Alexandre Bury <alexandre.bury@gmail.com>"
        ];
        dependencies = [
          {
            name = "zstd-safe";
            packageId = "zstd-safe";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        features = {
          "arrays" = [ "zstd-safe/arrays" ];
          "bindgen" = [ "zstd-safe/bindgen" ];
          "debug" = [ "zstd-safe/debug" ];
          "default" = [ "legacy" "arrays" ];
          "experimental" = [ "zstd-safe/experimental" ];
          "legacy" = [ "zstd-safe/legacy" ];
          "no_asm" = [ "zstd-safe/no_asm" ];
          "pkg-config" = [ "zstd-safe/pkg-config" ];
          "thin" = [ "zstd-safe/thin" ];
          "zstdmt" = [ "zstd-safe/zstdmt" ];
        };
      };
      "zstd-safe" = rec {
        crateName = "zstd-safe";
        version = "4.1.3+zstd.1.5.1";
        edition = "2018";
        sha256 = "0yfvqzzkbj871f2vaikal5rm2gf60p1mdzp3jk3w5hmkkywq37g9";
        authors = [
          "Alexandre Bury <alexandre.bury@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "zstd-sys";
            packageId = "zstd-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "bindgen" = [ "zstd-sys/bindgen" ];
          "debug" = [ "zstd-sys/debug" ];
          "default" = [ "legacy" "arrays" ];
          "experimental" = [ "zstd-sys/experimental" ];
          "legacy" = [ "zstd-sys/legacy" ];
          "no_asm" = [ "zstd-sys/no_asm" ];
          "pkg-config" = [ "zstd-sys/pkg-config" ];
          "std" = [ "zstd-sys/std" ];
          "thin" = [ "zstd-sys/thin" ];
          "zstdmt" = [ "zstd-sys/zstdmt" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "zstd-sys" = rec {
        crateName = "zstd-sys";
        version = "1.6.2+zstd.1.5.1";
        edition = "2018";
        sha256 = "17xcr0mw8ps9hlc8m0dzj7yd52lb9r9ic9fbpxa4994yilj2zbrd";
        authors = [
          "Alexandre Bury <alexandre.bury@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
        ];
        features = {
          "default" = [ "legacy" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
    This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os =
      if stdenv.hostPlatform.isDarwin
      then "macos"
      else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
    of crate given as the second argument.

    testCrateFlags: list of flags to pass to the test exectuable
    testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs, testPreRun, testPostRun }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    assert builtins.typeOf testPreRun == "string";
    assert builtins.typeOf testPostRun == "string";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test =
        let
          drv = testCrate.override
            (
              _: {
                buildTests = true;
              }
            );
          # If the user hasn't set any pre/post commands, we don't want to
          # insert empty lines. This means that any existing users of crate2nix
          # don't get a spurious rebuild unless they set these explicitly.
          testCommand = pkgs.lib.concatStringsSep "\n"
            (pkgs.lib.filter (s: s != "") [
              testPreRun
              "$f $testCrateFlags 2>&1 | tee -a $out"
              testPostRun
            ]);
        in
        pkgs.runCommand "run-tests-${testCrate.name}"
          {
            inherit testCrateFlags;
            buildInputs = testInputs;
          } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            ${testCommand}
          done
        '';
    in
    pkgs.runCommand "${crate.name}-linked"
      {
        inherit (crate) outputs crateName;
        passthru = (crate.passthru or { }) // {
          inherit test;
        };
      } ''
      echo tested by ${test}
      ${lib.concatMapStringsSep "\n" (output: "ln -s ${crate.${output}} ${"$"}${output}") crate.outputs}
    '';

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateForPkgsFunc ? null
    , runTests ? false
    , testCrateFlags ? [ ]
    , testInputs ? [ ]
      # Any command to run immediatelly before a test is executed.
    , testPreRun ? ""
      # Any command run immediatelly after a test is executed.
    , testPostRun ? ""
    }:
    lib.makeOverridable
      (
        { features
        , crateOverrides
        , runTests
        , testCrateFlags
        , testInputs
        , testPreRun
        , testPostRun
        }:
        let
          buildRustCrateForPkgsFuncOverriden =
            if buildRustCrateForPkgsFunc != null
            then buildRustCrateForPkgsFunc
            else
              (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrateForPkgs
                else
                  pkgs: (buildRustCrateForPkgs pkgs).override {
                    defaultCrateOverrides = crateOverrides;
                  }
              );
          builtRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = false;
          };
          builtTestRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = true;
          };
          drv = builtRustCrates.crates.${packageId};
          testDrv = builtTestRustCrates.crates.${packageId};
          derivation =
            if runTests then
              crateWithTest
                {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs testPreRun testPostRun;
                }
            else drv;
        in
        derivation
      )
      { inherit features crateOverrides runTests testCrateFlags testInputs testPreRun testPostRun; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateForPkgsFunc
    for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateForPkgsFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures
          (
            args // {
              inherit rootPackageId;
              target = target // { test = runTests; };
            }
          );
        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageIdByPkgs = mkBuiltByPackageIdByPkgs pkgs;
        mkBuiltByPackageIdByPkgs = pkgs:
          let
            self = {
              crates = lib.mapAttrs (packageId: value: buildByPackageIdForPkgsImpl self pkgs packageId) crateConfigs;
              build = mkBuiltByPackageIdByPkgs pkgs.buildPackages;
            };
          in
          self;
        buildByPackageIdForPkgsImpl = self: pkgs: packageId:
          let
            features = mergedFeatures."${packageId}" or [ ];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or [ ]);
            dependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  # proc_macro crates must be compiled for the build architecture
                  if crateConfigs.${depPackageId}.procMacro or false
                  then self.build.crates.${depPackageId}
                  else self.crates.${depPackageId};
                dependencies =
                  (crateConfig.dependencies or [ ])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  self.build.crates.${depPackageId};
                dependencies = crateConfig.buildDependencies or [ ];
              };
            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };
            dependenciesWithRenames =
              lib.filter (d: d ? "rename")
                (
                  filterEnabledDependenciesForThis
                    (
                      (crateConfig.buildDependencies or [ ])
                      ++ (crateConfig.dependencies or [ ])
                      ++ devDependencies
                    )
                );
            # Crate renames have the form:
            #
            # {
            #    crate_name = [
            #       { version = "1.2.3"; rename = "crate_name01"; }
            #    ];
            #    # ...
            # }
            crateRenames =
              let
                grouped =
                  lib.groupBy
                    (dependency: dependency.name)
                    dependenciesWithRenames;
                versionAndRename = dep:
                  let
                    package = crateConfigs."${dep.packageId}";
                  in
                  { inherit (dep) rename; version = package.version; };
              in
              lib.mapAttrs (name: choices: builtins.map versionAndRename choices) grouped;
          in
          buildRustCrateForPkgsFunc pkgs
            (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl rec {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 =
                      assert (lib.assertMsg (crateConfig ? sha256) "Missing sha256 for ${name}");
                      crateConfig.sha256;
                  }
                );
                extraRustcOpts = lib.lists.optional (targetFeatures != [ ]) "-C target-feature=${lib.concatMapStringsSep "," (x: "+${x}") targetFeatures}";
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
      builtByPackageIdByPkgs;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { buildByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: buildByPackageId dependency.packageId;
      in
      map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
    be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateForPkgsFunc = _: lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson
          (
            buildRustCrateWithFeatures {
              buildRustCrateForPkgsFunc = _: crate: {
                "01_crateName" = crate.crateName or false;
                "02_features" = crate.features or [ ];
                "03_dependencies" = crate.dependencies or [ ];
              };
              inherit packageId;
            }
          );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
    { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
    features.

    This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) { } [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or [ ]) != (v."cargo".resolved_default_features or [ ])
          )
          combined;
      in
      builtins.toJSON {
        inherit onlyInCargo onlyInCrate2Nix differentFeatures;
      };

  /* Returns an attrset mapping packageId to the list of enabled features.

    If multiple paths to a dependency enable different features, the
    corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? { }
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or { }) features;
        enabledFeatures = enableFeatures (crateConfig.dependencies or [ ]) expandedFeatures;
        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures enabledFeatures dependency;
          in
          { inherit packageId features; };
        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = enabledFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
          foldOverCache
            (
              cache: { packageId, features }:
                let
                  cacheFeatures = cache.${packageId} or [ ];
                  combinedFeatures = sortedUnique (cacheFeatures ++ features);
                in
                if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                then cache
                else
                  mergePackageFeatures {
                    features = combinedFeatures;
                    featuresByPackageId = cache;
                    inherit crateConfigs packageId target runTests rootPackageId;
                  }
            );
        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [ ];
            combinedFeatures = sortedUnique (cacheFeatures ++ enabledFeatures);
          in
          featuresByPackageId // {
            "${packageId}" = combinedFeatures;
          };
        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep"
            (
              crateConfig.dependencies or [ ]
              ++ lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig.devDependencies or [ ])
            );
        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or [ ]);
      in
      cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
        let
          targetFunc = dep.target or (features: true);
        in
        targetFunc { inherit features target; }
        && (
          !(dep.optional or false)
          || builtins.any (doesFeatureEnableDependency dep) features
        )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = dependency: feature:
    let
      name = dependency.rename or dependency.name;
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
    feature == name || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
    rules in featureMap.

    featureMap is an attribute set which maps feature names to lists of further
    feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or [ ]));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
    sortedUnique outFeatures;

  /* This function adds optional dependencies as features if they are enabled
    indirectly by dependency features. This function mimics Cargo's behavior
    described in a note at:
    https://doc.rust-lang.org/nightly/cargo/reference/features.html#dependency-features
  */
  enableFeatures = dependencies: features:
    assert (builtins.isList features);
    assert (builtins.isList dependencies);
    let
      additionalFeatures = lib.concatMap
        (
          dependency:
            assert (builtins.isAttrs dependency);
            let
              enabled = builtins.any (doesFeatureEnableDependency dependency) features;
            in
            if (dependency.optional or false) && enabled
            then [ (dependency.rename or dependency.name) ]
            else [ ]
        )
        dependencies;
    in
    sortedUnique (features ++ additionalFeatures);

  /*
    Returns the actual features for the given dependency.

    features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil =
        if dependency.usesDefaultFeatures or true
        then [ "default" ]
        else [ ];
      explicitFeatures = dependency.features or [ ];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
        builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
    defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) { } features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
    builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #
  };
}

